{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/post.tsx","webpack:///./src/templates/blogTemplate.tsx"],"names":["Blog","data","toc","post","edges","node","pathname","location","query","Post","frontmatter","date","renderAst","htmlAst","BlogStructure","memo","title","sidebar","items","convertGraphqlToc","activePath","flat","Template","displayName","pageQuery"],"mappings":"+FAAA,0HASe,SAASA,EAAT,GAUP,QATPC,KACCC,EAQM,EARNA,IAGeC,EAKT,EAPNA,KACCC,MACE,GAAMC,KAIEC,EACL,EADPC,SAAYD,SAEZ,OAAO,kBAAC,gBAAD,CAAeJ,IAAKA,EAAKC,KAAMA,EAAMG,SAAUA,IAGhD,IAAME,EAAQ,c,kHCSNC,EAbmB,SAAC,GAAa,IAAXN,EAAW,EAAXA,KACpC,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,MACA,kBAAC,IAAD,KACC,4BAAKA,EAAKO,YAAYC,MACrBC,YAAUT,EAAKU,UAEjB,kBAAC,IAAD,Q,YC3BH,gIAiBO,IAAMC,EAA8CC,gBAC1D,gBAAGb,EAAH,EAAGA,IAAKI,EAAR,EAAQA,SAAUH,EAAlB,EAAkBA,KAAlB,OACC,kBAAC,IAAD,CACCa,MAAOb,EAAKa,MACZC,QACC,kBAAC,IAAD,CACCC,MAAOC,YAAkBjB,GACzBkB,WAAYd,EACZe,MAAM,KAIR,kBAAC,EAAD,CAAMlB,KAAMA,QAMA,SAASmB,EAAT,GAGP,QAFPrB,KAAQE,EAED,EAFCA,KAAMD,EAEP,EAFOA,IACFI,EACL,EADPC,SAAYD,SAEZ,OAAO,kBAACQ,EAAD,CAAeX,KAAMA,EAAMD,IAAKA,EAAKI,SAAUA,IANvDQ,EAAcS,YAAc,gBASrB,IAAMC,EAAY","file":"component---src-pages-blog-tsx-c9081d9e9b104711b34c.js","sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport { BlogStructure } from '../templates/blogTemplate'\n\n// Gatsby page handler for http://<domain>/blog\nexport default function Blog({\n\tdata: {\n\t\ttoc,\n\t\tpost: {\n\t\t\tedges: {\n\t\t\t\t[0]: { node: post },\n\t\t\t},\n\t\t},\n\t},\n\tlocation: { pathname },\n}: any) {\n\treturn <BlogStructure toc={toc} post={post} pathname={pathname} />\n}\n\nexport const query = graphql`\n\t{\n\t\tpost: allMarkdownRemark(\n\t\t\tsort: { order: DESC, fields: frontmatter___date }\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t\tlimit: 1\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\thtml\n\t\t\t\t\thtmlAst\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport React from 'react'\nimport renderAst from '../util/renderHtmlAst'\nimport { TextContainer, Gutter, TextContent } from './common'\n\nexport interface PostProps {\n\tpost: {\n\t\thtml: string\n\t\thtmlAst: any\n\t\tfrontmatter: {\n\t\t\tdate: string\n\t\t}\n\t}\n}\n\nconst Post: React.FC<PostProps> = ({ post }) => {\n\treturn (\n\t\t<TextContainer>\n\t\t\t<Gutter />\n\t\t\t<TextContent>\n\t\t\t\t<h6>{post.frontmatter.date}</h6>\n\t\t\t\t{renderAst(post.htmlAst)}\n\t\t\t</TextContent>\n\t\t\t<Gutter />\n\t\t</TextContainer>\n\t)\n}\n\nexport default Post\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport React, { memo } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport Post from '../components/post'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\n\nexport interface BlogStructureProps {\n\ttoc: any\n\tpathname: string\n\tpost: any\n}\nexport const BlogStructure: React.FC<BlogStructureProps> = memo(\n\t({ toc, pathname, post }) => (\n\t\t<Layout\n\t\t\ttitle={post.title}\n\t\t\tsidebar={\n\t\t\t\t<Sidebar\n\t\t\t\t\titems={convertGraphqlToc(toc)}\n\t\t\t\t\tactivePath={pathname}\n\t\t\t\t\tflat={true}\n\t\t\t\t/>\n\t\t\t}\n\t\t>\n\t\t\t<Post post={post} />\n\t\t</Layout>\n\t)\n)\nBlogStructure.displayName = 'BlogStructure'\n\nexport default function Template({\n\tdata: { post, toc },\n\tlocation: { pathname },\n}: any) {\n\treturn <BlogStructure post={post} toc={toc} pathname={pathname} />\n}\n\nexport const pageQuery = graphql`\n\tquery($path: String!) {\n\t\tpost: markdownRemark(frontmatter: { path: { eq: $path } }) {\n\t\t\thtml\n\t\t\thtmlAst\n\t\t\tfrontmatter {\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\tpath\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}