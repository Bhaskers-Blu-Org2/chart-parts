{"version":3,"sources":["webpack:///./src/components/post.tsx","webpack:///./src/templates/blogTemplate.tsx","webpack:///./src/pages/blog.tsx"],"names":["Container","styled","div","Gutter","Content","Post","post","frontmatter","date","renderAst","htmlAst","BlogStructure","memo","toc","pathname","title","sidebar","items","convertGraphqlToc","activePath","flat","Template","data","location","displayName","pageQuery","Blog","edges","node","query"],"mappings":"0JA+BMA,EAAYC,IAAOC,IAAV,kEAAGD,CAAH,mBAITE,EAASF,IAAOC,IAAV,+DAAGD,CAAH,aAING,EAAUH,IAAOC,IAAV,gEAAGD,CAAH,gDAMEI,EA3BmB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACpC,OACC,kBAACN,EAAD,KACC,kBAACG,EAAD,MACA,kBAACC,EAAD,KACC,4BAAKE,EAAKC,YAAYC,MACrBC,YAAUH,EAAKI,UAEjB,kBAACP,EAAD,Q,SC1BH,gIAiBO,IAAMQ,EAA8CC,gBAC1D,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAUR,EAAlB,EAAkBA,KAAlB,OACC,kBAAC,IAAD,CACCS,MAAOT,EAAKS,MACZC,QACC,kBAAC,IAAD,CACCC,MAAOC,YAAkBL,GACzBM,WAAYL,EACZM,MAAM,KAIR,kBAAC,EAAD,CAAMd,KAAMA,QAMA,SAASe,EAAT,GAGP,QAFPC,KAAQhB,EAED,EAFCA,KAAMO,EAEP,EAFOA,IACFC,EACL,EADPS,SAAYT,SAEZ,OAAO,kBAACH,EAAD,CAAeL,KAAMA,EAAMO,IAAKA,EAAKC,SAAUA,IANvDH,EAAca,YAAc,gBASrB,IAAMC,EAAY,c,iCC1CzB,kHASe,SAASC,EAAT,GAUP,QATPJ,KACCT,EAQM,EARNA,IAGeP,EAKT,EAPNA,KACCqB,MACE,GAAMC,KAIEd,EACL,EADPS,SAAYT,SAEZ,OAAO,kBAAC,gBAAD,CAAeD,IAAKA,EAAKP,KAAMA,EAAMQ,SAAUA,IAGhD,IAAMe,EAAQ","file":"component---src-pages-blog-tsx-811b9ed50863b85a21d2.js","sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport React from 'react'\nimport renderAst from '../util/renderHtmlAst'\nimport styled from 'styled-components'\nexport interface PostProps {\n\tpost: {\n\t\thtml: string\n\t\thtmlAst: any\n\t\tfrontmatter: {\n\t\t\tdate: string\n\t\t}\n\t}\n}\n\nconst Post: React.FC<PostProps> = ({ post }) => {\n\treturn (\n\t\t<Container>\n\t\t\t<Gutter />\n\t\t\t<Content>\n\t\t\t\t<h6>{post.frontmatter.date}</h6>\n\t\t\t\t{renderAst(post.htmlAst)}\n\t\t\t</Content>\n\t\t\t<Gutter />\n\t\t</Container>\n\t)\n}\n\nconst Container = styled.div`\n\tdisplay: flex;\n`\n\nconst Gutter = styled.div`\n\tflex: 1;\n`\n\nconst Content = styled.div`\n\tflex: 5;\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nexport default Post\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport React, { memo } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport Post from '../components/post'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\n\nexport interface BlogStructureProps {\n\ttoc: any\n\tpathname: string\n\tpost: any\n}\nexport const BlogStructure: React.FC<BlogStructureProps> = memo(\n\t({ toc, pathname, post }) => (\n\t\t<Layout\n\t\t\ttitle={post.title}\n\t\t\tsidebar={\n\t\t\t\t<Sidebar\n\t\t\t\t\titems={convertGraphqlToc(toc)}\n\t\t\t\t\tactivePath={pathname}\n\t\t\t\t\tflat={true}\n\t\t\t\t/>\n\t\t\t}\n\t\t>\n\t\t\t<Post post={post} />\n\t\t</Layout>\n\t)\n)\nBlogStructure.displayName = 'BlogStructure'\n\nexport default function Template({\n\tdata: { post, toc },\n\tlocation: { pathname },\n}: any) {\n\treturn <BlogStructure post={post} toc={toc} pathname={pathname} />\n}\n\nexport const pageQuery = graphql`\n\tquery($path: String!) {\n\t\tpost: markdownRemark(frontmatter: { path: { eq: $path } }) {\n\t\t\thtml\n\t\t\thtmlAst\n\t\t\tfrontmatter {\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\tpath\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport React from 'react'\nimport { graphql } from 'gatsby'\nimport { BlogStructure } from '../templates/blogTemplate'\n\n// Gatsby page handler for http://<domain>/blog\nexport default function Blog({\n\tdata: {\n\t\ttoc,\n\t\tpost: {\n\t\t\tedges: {\n\t\t\t\t[0]: { node: post },\n\t\t\t},\n\t\t},\n\t},\n\tlocation: { pathname },\n}: any) {\n\treturn <BlogStructure toc={toc} post={post} pathname={pathname} />\n}\n\nexport const query = graphql`\n\t{\n\t\tpost: allMarkdownRemark(\n\t\t\tsort: { order: DESC, fields: frontmatter___date }\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t\tlimit: 1\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\thtml\n\t\t\t\t\thtmlAst\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}