{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/blog/introduction ","webpackCompilationHash":"fec2619752f3cdda5632","result":{"data":{"post":{"html":"<h1>Introducing chart-parts (apologies for the late post)</h1>\n<p><sub>By: Chris Trevino - <a href=\"https://github.com/darthtrevino\">GitHub</a> <a href=\"https://twitter.com/darthtrevino\">Twitter</a></sub></p>\n<p>Our team at Microsoft Research is passionate about making great user experiences, and often our user experiences involve making charts. One idea that we've found is particularly interesting is the <a href=\"https://www.springer.com/us/book/9780387245447\"><em>Grammar of Graphics</em></a> by Leland Wilkinson.</p>\n<p>Here's a <a href=\"https://www.youtube.com/watch?v=qqffsEHKMcM\">link to a talk</a> I gave at React-Conf 2018 describing the intent behind this project. There are a lot of great charting libraries in the JavaScript ecosystem - however, we wanted something more flexible, that did have an encoded taxonomy, but was less legwork than using raw d3. We surveyed the landscape of Grammar of Graphics implementations, and did not find any that suited our particular needs: Vega was the best implementation, however it's a relatively sealed system and difficult to customize and integrate with in application code.</p>\n<p>Our goal with chart-parts has been to make a library with the same expressiveness of Vega, but that interacted naturally in application code, particularly with React.</p>\n<p>There's a lot of work left to be done, but this is an idea we're passionate about and we hope you find it useful.</p>\n<p>-Chris</p>","frontmatter":{"date":"July 18, 2018","path":"/blog/introduction ","title":"Introducing chart-parts"}},"toc":{"edges":[{"node":{"frontmatter":{"title":"Introducing chart-parts","path":"/blog/introduction ","order":null}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}