{"version":3,"sources":["webpack:///./src/pages/documentation.tsx","webpack:///./src/components/doc.tsx"],"names":["__webpack_exports__","default","_ref","_ref$data","data","toc","currentPage","react__WEBPACK_IMPORTED_MODULE_0__","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","a","title","frontmatter","sidebar","_components_sidebar__WEBPACK_IMPORTED_MODULE_2__","items","Object","_util_convertGraphqlToc__WEBPACK_IMPORTED_MODULE_4__","activePath","_components_doc__WEBPACK_IMPORTED_MODULE_3__","docPage","query","Container","styled_components__WEBPACK_IMPORTED_MODULE_1__","div","withConfig","displayName","Gutter","Content","_util_renderHtmlAst__WEBPACK_IMPORTED_MODULE_2__","htmlAst"],"mappings":"oLAoBAA,EAAAC,QAbsB,SAAAC,GAAyC,IAAAC,EAAAD,EAAtCE,KAAQC,EAA8BF,EAA9BE,IAAKC,EAAyBH,EAAzBG,YACpC,OACEC,EAAAC,cAACC,EAAAC,GACCC,MAAOL,EAAYM,YAAYD,MAC/BE,QACEN,EAAAC,cAACM,EAAAJ,GAAQK,MAAOC,OAAAC,EAAAP,EAAAM,CAAkBX,GAAMa,WAAW,oBAGrDX,EAAAC,cAACW,EAAAT,GAAIU,QAASd,MAOb,IAAMe,8ECFPC,EAAYC,EAAAb,EAAOc,IAAnBC,YAAAC,YAAA,kBAAYH,EAAZ,kBAIAI,EAASJ,EAAAb,EAAOc,IAAhBC,YAAAC,YAAA,eAASH,EAAT,YAIAK,EAAUL,EAAAb,EAAOc,IAAjBC,YAAAC,YAAA,gBAAUH,EAAV,+CAMNvB,EAAAU,EAxBiC,SAAAR,GAAiB,IAAdkB,EAAclB,EAAdkB,QAClC,OACEb,EAAAC,cAACc,EAAD,KACEf,EAAAC,cAACmB,EAAD,MACApB,EAAAC,cAACoB,EAAD,KAAUZ,OAAAa,EAAAnB,EAAAM,CAAUI,EAAQU,UAC5BvB,EAAAC,cAACmB,EAAD","file":"component---src-pages-documentation-tsx-1fb7fbfc86dd5c030ce6.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport Doc from '../components/doc'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\n\nconst Documentation = ({ data: { toc, currentPage } }: any) => {\n  return (\n    <Layout\n      title={currentPage.frontmatter.title}\n      sidebar={\n        <Sidebar items={convertGraphqlToc(toc)} activePath=\"/documentation\" />\n      }\n    >\n      <Doc docPage={currentPage} />\n    </Layout>\n  )\n}\n\nexport default Documentation\n\nexport const query = graphql`\n  {\n    currentPage: markdownRemark(\n      frontmatter: { path: { eq: \"/documentation/introduction\" } }\n    ) {\n      html\n      htmlAst\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n\n    toc: allMarkdownRemark(\n      filter: { frontmatter: { path: { regex: \"/^/documentation/.*/\" } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            order\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport renderAst from '../util/renderHtmlAst'\n\nexport interface DocProps {\n  docPage: {\n    htmlAst: any\n  }\n}\n\nconst Doc: React.SFC<DocProps> = ({ docPage }) => {\n  return (\n    <Container>\n      <Gutter />\n      <Content>{renderAst(docPage.htmlAst)}</Content>\n      <Gutter />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst Gutter = styled.div`\n  flex: 1;\n`\n\nconst Content = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default Doc\n"],"sourceRoot":""}