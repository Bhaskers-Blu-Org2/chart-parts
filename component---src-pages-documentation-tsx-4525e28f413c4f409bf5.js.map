{"version":3,"sources":["webpack:///./src/pages/documentation.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/util/theme.ts","webpack:///./src/configs/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/util/convertGraphqlToc.ts","webpack:///./src/components/sidebar/createTree.ts","webpack:///./src/components/sidebar/link_tree.tsx","webpack:///./src/components/sidebar/index.tsx","webpack:///../client/interfaces/lib/common-types.js","webpack:///../client/interfaces/lib/scenegraph.js","webpack:///../client/interfaces/lib/specification/scene.js","webpack:///../client/interfaces/lib/specification/axes.js","webpack:///../client/interfaces/lib/vdom/svg.js","webpack:///../processing/scenegraph/lib/registry.js","webpack:///../client/interfaces/lib/util/getItemSpace.js","webpack:///../client/interfaces/lib/defaults.js","webpack:///../processing/scenegraph/lib/elements/SceneNode.js","webpack:///../processing/scenegraph/lib/elements/items/Item.js","webpack:///../processing/scenegraph/lib/elements/items/ArcItem.js","webpack:///../processing/scenegraph/lib/elements/items/AreaItem.js","webpack:///../processing/scenegraph/lib/elements/items/GroupItem.js","webpack:///../processing/scenegraph/lib/elements/items/ImageItem.js","webpack:///../processing/scenegraph/lib/elements/items/LineItem.js","webpack:///../processing/scenegraph/lib/elements/items/PathItem.js","webpack:///../processing/scenegraph/lib/elements/items/RectItem.js","webpack:///../processing/scenegraph/lib/elements/items/RuleItem.js","webpack:///../processing/scenegraph/lib/elements/items/SymbolItem.js","webpack:///../processing/scenegraph/lib/elements/items/TextItem.js","webpack:///../processing/scenegraph/lib/elements/items/TrailItem.js","webpack:///../processing/scenegraph/lib/elements/items/ShapeItem.js","webpack:///../processing/scenegraph/lib/elements/items/index.js","webpack:///../processing/scenegraph/lib/elements/Mark.js","webpack:///../processing/scenegraph/lib/MarkBuilder.js","webpack:///../processing/scenegraph/lib/factory.js","webpack:///../processing/vsvg/lib/element_renderers/registry.js","webpack:///../processing/vsvg/lib/element_renderers/util.js","webpack:///../util/shapes/lib/Rectangle.js","webpack:///../util/shapes/lib/Trail.js","webpack:///../util/shapes/lib/parse.js","webpack:///../util/shapes/lib/arc.js","webpack:///../util/shapes/lib/render.js","webpack:///../util/shapes/lib/symbols.js","webpack:///../util/shapes/lib/index.js","webpack:///../processing/vsvg/lib/path/curves.js","webpack:///../processing/vsvg/lib/path/index.js","webpack:///../processing/vsvg/lib/element_renderers/interfaces.js","webpack:///../processing/vsvg/lib/element_renderers/ArcRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/AreaRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/GroupRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/ImageRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/LineRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/PathRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/RectRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/RuleRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/SymbolRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/TextRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/TrailRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/ShapeRenderer.js","webpack:///../processing/vsvg/lib/element_renderers/index.js","webpack:///../processing/vsvg/lib/VirtualSvgConverter.js","webpack:///../processing/scene/lib/scene/ChartOptionsManager.js","webpack:///../processing/scene/lib/scene/SceneFrame.js","webpack:///../processing/scene/lib/scene/marks/createBoundItem.js","webpack:///../processing/scene/lib/scene/axes/components/domain/index.js","webpack:///../processing/scene/lib/scene/axes/components/domain/crossValue.js","webpack:///../processing/scene/lib/scene/axes/components/tickLines/getTickValues.js","webpack:///../processing/scene/lib/scene/axes/components/tickLines/index.js","webpack:///../processing/scene/lib/scene/axes/components/tickLines/getLabelFormatter.js","webpack:///../processing/scene/lib/scene/axes/components/tickLabels/index.js","webpack:///../processing/scene/lib/scene/axes/components/index.js","webpack:///../processing/scene/lib/scene/axes/buildAxis.js","webpack:///../processing/scene/lib/scene/axes/getContext.js","webpack:///../processing/scene/lib/scene/axes/index.js","webpack:///../processing/scene/lib/scene/processNode.js","webpack:///../processing/scene/lib/scene/marks/buildMarkItem.js","webpack:///../processing/orchestrator/lib/Orchestrator.js","webpack:///../processing/scenegraph/lib/parse.js","webpack:///../processing/scene/lib/scene/index.js","webpack:///../client/builder/lib/SceneNodeBuilder.js","webpack:///../client/builder/lib/MarkBuilder.js","webpack:///../client/builder/lib/AxisBuilder.js","webpack:///../client/builder/lib/index.js","webpack:///../client/react/lib/Context.js","webpack:///../client/react/lib/ChartSpec.js","webpack:///../client/react/lib/Chart.js","webpack:///../client/react/lib/Axis.js","webpack:///../client/react/lib/scales/Scale.js","webpack:///../util/scales/lib/DomainScale.js","webpack:///../util/scales/lib/DomainRangeScale.js","webpack:///../util/scales/lib/getBoundRange.js","webpack:///../util/scales/lib/quantitative/QuantitativeScale.js","webpack:///../util/scales/lib/colorSchemeMap.js","webpack:///../util/scales/lib/quantitative/LinearScale.js","webpack:///../util/scales/lib/discrete/BandScale.js","webpack:///../util/scales/lib/discrete/OrdinalScale.js","webpack:///../client/react/lib/scales/DomainScale.js","webpack:///../client/react/lib/scales/DomainRangeScale.js","webpack:///../client/react/lib/scales/quantitative/LinearScale.js","webpack:///../util/scales/lib/index.js","webpack:///../client/react/lib/scales/quantitative/QuantitativeScale.js","webpack:///../client/react/lib/scales/discrete/BandScale.js","webpack:///../client/react/lib/scales/discrete/OrdinalScale.js","webpack:///../client/react/lib/marks/BaseMark.js","webpack:///../client/react/lib/interfaces.js","webpack:///../client/react/lib/marks/Group.js","webpack:///../client/react/lib/marks/Rect.js","webpack:///../client/react/lib/marks/Text.js","webpack:///../renderers/react-svg/lib/Renderer.js","webpack:///../util/transform/lib/interfaces.js","webpack:///./src/examples/charts/bar-chart.tsx","webpack:///./src/examples/charts/grouped-bar-chart.tsx","webpack:///../util/transform/lib/layout/StackTransform.js","webpack:///./src/examples/charts/stacked-bar-chart.tsx","webpack:///./src/examples/charts/index.ts","webpack:///./src/examples/mark-testers/util/chart.tsx","webpack:///./src/examples/mark-testers/util/slider.tsx","webpack:///./src/examples/mark-testers/util/constants.ts","webpack:///./src/examples/mark-testers/util/dropdown.tsx","webpack:///./src/examples/mark-testers/util/toggle.tsx","webpack:///./src/examples/mark-testers/util/single-mark-tester.tsx","webpack:///./src/examples/mark-testers/util/palette.ts","webpack:///./src/examples/mark-testers/arc-tester.tsx","webpack:///./src/examples/mark-testers/area-tester-horizontal.tsx","webpack:///./src/examples/mark-testers/area-tester-vertical.tsx","webpack:///./src/examples/mark-testers/group-tester.tsx","webpack:///./src/examples/mark-testers/line-tester.tsx","webpack:///./src/examples/mark-testers/rect-tester.tsx","webpack:///./src/examples/mark-testers/index.ts","webpack:///./src/examples/mark-testers/image-tester.tsx","webpack:///./src/examples/mark-testers/path-tester.tsx","webpack:///./src/examples/mark-testers/shape-tester.tsx","webpack:///./src/examples/mark-testers/rule-tester.tsx","webpack:///./src/examples/mark-testers/text-tester.tsx","webpack:///./src/examples/index.ts","webpack:///./src/components/doc.tsx"],"names":["__webpack_exports__","default","_ref","_ref$data","data","toc","introduction","react__WEBPACK_IMPORTED_MODULE_0__","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","a","logoTo","sidebar","_components_sidebar__WEBPACK_IMPORTED_MODULE_2__","items","Object","_util_convertGraphqlToc__WEBPACK_IMPORTED_MODULE_4__","activePath","_components_doc__WEBPACK_IMPORTED_MODULE_3__","docPage","query","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","topts","dist_default","typography_theme_github_dist_default","options","text","fontFamily","bodyFontFamily","join","lineHeight","baseLineHeight","highlight","palette","primary","alt","alt2","alt3","backgrounds","header","200","t","e","n","m","module","exports","__webpack_require__","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","c","204","r","i","o","s","Container","styled_components__WEBPACK_IMPORTED_MODULE_3__","div","withConfig","displayName","_util_theme__WEBPACK_IMPORTED_MODULE_4__","InnerContainer","Links","Title","h1","TitleLink","gatsby__WEBPACK_IMPORTED_MODULE_2__","Link","OuterLink","_ref$logoTo","react__WEBPACK_IMPORTED_MODULE_1__","_ref2","_ref2$site$siteMetada","site","siteMetadata","title","githubUrl","to","_public_static_d_613551944_json__WEBPACK_IMPORTED_MODULE_0__","BodyContent","styled_components__WEBPACK_IMPORTED_MODULE_4__","ContentContainer","Content","SidebarContainer","_util_theme__WEBPACK_IMPORTED_MODULE_7__","_ref$sidebar","gatsby__WEBPACK_IMPORTED_MODULE_3__","_ref3","description","keywords","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","meta","name","content","_header__WEBPACK_IMPORTED_MODULE_5__","_public_static_d_1361144656_json__WEBPACK_IMPORTED_MODULE_0__","convertGraphqlToc","input","edges","map","pathItems","node","frontmatter","path","split","filter","slice","area","order","childrenOf","tree","keys","k","link_tree_LinkTree","LinkTree","_this","_React$Component","call","this","onExpandCollapseClick","setState","expanded","state","hasBeenManuallyToggled","componentDidMount","_this$props","startsWith","item","childKeys","linkStyle","getLinkStyle","react","CurrentLevel","renderIcon","assign","style","pathKey","renderChildren","_this$props2","depth","marginLeft","fontSize","color","theme","fontWeight","length","IconSpacer","ExpandedIcon","onClick","size","CollapsedIcon","_this$props3","childNodes","ck","sort","b","key","Component","styled_components_browser_esm","span","fa","FaAngleDown","FaAngleRight","gatsby_browser_entry","sidebar_Container","forEach","rootItem","rootTree","current","splice","pi","index","pruneTree","newChildren","child","push","apply","result","createTree","subtree","MarkType","Orientation","Interpolation","HorizontalAlignment","VerticalAlignment","VerticalTextAlignment","SymbolType","TextDirection","StrokeCap","StrokeJoin","SGNodeType","MarkEncodingKey","Dimension","AxisOrientation","VSvgTransformType","itemTypeRegistry","Map","restrictedPropNames","Set","registerItemType","ctor","set","ITEM_TYPE","createItemType","itemType","has","get","instance","propName","getItemSpace","x","xc","x2","y","yc","y2","width","height","computeDimension","low","high","center","origin","resultSpan","Math","min","abs","_computeDimension","originX","resultWidth","_computeDimension2","originY","resultHeight","add","Arc","Area","Group","Image","Line","Path","Rect","Rule","Symbol","Text","Trail","Shape","Horizontal","Vertical","Basis","Bundle","Cardinal","CatmullRom","Linear","Monotone","Natural","step","stepAfter","stepBefore","Left","Center","Right","Top","Middle","Bottom","Alphabetic","Circle","Square","Cross","Diamond","TriangleUp","TriangleDown","TriangleRight","TriangleLeft","LTR","RTL","Butt","Round","Miter","Bevel","Mark","Item","opacity","fill","fillOpacity","stroke","strokeOpacity","strokeWidth","strokeCap","strokeDash","strokeDashOffset","strokeJoin","strokeMiterLimit","cursor","href","tooltip","zIndex","startAngle","endAngle","padAngle","innerRadius","outerRadius","cornerRadius","orient","interpolate","tension","defined","clip","url","aspect","align","baseline","angle","dir","dx","dy","ellipsis","font","fontVariant","fontStyle","limit","radius","theta","Height","Width","translate","rotate","scale","DEFAULT_WIDTH","DEFAULT_HEIGHT","SceneNode","metadata","Item_Item","_SceneNode","arguments","nodetype","channels","inheritsLoose_default","ArcItem_ArcItem","_Item","ArcItem","itemtype","AreaItem_AreaItem","AreaItem","GroupItem_GroupItem","GroupItem","ImageItem_ImageItem","ImageItem","LineItem_LineItem","LineItem","PathItem_PathItem","PathItem","RectItem_RectItem","RectItem","RuleItem_RuleItem","RuleItem","SymbolItem_SymbolItem","SymbolItem","TextItem_TextItem","TextItem","TrailItem_TrailItem","TrailItem","ShapeItem_ShapeItem","ShapeItem","Mark_Mark","MarkBuilder_MarkBuilder","MarkBuilder","markType","itemsValue","_proto","prototype","_this$itemsValue","_len","values","Array","_key","itemProps","createItem","value","clipValue","interactive","interactiveValue","role","roleValue","nameValue","zIndexValue","build","factory_createMark","marktype","buildMark","itemRendererRegistry","registerRenderer","markRenderer","renderMark","mark","context","renderer","nodes","assertTypeIs","emitMarkGroup","type","attrs","className","commonProps","strokeLinejoin","strokeLinecap","strokeDasharray","strokeDashoffset","Rectangle_Rectangle","Rectangle","d","x0","y0","x1","y1","w","h","cr","d3_path","rect","moveTo","lineTo","quadraticCurveTo","closePath","PI","Trail_Trail","prevX","prevY","prevR","ready","isLastDefined","isDefined","r2","ux","uy","ud","sqrt","rx","ry","atan2","arc","cmdlen","l","v","q","regexp","parse","pathstr","replace","command","chunks","trim","cmd","charAt","cmdLength","toLowerCase","parsed","chunk","param","concat","segmentCache","temp","render_scale","lib_render","tempX","tempY","tempControlX","tempControlY","previous","controlX","controlY","beginPath","len","bezierCurveTo","match","drawArc","coords","large","sweep","rotateX","ox","oy","th","sin_th","sin","cos_th","cos","px","py","pl","a00","a01","a10","a11","sfactor_sq","sfactor","th0","th_arc","segs","ceil","th2","th3","bez","tau","halfSqrt3","builtins","circle","draw","cross","diamond","square","triangle-up","triangle-down","triangle-right","triangle-left","custom","lib_x","lib_y","lib_cr","def","rectShape","arcShape","d3_shape","areavShape","areahShape","lineShape","u","symbolShape","symbolName","hasOwnProperty","symbolPath","symbols","lookup","basis","curve","basis-closed","basis-open","bundle","f","cardinal","g","cardinal-open","cardinal-closed","catmull-rom","j","catmull-rom-closed","catmull-rom-open","linear","linear-closed","monotone","horizontal","p","vertical","natural","step-after","step-before","curves","orientation","entry","curveFactory","rectangle","xOffset","yOffset","ArcRenderer_ArcRenderer","ArcRenderer","TARGET_MARK_TYPE","transforms","AreaRenderer_AreaRenderer","AreaRenderer","first","interp","areaItems","space","ai","areaItem","GroupRenderer_GroupRenderer","GroupRenderer","lambda","mappedItems","defs","groupRect","groupRectCommonProps","rectItem","groupRectShape","toString","_renderChildren","renderedChild","groupDefs","groupChildren","group","_renderGroupClip","clipId","clipPath","id","renderGroupClip","nextId","groupWrapper","ImageRenderer_ImageRenderer","ImageRenderer","LineRenderer_LineRenderer","LineRenderer","lineItem","PathRenderer_PathRenderer","PathRenderer","RectRenderer_RectRenderer","RectRenderer","RuleRenderer_RuleRenderer","RuleRenderer","SymbolRenderer_SymbolRenderer","SymbolRenderer","_item$x","_item$y","alignments","left","right","TextRenderer_TextRenderer","TextRenderer","alignmentBaseline","alignment","textAnchor","_ref$radius","_ref$theta","getTextTransforms","TrailRenderer_TrailRenderer","TrailRenderer","ShapeRenderer_ShapeRenderer","ShapeRenderer","DEFAULT_ORIGIN","VirtualSvgConverter_VirtualSvgConverter","VirtualSvgConverter","_options$width","_options$height","_options$backgroundCo","backgroundColor","_options$origin","_origin$","_origin$2","root","Ut","Qt","ChartOptionsManager_ChartOptionsManager","ChartOptionsManager","getPadding","paddingType","padding","createClass_default","paddingLeft","paddingTop","paddingRight","paddingBottom","SceneFrame","view","viewTL","viewBR","scales","channelId","channelHandlers","boundDataItem","pushNode","getRecomputedScales","pushMark","registerChannels","pushData","dataFrame","pushView","pushBoundDataItem","dataItem","xBounds","yBounds","creator","newScales","viewBounds","entries","reduce","prev","eventName","handler","registerHandler","createBoundItem","frame","row","table","encodings","encoding","tables","viewSize","availableWidth","availableHeight","_space$origin","_space$origin$x","_space$origin$y","_space$shape","_space$shape$width","_space$shape$height","groupDrawRect","top","bottom","itemFrame","processNode","domain_Domain","Domain","range","maxRange","max","minRange","domainMinRange","domainMaxRange","domainCross","axis","thickness","domainWidth","isScenegraphElementGenerated","domain","createScenegraphElement","_buildMark$role$items","rangeProperty","rangeEndProperty","crossProperty","domainColor","tickLines_TickLines","TickLines","tickCrossStart","tickSize","topOrLeft","tickCrossEnd","tickWidth","labelFormatter","labelFormat","__scaletype__","d3_time_format","d3_format","ticks","av","position","tickCount","tickRound","round","label","bandPosition","bandwidth","getTickValues","_buildMark$role","tick","_context$axis","tickColor","crossStart","crossEnd","rangeStart","crossEndProperty","tickLabels_TickLabels","TickLabels","labels","_result","labelFontSize","pad","labelPadding","labelFont","labelColor","labelFontWeight","labelAlign","labelBaseline","labelAngle","crossPropertyValue","components","buildAxis","axisSpace","axisFrame","axisThickness","availableSpace","_availableSpace$heigh","viewHeight","_availableSpace$width","viewWidth","scaleName","getContext","component","groupSize","_availableSpace$heigh2","_availableSpace$width2","DEFAULT_AXIS_THICKNESS","parentFrame","_buildAxes","axes","remainingSpace","hard","soft","fontPad","_frame$view","_frame$view$width","_frame$view$height","buildAxes","markFrame","markItems","marks","boundData","singleton","facet","console","log","sourceTable","partitionOn","getFacetKey","partitionMap","partitions","newPartition","isArray","partition","_frame$pushData","buildMarkItem","Orchestrator_Orchestrator","Orchestrator","prerenderer","renderScenegraph","rawScene","scenegraph","initializeMark","rawMark","rawItem","parentType","parent","json","JSON","intermediate","err","renderScene","scene","sg","optionsManager","chartSpace","rootFrame","undefined","vdom","SceneNodeBuilder","markBuilders","axisBuilders","creators","_this$markBuilders","_this$axisBuilders","lib_MarkBuilder_MarkBuilder","channelsValue","encodingsValue","tableValue","singletonValue","encode","handle","nameVal","handlerVal","_this2","entryEncoding","facetValue","callback","childNode","DEFAULT_COLOR","DEFAULT_TEXT_COLOR","DEFAULT_STROKE","DEFAULT_TICK_SIZE","AxisBuilder_DEFAULT_FONT_SIZE","DEFAULT_FONT","DEFAULT_LABEL_PADDING","DEFAULT_BAND_POSITION","DEFAULT_THICKNESS","AxisBuilder","orientValue","thicknessValue","domainValue","domainColorValue","domainWidthValue","ticksValue","tickColorValue","tickOffsetValue","tickRoundValue","tickSizeValue","tickWidthValue","labelsValue","labelFontValue","labelFontSizeValue","labelColorValue","labelPaddingValue","bandPositionValue","tickCountValue","tickOffset","tickValues","labelFontWeightValue","labelAngleValue","labelFormatValue","labelAlignValue","lib_scene","cb","dimensions","lib_mark","markWithName","SceneNodeBuilderConsumer","SceneNodeBuilderProvider","Provider","ChartSpec_ChartSpec","_React$PureComponent","ChartSpec","sceneNodeBuilder","sceneBuilder","updateSpec","componentDidUpdate","spec","onSpecReady","PureComponent","shallowequal","Chart_Chart","Chart","receiveSpec","rendered","pipeline","shouldComponentUpdate","_a","indexOf","getOwnPropertySymbols","__rest","Axis_Axis","Axis","api","receiveApi","newAxis","propValue","Le","DomainScale_DomainScale","DomainScale","arg","bindDomainValue","args","createScale","processDomainValues","getDomain","getDomainFromTableBinding","bind","domainValues","bindDomain","reverse","DomainRangeScale_DomainRangeScale","_DomainScale","DomainRangeScale","rangeValue","bindRangeValue","reversed","reverseValue","getRange","determineRange","reverseRange","bindRange","handleRangeBind","getBoundRange","rangeBind","_args$viewBounds","CategoricalColorScheme","LinearScale_LinearScale","_QuantitativeScale","LinearScale","defaultZero","d3_scale","addCommonProperties","_DomainRangeScale","QuantitativeScale","clamp","clampValue","nice","niceValue","paddingValue","zero","zeroValue","start","end","d3_array","getZero","domainContainsZero","BandScale_BandScale","BandScale","bandwidthName","bandwidthValue","paddingInner","paddingInnerValue","paddingOuter","paddingOuterValue","alignValue","bandscale","category10","category20","category20b","category20c","colorSchemeMap","OrdinalScale_OrdinalScale","OrdinalScale","colorScheme","colorSchemeValue","scales_DomainScale_DomainScale","apiInstance","addScale","scales_DomainRangeScale_DomainRangeScale","quantitative_LinearScale_LinearScale","isReversed","discrete_BandScale_BandScale","bandWidth","discrete_OrdinalScale_OrdinalScale","BaseMark_BaseMark","BaseMark","addMark","createMark","eventHandlers","propKey","encodingProps","pv","propVal","captureCommonEncodings","encodeCustomProperties","Group_Group","_BaseMark","nodeBuilder","facetName","facetKey","Rect_Rect","Text_Text","CompareOrder","Offset","Renderer","handlers","createElementFor","_vdom$attrs","_vdom$transforms","vdomTransforms","_vdom$channels","_vdom$metadata","reactAttrs","transform","eventId","reactEventName","eventArg","bar_chart_renderer","bar_chart_data","category","amount","bar_chart_BarChart","BarChart","hoverRowIndex","onMouseEnter","evt","onMouseLeave","_ref4","_ref5","_ref6","_ref7","band","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","grouped_bar_chart_renderer","grouped_bar_chart_data","grouped_bar_chart_GroupedBarChart","categoryHeight","pos","rowHeight","_ref14","_ref15","_ref16","ascending","descending","normalize","StackTransform_StackTransform","StackTransform","offsetVal","outputFields","stackCenter","_this$outputFields","field","fieldVal","last","sum","_iterator","_isArray","_i","iterator","next","done","stackNormalize","_this$outputFields2","_iterator2","_isArray2","_i2","stackZero","_this$outputFields3","lastPos","lastNeg","_iterator3","_isArray3","_i3","groupBy","groupByVal","_len2","_key2","sortVal","offset","output","innerData","rawGroups","partitionGroups","groups","computeMaxesAndSums","processDataStacks","_loop","_isArray4","_i4","_iterator4","groupKey","gb","newGroup","sorts","sorter","_sort$order","valueA","valueB","_iterator5","_isArray5","_i5","groupMax","groupSum","_iterator6","_isArray6","_i6","stacker","stacked_bar_chart_renderer","stackedData","charts","bar-chart","grouped-bar-chart","stacked-bar-chart","StackedBarChart","SGChart","_ref$width","_ref$height","_ref$origin","NameColumn","InputColumn","slider_Slider","_ref$min","_ref$max","_ref$value","_ref$step","_ref$onChange","onChange","target","dropdown_Container","dropdown_NameColumn","dropdown_InputColumn","dropdown_Dropdown","optionDom","toggle_Container","toggle_NameColumn","toggle_InputColumn","toggle_Toggle","checked","single_mark_tester_Container","ChartContainer","ControlsContainer","single_mark_tester_SingleMarkTester","SingleMarkTester","initialScenegraph","_this$props$sliders","sliders","_this$props$dropdowns","dropdowns","_this$props$toggles","toggles","chartWidth","chartHeight","chartOrigin","sliderElements","getParam","_this2$setParam","setParam","parseFloat","dropdownElements","_this2$setParam2","toggleElements","_this2$setParam3","update","updateScenegraph","CRIMSON","GREY","BASE_ITEM","area_tester_horizontal_BASE_ITEM","area_tester_vertical_BASE_ITEM","group_tester_BASE_ITEM","line_tester_BASE_ITEM","rect_tester_BASE_ITEM","mark_testers","arc-tester","area-tester-horizontal","area-tester-vertical","interval","area_tester_vertical_chartHeight","group-tester","image-tester","line-tester","path-tester","shape-tester","rect-tester","rule-tester","text-tester","groupMark","firstGroup","symbolMark","symbolItem","textMark","textItem","examples","renderAst","Compiler","doc_Container","Gutter","doc","htmlAst"],"mappings":"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","file":"component---src-pages-documentation-tsx-4525e28f413c4f409bf5.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport Doc from '../components/doc'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\n\nconst Documentation = ({ data: { toc, introduction } }: any) => {\n  return (\n    <Layout\n      logoTo=\"/documentation\"\n      sidebar={\n        <Sidebar items={convertGraphqlToc(toc)} activePath=\"/documentation\" />\n      }\n    >\n      <Doc docPage={introduction} />\n    </Layout>\n  )\n}\n\nexport default Documentation\n\nexport const query = graphql`\n  {\n    introduction: markdownRemark(\n      frontmatter: { path: { eq: \"/documentation/introduction\" } }\n    ) {\n      html\n      htmlAst\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n\n    toc: allMarkdownRemark(\n      filter: { frontmatter: { path: { regex: \"/^/documentation/.*/\" } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            order\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import typography from '../configs/typography'\n\nconst { options: topts } = typography\n\nexport default {\n  text: {\n    fontFamily: topts.bodyFontFamily.join(', ') as string,\n    lineHeight: topts.baseLineHeight as number,\n    highlight: '#2D882D',\n  },\n  palette: {\n    primary: '#AA3939',\n    highlight: '#FFF3B0',\n    alt: '#335C67',\n    alt2: '#E09F3E',\n    alt3: '#540B0E',\n  },\n  backgrounds: {\n    sidebar: '#F6F6F6',\n    header: '#AA3939',\n  },\n}\n","import Typography from 'typography'\nimport theme from 'typography-theme-github'\n\nconst typography = new Typography(theme)\n\nexport default typography\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// tslint:disable jsx-no-lambda\nimport * as React from 'react'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport theme from '../util/theme'\n\nexport interface HeaderProps {\n  logoTo?: string\n}\n\nconst Header: React.SFC<HeaderProps> = ({ logoTo = '/' }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            githubUrl\n          }\n        }\n      }\n    `}\n    render={({\n      site: {\n        siteMetadata: { title, githubUrl },\n      },\n    }: any) => {\n      return (\n        <Container>\n          <InnerContainer>\n            <Title>\n              <TitleLink to={logoTo}>{title}</TitleLink>\n            </Title>\n            <Links>\n              <OuterLink to=\"/\">Home</OuterLink>\n              <OuterLink to=\"/documentation\">Docs</OuterLink>\n              <OuterLink to=\"/blog\">Updates</OuterLink>\n              <OuterLink to={githubUrl}>Github</OuterLink>\n            </Links>\n          </InnerContainer>\n        </Container>\n      )\n    }}\n  />\n)\n\nconst Container = styled.div`\n  background: ${theme.backgrounds.header};\n`\n\nconst InnerContainer = styled.div`\n  margin: 0 auto;\n  max-width: 960;\n  padding: 1.45rem 1.0875rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nconst Links = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst Title = styled.h1`\n  margin: 0;\n`\n\nconst TitleLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  font-family: ${theme.text.fontFamily};\n  font-weight: 100;\n`\n\nconst OuterLink = styled(Link)`\n  color: white;\n  margin-left: 8px;\n  margin-right: 8px;\n  font-family: ${theme.text.fontFamily};\n  font-weight: 100;\n`\n\nexport default Header\n","// tslint:disable jsx-no-lambda\nimport * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport { SiteMetadata } from '../types'\nimport Header from './header'\nimport './layout.css'\nimport theme from '../util/theme'\n\ninterface LayoutQueryResult {\n  site: {\n    siteMetadata: SiteMetadata\n  }\n}\n\nexport interface LayoutProps {\n  sidebar?: JSX.Element\n  logoTo?: string\n}\n\nconst Layout: React.SFC<LayoutProps> = ({\n  sidebar = null,\n  logoTo,\n  children,\n}) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            keywords\n            description\n          }\n        }\n      }\n    `}\n    render={({ site: { siteMetadata } }: LayoutQueryResult) => {\n      const { title } = siteMetadata\n      return (\n        <>\n          <Helmet title={title} meta={getMeta(siteMetadata)} />\n          <BodyContent>\n            <Header />\n            <ContentContainer>\n              {sidebar ? <SidebarContainer>{sidebar}</SidebarContainer> : null}\n              <Content>{children}</Content>\n            </ContentContainer>\n          </BodyContent>\n        </>\n      )\n    }}\n  />\n)\n\nfunction getMeta({ description, keywords }: SiteMetadata) {\n  return [\n    { name: 'description', content: description },\n    { name: 'keywords', content: keywords.join(', ') },\n  ]\n}\n\nconst BodyContent = styled.div`\n  height: 100%;\n  max-height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  flex: 1;\n  padding: 0;\n  margin: 0;\n`\n\nconst Content = styled.div`\n  margin: auto;\n  padding: 0px 1.0875rem 1.45rem;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  flex: 5;\n  padding: 1.45rem;\n  overflow: scroll;\n`\n\nconst SidebarContainer = styled.div`\n  display: flex;\n  flex: 1;\n  padding: 1rem;\n  background: ${theme.backgrounds.sidebar};\n`\n\nexport default Layout\n","import { SidebarItem } from '../components/sidebar'\n\nexport default function convertGraphqlToc(input: {\n  edges: Array<{\n    node: {\n      frontmatter: {\n        path: string\n        title: string\n        order: number\n      }\n    }\n  }>\n}): SidebarItem[] {\n  return input.edges.map(e => {\n    const pathItems = e.node.frontmatter.path\n      .split('/')\n      .filter(t => !!t)\n      .slice(1)\n\n    return {\n      path: e.node.frontmatter.path,\n      pathItems,\n      title: e.node.frontmatter.title,\n      area: pathItems[0],\n      order: e.node.frontmatter.order,\n    }\n  })\n}\n","import { SidebarItem, TreeNode } from './interfaces'\n\n/**\n * Creates a nested tree of sidebar items given a flat array of items\n * @param items The sidebar items to create the tree from\n */\nexport function createTree(items: SidebarItem[]) {\n  const tree: { [key: string]: TreeNode } = {}\n\n  // Insert each item into the tree\n  items.forEach(i => insertItemIntoTree(i, tree))\n  Object.keys(tree).forEach(key => {\n    const subtree = tree[key]\n    pruneTree(subtree)\n  })\n\n  return Object.keys(tree)\n    .map(k => tree[k])\n    .filter(t => !!t)\n    .sort((a, b) => (a as any).item.order - (b as any).item.order)\n}\n\nfunction pruneTree(tree: TreeNode): TreeNode {\n  if (isLeaf(tree)) {\n    return tree\n  }\n  const children = childrenOf(tree).map(c => pruneTree(c))\n\n  const newChildren: TreeNode[] = []\n  children.forEach(child => {\n    if (child.item === undefined) {\n      newChildren.push(...childrenOf(child))\n    } else {\n      newChildren.push(child)\n    }\n  })\n\n  tree.children = childHash(newChildren)\n  return tree\n}\n\nfunction childHash(children: TreeNode[]) {\n  const result: { [key: string]: TreeNode } = {}\n  children.forEach(child => (result[child.pathKey] = child))\n  return result\n}\n\nfunction childrenOf(tree: TreeNode) {\n  return Object.keys(tree.children).map(k => tree.children[k])\n}\n\nfunction isLeaf(tree: TreeNode) {\n  return childrenOf(tree).length === 0\n}\n\nfunction insertItemIntoTree(\n  item: SidebarItem,\n  tree: { [key: string]: TreeNode }\n) {\n  // Split the path up into \"items\" which will be used to create the three\n  const pathItems = item.path\n    .split('/')\n    .filter(t => !!t)\n    .slice(1)\n\n  const rootItem = pathItems[0]\n  let rootTree = tree[rootItem]\n  if (!rootTree) {\n    rootTree = tree[rootItem] = {\n      item: undefined as any,\n      pathKey: rootItem,\n      children: {},\n    }\n  }\n\n  if (pathItems.length === 1) {\n    rootTree.item = item\n  } else {\n    insertPathItemIntoTree(item, pathItems, rootTree)\n  }\n}\n\nfunction insertPathItemIntoTree(\n  item: SidebarItem,\n  pathItems: string[],\n  tree: TreeNode\n) {\n  // skip the first item since it's been added to the root hash already\n  let current = tree\n  pathItems.splice(1).forEach((pi, index) => {\n    if (!current.children[pi]) {\n      current.children[pi] = {\n        item: undefined as any,\n        pathKey: pi,\n        children: {},\n      }\n    }\n    current = current.children[pi]\n  })\n  current.item = item\n}\n","// tslint:disable no-var-requires no-submodule-imports\nimport * as React from 'react'\nimport { TreeNode } from './interfaces'\nimport { Link as RawLink } from 'gatsby'\nimport styled from 'styled-components'\nimport theme from '../../util/theme'\nimport {\n  FaAngleDown as ExpandedIconRaw,\n  FaAngleRight as CollapsedIconRaw,\n} from 'react-icons/fa'\n\nexport interface LinkTreeProps {\n  node: TreeNode\n  depth: number\n  expanded?: boolean\n  activePath: string\n}\n\nconst ToggleSize = 15\n\nexport interface LinkTreeState {\n  expanded: boolean\n  hasBeenManuallyToggled: boolean\n}\n\nexport default class LinkTree extends React.Component<\n  LinkTreeProps,\n  LinkTreeState\n> {\n  constructor(props: LinkTreeProps) {\n    super(props)\n    this.state = { expanded: !!props.expanded, hasBeenManuallyToggled: false }\n  }\n\n  public componentDidMount() {\n    const { activePath, node } = this.props\n    if (activePath.startsWith(node.item.path)) {\n      this.setState({ expanded: true })\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const { node } = this.props\n    const { item, children } = node\n    if (!item) {\n      return null\n    }\n\n    const childKeys = Object.keys(children)\n    const linkStyle = this.getLinkStyle()\n\n    return (\n      <Container>\n        <CurrentLevel>\n          {this.renderIcon(childKeys)}\n          <Link to={item.path} {...{ style: linkStyle }}>\n            {item.title || node.pathKey}\n          </Link>\n        </CurrentLevel>\n        {this.renderChildren(childKeys)}\n      </Container>\n    )\n  }\n\n  private getLinkStyle(): React.CSSProperties {\n    const {\n      activePath,\n      depth,\n      node: { item },\n    } = this.props\n\n    const marginLeft = 15 + depth * 15\n    const fontSize = 16 - depth * 2\n    const linkStyle: React.CSSProperties = {\n      marginLeft,\n      fontSize,\n    }\n\n    if (activePath === item.path) {\n      linkStyle.color = theme.text.highlight\n      linkStyle.fontWeight = 500\n    }\n\n    return linkStyle\n  }\n\n  private renderIcon(childKeys: string[]) {\n    if (childKeys.length === 0) {\n      return <IconSpacer />\n    } else if (this.state.expanded) {\n      return (\n        <ExpandedIcon onClick={this.onExpandCollapseClick} size={ToggleSize} />\n      )\n    } else {\n      return (\n        <CollapsedIcon onClick={this.onExpandCollapseClick} size={ToggleSize} />\n      )\n    }\n  }\n\n  private renderChildren(childKeys: string[]) {\n    const { node, depth, activePath } = this.props\n    const { expanded } = this.state\n    if (!expanded) {\n      return null\n    }\n\n    // Get the nodes for the children and sort them\n    const childNodes = childKeys.map(ck => node.children[ck])\n    childNodes.sort((a, b) => (a.item.order || 0) - (b.item.order || 0))\n\n    return childNodes.map(c => (\n      <LinkTree\n        key={c.pathKey}\n        node={c}\n        depth={depth + 1}\n        activePath={activePath}\n      />\n    ))\n  }\n\n  private onExpandCollapseClick = () => {\n    this.setState({\n      expanded: !this.state.expanded,\n      hasBeenManuallyToggled: true,\n    })\n  }\n}\n\nconst Container = styled.div``\n\nconst IconSpacer = styled.span`\n  width: 15px;\n`\n\nconst CurrentLevel = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst ExpandedIcon = styled(ExpandedIconRaw)`\n  color: #999;\n  cursor: pointer;\n  width: 15px;\n`\n\nconst CollapsedIcon = styled(CollapsedIconRaw)`\n  color: #999;\n  cursor: pointer;\n  width: 15px;\n`\n\nconst Link = styled(RawLink)`\n  font-family: ${theme.text.fontFamily};\n  line-height: ${theme.text.lineHeight * 1.5};\n  font-weight: 100;\n  font-size: 16px;\n  display: flex;\n  flex-direction: column;\n`\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { SidebarItem, TreeNode } from './interfaces'\nimport { createTree } from './createTree'\nimport LinkTree from './link_tree'\n\nexport { SidebarItem } from './interfaces'\n\nexport interface SidebarProps {\n  items: SidebarItem[]\n  activePath: string\n}\n\nconst Sidebar: React.SFC<SidebarProps> = ({ items, activePath }) => {\n  const tree: TreeNode[] = createTree(items)\n  return (\n    <Container>\n      {tree\n        .map(subtree => {\n          return !subtree.item ? null : (\n            <LinkTree\n              key={subtree.pathKey}\n              node={subtree}\n              depth={0}\n              activePath={activePath}\n            />\n          )\n        })\n        .filter(t => !!t)}\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`\n\nexport default Sidebar\n","/**\n * An enumeration for the possible mark types.\n * Possible values are\n * \t'arc',\n *  'area',\n *  'group',\n *  'image',\n *  'line',\n *  'path',\n *  'rect',\n *  'rule',\n *  'symbol',\n *  'text', and\n *  'trail'.\n */\nexport var MarkType;\n(function (MarkType) {\n    MarkType[\"Arc\"] = \"arc\";\n    MarkType[\"Area\"] = \"area\";\n    MarkType[\"Group\"] = \"group\";\n    MarkType[\"Image\"] = \"image\";\n    MarkType[\"Line\"] = \"line\";\n    MarkType[\"Path\"] = \"path\";\n    MarkType[\"Rect\"] = \"rect\";\n    MarkType[\"Rule\"] = \"rule\";\n    MarkType[\"Symbol\"] = \"symbol\";\n    MarkType[\"Text\"] = \"text\";\n    MarkType[\"Trail\"] = \"trail\";\n    MarkType[\"Shape\"] = \"shape\";\n})(MarkType || (MarkType = {}));\n/**\n * An enumeration for area marks. May be 'horizontal' or 'vertical'\n */\nexport var Orientation;\n(function (Orientation) {\n    Orientation[\"Horizontal\"] = \"horizontal\";\n    Orientation[\"Vertical\"] = \"vertical\";\n})(Orientation || (Orientation = {}));\n/**\n * Line interpolation types. These define if and how curves are\n * smoothed in line, area, and stream marks.\n */\nexport var Interpolation;\n(function (Interpolation) {\n    Interpolation[\"Basis\"] = \"basis\";\n    Interpolation[\"Bundle\"] = \"bundle\";\n    Interpolation[\"Cardinal\"] = \"cardinal\";\n    Interpolation[\"CatmullRom\"] = \"catmull-rom\";\n    Interpolation[\"Linear\"] = \"linear\";\n    Interpolation[\"Monotone\"] = \"monotone\";\n    Interpolation[\"Natural\"] = \"natural\";\n    Interpolation[\"step\"] = \"step\";\n    Interpolation[\"stepAfter\"] = \"step-after\";\n    Interpolation[\"stepBefore\"] = \"step-before\";\n})(Interpolation || (Interpolation = {}));\n/**\n * Horizontal Alignment parameter for marks. Mostly useful for Text marks.\n */\nexport var HorizontalAlignment;\n(function (HorizontalAlignment) {\n    HorizontalAlignment[\"Left\"] = \"left\";\n    HorizontalAlignment[\"Center\"] = \"center\";\n    HorizontalAlignment[\"Right\"] = \"right\";\n})(HorizontalAlignment || (HorizontalAlignment = {}));\n/**\n * Vertical Alignment enumeration for marks (Image and Text)\n */\nexport var VerticalAlignment;\n(function (VerticalAlignment) {\n    VerticalAlignment[\"Top\"] = \"top\";\n    VerticalAlignment[\"Middle\"] = \"middle\";\n    VerticalAlignment[\"Bottom\"] = \"bottom\";\n})(VerticalAlignment || (VerticalAlignment = {}));\n/**\n * Vertical Text Alignment parameter for Text marks.\n */\nexport var VerticalTextAlignment;\n(function (VerticalTextAlignment) {\n    VerticalTextAlignment[\"Alphabetic\"] = \"alphabetic\";\n    VerticalTextAlignment[\"Top\"] = \"top\";\n    VerticalTextAlignment[\"Middle\"] = \"middle\";\n    VerticalTextAlignment[\"Bottom\"] = \"bottom\";\n})(VerticalTextAlignment || (VerticalTextAlignment = {}));\n/**\n * An enumeration of the kinds of symbols the Symbol mark may represent.\n */\nexport var SymbolType;\n(function (SymbolType) {\n    SymbolType[\"Circle\"] = \"circle\";\n    SymbolType[\"Square\"] = \"square\";\n    SymbolType[\"Cross\"] = \"cross\";\n    SymbolType[\"Diamond\"] = \"diamond\";\n    SymbolType[\"TriangleUp\"] = \"triangle-up\";\n    SymbolType[\"TriangleDown\"] = \"triangle-down\";\n    SymbolType[\"TriangleRight\"] = \"triangle-right\";\n    SymbolType[\"TriangleLeft\"] = \"triangle-left\";\n})(SymbolType || (SymbolType = {}));\n/**\n * An enumeration of the TextDirection values for Text marks.\n */\nexport var TextDirection;\n(function (TextDirection) {\n    TextDirection[\"LTR\"] = \"ltr\";\n    TextDirection[\"RTL\"] = \"rtl\";\n})(TextDirection || (TextDirection = {}));\n/**\n * Stroke-cap style for Marks with lines.\n */\nexport var StrokeCap;\n(function (StrokeCap) {\n    StrokeCap[\"Butt\"] = \"butt\";\n    StrokeCap[\"Round\"] = \"round\";\n    StrokeCap[\"Square\"] = \"square\";\n})(StrokeCap || (StrokeCap = {}));\n/**\n * Stroke-join style for Marks with lines.\n */\nexport var StrokeJoin;\n(function (StrokeJoin) {\n    StrokeJoin[\"Miter\"] = \"miter\";\n    StrokeJoin[\"Round\"] = \"round\";\n    StrokeJoin[\"Bevel\"] = \"bevel\";\n})(StrokeJoin || (StrokeJoin = {}));\n","export var SGNodeType;\n(function (SGNodeType) {\n    SGNodeType[\"Mark\"] = \"mark\";\n    SGNodeType[\"Item\"] = \"item\";\n})(SGNodeType || (SGNodeType = {}));\n","export var MarkEncodingKey;\n(function (MarkEncodingKey) {\n    // Common encoding keys\n    MarkEncodingKey[\"x\"] = \"x\";\n    MarkEncodingKey[\"x2\"] = \"x2\";\n    MarkEncodingKey[\"xc\"] = \"xc\";\n    MarkEncodingKey[\"y\"] = \"y\";\n    MarkEncodingKey[\"y2\"] = \"y2\";\n    MarkEncodingKey[\"yc\"] = \"yc\";\n    MarkEncodingKey[\"width\"] = \"width\";\n    MarkEncodingKey[\"height\"] = \"height\";\n    MarkEncodingKey[\"opacity\"] = \"opacity\";\n    MarkEncodingKey[\"fill\"] = \"fill\";\n    MarkEncodingKey[\"fillOpacity\"] = \"fillOpacity\";\n    MarkEncodingKey[\"stroke\"] = \"stroke\";\n    MarkEncodingKey[\"strokeOpacity\"] = \"strokeOpacity\";\n    MarkEncodingKey[\"strokeWidth\"] = \"strokeWidth\";\n    MarkEncodingKey[\"strokeCap\"] = \"strokeCap\";\n    MarkEncodingKey[\"strokeDash\"] = \"strokeDash\";\n    MarkEncodingKey[\"strokeDashOffset\"] = \"strokeDashOffset\";\n    MarkEncodingKey[\"strokeJoin\"] = \"strokeJoin\";\n    MarkEncodingKey[\"strokeMiterLimit\"] = \"strokeMiterLimit\";\n    MarkEncodingKey[\"cursor\"] = \"cursor\";\n    MarkEncodingKey[\"href\"] = \"href\";\n    MarkEncodingKey[\"tooltip\"] = \"tooltip\";\n    MarkEncodingKey[\"zIndex\"] = \"zIndex\";\n    // Arc encoding keys\n    MarkEncodingKey[\"startAngle\"] = \"startAngle\";\n    MarkEncodingKey[\"endAngle\"] = \"endAngle\";\n    MarkEncodingKey[\"padAngle\"] = \"padAngle\";\n    MarkEncodingKey[\"innerRadius\"] = \"innerRadius\";\n    MarkEncodingKey[\"outerRadius\"] = \"outerRadius\";\n    MarkEncodingKey[\"cornerRadius\"] = \"cornerRadius\";\n    // Area encoding keys\n    MarkEncodingKey[\"orient\"] = \"orient\";\n    MarkEncodingKey[\"interpolate\"] = \"interpolate\";\n    MarkEncodingKey[\"tension\"] = \"tension\";\n    MarkEncodingKey[\"defined\"] = \"defined\";\n    // Group encoding keys\n    MarkEncodingKey[\"clip\"] = \"clip\";\n    // Image encoding keys\n    MarkEncodingKey[\"url\"] = \"url\";\n    MarkEncodingKey[\"aspect\"] = \"aspect\";\n    MarkEncodingKey[\"align\"] = \"align\";\n    MarkEncodingKey[\"baseline\"] = \"baseline\";\n    // Path encoding keys\n    MarkEncodingKey[\"path\"] = \"path\";\n    // Symbol encoding keys\n    MarkEncodingKey[\"size\"] = \"size\";\n    MarkEncodingKey[\"shape\"] = \"shape\";\n    // Text encoding keys\n    MarkEncodingKey[\"angle\"] = \"angle\";\n    MarkEncodingKey[\"dir\"] = \"dir\";\n    MarkEncodingKey[\"dx\"] = \"dx\";\n    MarkEncodingKey[\"dy\"] = \"dy\";\n    MarkEncodingKey[\"ellipsis\"] = \"ellipsis\";\n    MarkEncodingKey[\"font\"] = \"font\";\n    MarkEncodingKey[\"fontSize\"] = \"fontSize\";\n    MarkEncodingKey[\"fontWeight\"] = \"fontWeight\";\n    MarkEncodingKey[\"fontVariant\"] = \"fontVariant\";\n    MarkEncodingKey[\"fontStyle\"] = \"fontStyle\";\n    MarkEncodingKey[\"limit\"] = \"limit\";\n    MarkEncodingKey[\"radius\"] = \"radius\";\n    MarkEncodingKey[\"text\"] = \"text\";\n    MarkEncodingKey[\"theta\"] = \"theta\";\n})(MarkEncodingKey || (MarkEncodingKey = {}));\nexport var Dimension;\n(function (Dimension) {\n    Dimension[\"Height\"] = \"height\";\n    Dimension[\"Width\"] = \"width\";\n})(Dimension || (Dimension = {}));\n","export var AxisOrientation;\n(function (AxisOrientation) {\n    AxisOrientation[\"Top\"] = \"top\";\n    AxisOrientation[\"Left\"] = \"left\";\n    AxisOrientation[\"Bottom\"] = \"bottom\";\n    AxisOrientation[\"Right\"] = \"right\";\n})(AxisOrientation || (AxisOrientation = {}));\n// #region TODO: Support These Options?\n// /**\n//  * Indicates if labels should be hidden if they exceed the axis range. If false (the default) no bounds overlap analysis is performed.\n//  * If true, labels will be hidden if they exceed the axis range by more than 1 pixel.\n//  * If this property is a number, it specifies the pixel tolerance: the maximum amount by which a label bounding box may exceed the axis range.\n//  */\n// labelBound?: boolean | number\n// /**\n//  * The maximum allowed length in pixels of axis tick labels.\n//  */\n// labelLimit?: number\n// /**\n//  * The strategy to use for resolving overlap of axis labels. If false (the default), no overlap reduction is attempted.\n//  * If set to true or \"parity\", a strategy of removing every other label is used (this works well for standard linear axes).\n//  * If set to \"greedy\", a linear scan of the labels is performed, removing any label that overlaps with the last visible label (this often works better for log-scaled axes).\n//  */\n// labelOverlap?: boolean | string\n// /**\n//  * \tIndicates if labels at the beginning or end of the axis should be aligned flush with the scale range.\n//  * If a number, indicates a pixel distance threshold: labels with anchor coordinates within the threshold distance for an axis end-point will be flush-adjusted.\n//  * If true, a default threshold of 1 pixel is used. Flush alignment for a horizontal axis will left-align labels near the beginning of the axis and right-align\n//  * labels near the end. For vertical axes, bottom and top text baselines will be applied instead.\n//  */\n// labelFlush?: boolean | number\n// /**\n//  * Indicates the number of pixels by which to offset flush-adjusted labels (default 0). For example, a value of 2 will push flush-adjusted labels 2 pixels outward\n//  * from the center of the axis. Offsets can help the labels better visually group with corresponding axis ticks.\n//  */\n// labelFlushOffset?: number\n// Tick Count Options\n// export type TickUnit =\n// \t| 'millisecond'\n// \t| 'second'\n// \t| 'minute'\n// \t| 'hour'\n// \t| 'day'\n// \t| 'week'\n// \t| 'month'\n// \t| 'year'\n// export interface TickUnitInterval {\n// \tinterval: TickUnit\n// \tstep: number\n// }\n// #endregion\n// // encode? Object\tOptional mark encodings for custom axis styling. Supports encoding blocks for axis, ticks, grid, labels, title, and domain. See custom axis encodings.\n// /**\n//  * A boolean flag indicating if grid lines should be included as part of the axis (default false).\n//  */\n// grid?: boolean\n// /**\n//  * Color of axis grid lines.\n//  */\n// gridColor?: boolean\n// /**\n//  * Stroke dash of axis grid lines (or [] for solid lines).\n//  */\n// gridDash?: number[]\n// /**\n//  * Opacity of axis grid lines.\n//  */\n// gridOpacity?: number\n// /**\n//  * The name of the scale to use for including grid lines. By default grid lines are driven by the same scale as the ticks and labels.\n//  */\n// gridScale?: string\n// /**\n//  * \tStroke width of axis grid lines.\n//  */\n// gridWidth?: number\n// /**\n//  * The minimum extent in pixels that axis ticks and labels should use. This determines a minimum offset value for axis titles.\n//  */\n// minExtent?: number\n// /**\n//  * The maximum extent in pixels that axis ticks and labels should use. This determines a maximum offset value for axis titles.\n//  */\n// maxExtent?: number\n// /**\n//  * The orthogonal offset in pixels by which to displace the axis from its position along the edge of the chart.\n//  */\n// offset?: number\n// /**\n//  * The anchor position of the axis in pixels (default 0). For x-axes with top or bottom orientation, this sets the axis group x coordinate. For y-axes with left or right orientation, this sets the axis group y coordinate.\n//  */\n// position?: number\n// /**\n//  * A title for the axis (none by default).\n//  */\n// title?: string\n// /**\n//  * \tHorizontal text alignment of axis titles.\n//  */\n// titleAlign?: string\n// /**\n//  * \tAngle in degrees of axis titles.\n//  */\n// titleAngle?: number\n// /**\n//  * \tVertical text baseline for axis titles.\n//  */\n// titleBaseline?: string\n// /**\n//  * Text color of axis titles.\n//  */\n// titleColor?: string\n// /**\n//  * \tFont name for axis titles.\n//  */\n// titleFont?: string\n// /**\n//  * \tFont size of axis titles.\n//  */\n// titleFontSize?: number\n// /**\n//  * \tFont weight of axis titles.\n//  */\n// titleFontWeight?: string | number\n// /**\n//  * \tThe maximum allowed length in pixels of axis titles.\n//  */\n// titleLimit?: number\n// /**\n//  * \tThe padding in pixels between the axis labels and axis title.\n//  */\n// titlePadding?: number\n// /**\n//  * \tCustom X position of the axis title relative to the axis group, overriding the standard layout.\n//  */\n// titleX?: number\n// /**\n//  * \tCustom Y position of the axis title relative to the axis group, overriding the standard layout.\n//  */\n// titleY?: number\n// /**\n//  * The integer z-index indicating the layering of the axis group relative to other axis, mark and legend groups. The default value is 0 and axes and grid lines are drawn behind any marks defined in the same specification level. Higher values (1) will cause axes and grid lines to be drawn on top of marks.\n//  */\n// zindex?: number\n// #region TODO should we even support these options?\n// /**\n//  * Boolean flag indicating if an extra axis tick should be added for the initial position of the axis.\n//  * This flag is useful for styling axes for band scales such that ticks are placed on band boundaries rather in the middle of a band.\n//  * Use in conjunction with \"bandPostion\": 1 and an axis \"padding\" value of 0.\n//  */\n// tickExtra?: boolean\n// #endregion\n","export var VSvgTransformType;\n(function (VSvgTransformType) {\n    VSvgTransformType[\"translate\"] = \"translate\";\n    VSvgTransformType[\"rotate\"] = \"rotate\";\n    VSvgTransformType[\"scale\"] = \"scale\";\n})(VSvgTransformType || (VSvgTransformType = {}));\n","const itemTypeRegistry = new Map();\nconst restrictedPropNames = new Set();\nrestrictedPropNames.add('marktype');\n/**\n * Registers an item type for use in parsing scene-graphs.\n *\n * @param itemType the name of the item type to register\n * @param ctor The item class representing the item type\n */\nexport function registerItemType(ctor) {\n    itemTypeRegistry.set(ctor.ITEM_TYPE, ctor);\n}\n/**\n * Creates a new Item-Type instance\n * @param itemType\n */\nexport function createItemType(itemType, props = {}) {\n    if (!itemTypeRegistry.has(itemType)) {\n        throw new Error(`item type ${itemType} not found`);\n    }\n    const ctor = itemTypeRegistry.get(itemType);\n    if (ctor === undefined) {\n        throw new Error(`item type ${itemType} constructor not valid`);\n    }\n    // Create the new instance\n    const instance = new ctor();\n    // Transfer properties over\n    Object.keys(props).forEach(propName => {\n        if (!restrictedPropNames.has(propName)) {\n            ;\n            instance[propName] = props[propName];\n        }\n    });\n    return instance;\n}\n","/**\n * For marks that support width and height settings (including rect and area),\n * the horizontal dimensions are determined (in order of precedence) by the x and x2 properties,\n * the x and width properties, the x2 and width properties, or the xc and width properties.\n * If all three of x, x2 and width are specified, the width value is ignored.\n * The y, y2, yc and height properties are treated similarly.\n * @param item\n */\nexport function getItemSpace(item) {\n    const { x, xc, x2, y, yc, y2, width, height } = item;\n    const computeDimension = (low, high, center, span) => {\n        let origin;\n        let resultSpan;\n        // Snap dimensions to lower-bound first.\n        // Then try to snap to the upper bound.\n        // Then, if those don't exist, try to snap to the center and span\n        if (low !== undefined) {\n            if (high !== undefined) {\n                origin = Math.min(low, high);\n                resultSpan = Math.abs(high - low);\n            }\n            else if (span !== undefined) {\n                origin = low;\n                resultSpan = span;\n            }\n            else if (center !== undefined) {\n                origin = Math.min(low, center);\n                resultSpan = Math.abs(center - low) * 2;\n            }\n            else {\n                origin = low;\n            }\n        }\n        else if (high !== undefined) {\n            if (span !== undefined) {\n                origin = high - span;\n                resultSpan = span;\n            }\n            else if (center !== undefined) {\n                resultSpan = Math.abs(high - center) * 2;\n                origin =\n                    center < high ? high - (high - center) * 2 : center - (center - high);\n            }\n        }\n        else if (span !== undefined && center !== undefined) {\n            origin = center - span / 2;\n            resultSpan = span;\n        }\n        return [origin, resultSpan];\n    };\n    const [originX, resultWidth] = computeDimension(x, x2, xc, width);\n    const [originY, resultHeight] = computeDimension(y, y2, yc, height);\n    return {\n        origin: {\n            x: originX || 0,\n            y: originY || 0,\n        },\n        shape: {\n            width: resultWidth,\n            height: resultHeight,\n        },\n    };\n}\n","export const DEFAULT_WIDTH = 250;\nexport const DEFAULT_HEIGHT = 250;\n","/**\n * A supertype for every node in the scene. Both marks and items extend this\n */\nexport class SceneNode {\n    constructor() {\n        /**\n         * Metadata about this mark\n         */\n        this.metadata = {};\n    }\n}\n","import { StrokeCap, StrokeJoin, SGNodeType } from '@markable/interfaces';\nimport { SceneNode } from '../SceneNode';\nexport class Item extends SceneNode {\n    constructor() {\n        super(...arguments);\n        this.nodetype = SGNodeType.Item;\n        /**\n         * The fill color.\n         */\n        this.fill = 'none';\n        /**\n         * The stroke color.\n         */\n        this.stroke = 'none';\n        /**\n         * The stroke cap for line ending style. One of butt (default), round or square.\n         */\n        this.strokeCap = StrokeCap.Butt;\n        /**\n         * The stroke line join method. One of miter (default), round or bevel.\n         */\n        this.strokeJoin = StrokeJoin.Miter;\n        /**\n         * An integer z-index indicating the layering order of sibling mark items. The default value is 0.\n         * Higher values (1) will cause marks to be drawn on top of those with lower z-index values. Setting\n         * the z-index as an encoding property only affects ordering among sibling mark items; it will not change\n         * the layering relative to other mark definitions. Unlike the mark-level sort property, zindex changes the\n         * rendering order only; it does not otherwise change mark item order (such as line or area point order).\n         *\n         * The most common use of zindex is to ensure that a mark is drawn over its siblings when selected, such as\n         * by mouse hover.\n         */\n        this.zIndex = 0;\n        /**\n         * Event channels are a mapping of event names to their output channel.\n         */\n        this.channels = {};\n    }\n}\n","import { MarkType } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class ArcItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = ArcItem.ITEM_TYPE;\n        this.cornerRadius = 0;\n    }\n}\nArcItem.ITEM_TYPE = MarkType.Arc;\n","import { MarkType, Orientation, Interpolation, } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class AreaItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = AreaItem.ITEM_TYPE;\n        this.orient = Orientation.Vertical;\n        this.interpolate = Interpolation.Linear;\n    }\n}\nAreaItem.ITEM_TYPE = MarkType.Area;\n","import { MarkType } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class GroupItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = GroupItem.ITEM_TYPE;\n        this.cornerRadius = 0;\n        this.items = [];\n    }\n}\nGroupItem.ITEM_TYPE = MarkType.Group;\n","import { MarkType, HorizontalAlignment, VerticalAlignment, } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class ImageItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = ImageItem.ITEM_TYPE;\n        this.aspect = true;\n        this.align = HorizontalAlignment.Left;\n        this.baseline = VerticalAlignment.Top;\n    }\n}\nImageItem.ITEM_TYPE = MarkType.Image;\n","import { MarkType, Interpolation } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class LineItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = LineItem.ITEM_TYPE;\n        this.interpolate = Interpolation.Linear;\n    }\n}\nLineItem.ITEM_TYPE = MarkType.Line;\n","import { MarkType } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class PathItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = PathItem.ITEM_TYPE;\n    }\n}\nPathItem.ITEM_TYPE = MarkType.Path;\n","import { MarkType } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class RectItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = RectItem.ITEM_TYPE;\n        this.cornerRadius = 0;\n    }\n}\nRectItem.ITEM_TYPE = MarkType.Rect;\n","import { MarkType } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class RuleItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = RuleItem.ITEM_TYPE;\n    }\n}\nRuleItem.ITEM_TYPE = MarkType.Rule;\n","import { MarkType, SymbolType } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class SymbolItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = SymbolItem.ITEM_TYPE;\n        this.shape = SymbolType.Circle;\n    }\n}\nSymbolItem.ITEM_TYPE = MarkType.Symbol;\n","import { MarkType, HorizontalAlignment, VerticalTextAlignment, TextDirection, } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class TextItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = TextItem.ITEM_TYPE;\n        this.align = HorizontalAlignment.Left;\n        this.angle = 0;\n        this.baseline = VerticalTextAlignment.Alphabetic;\n        this.dir = TextDirection.LTR;\n        this.ellipsis = '...';\n        this.limit = 0;\n        this.radius = 0;\n    }\n}\nTextItem.ITEM_TYPE = MarkType.Text;\n","import { MarkType } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class TrailItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = TrailItem.ITEM_TYPE;\n    }\n}\nTrailItem.ITEM_TYPE = MarkType.Trail;\n","import { MarkType } from '@markable/interfaces';\nimport { Item } from './Item';\nexport class ShapeItem extends Item {\n    constructor() {\n        super(...arguments);\n        this.itemtype = ShapeItem.ITEM_TYPE;\n    }\n}\nShapeItem.ITEM_TYPE = MarkType.Shape;\n","import { ArcItem } from './ArcItem';\nimport { AreaItem } from './AreaItem';\nimport { GroupItem } from './GroupItem';\nimport { ImageItem } from './ImageItem';\nimport { LineItem } from './LineItem';\nimport { PathItem } from './PathItem';\nimport { RectItem } from './RectItem';\nimport { RuleItem } from './RuleItem';\nimport { SymbolItem } from './SymbolItem';\nimport { TextItem } from './TextItem';\nimport { TrailItem } from './TrailItem';\nimport { ShapeItem } from './ShapeItem';\n// Register the core item types\nimport { registerItemType } from '../../registry';\nregisterItemType(ArcItem);\nregisterItemType(AreaItem);\nregisterItemType(GroupItem);\nregisterItemType(ImageItem);\nregisterItemType(LineItem);\nregisterItemType(PathItem);\nregisterItemType(RectItem);\nregisterItemType(RuleItem);\nregisterItemType(SymbolItem);\nregisterItemType(TextItem);\nregisterItemType(TrailItem);\nregisterItemType(ShapeItem);\nexport * from './Item';\nexport { ArcItem, AreaItem, GroupItem, ImageItem, LineItem, PathItem, RectItem, RuleItem, SymbolItem, TextItem, TrailItem, ShapeItem, };\n","import { SGNodeType } from '@markable/interfaces';\nimport { SceneNode } from './SceneNode';\nexport class Mark extends SceneNode {\n    constructor() {\n        super(...arguments);\n        this.nodetype = SGNodeType.Mark;\n        this.items = [];\n    }\n}\n","import { createItem, createMark } from './factory';\nexport class MarkBuilder {\n    constructor(markType) {\n        this.markType = markType;\n        this.itemsValue = [];\n    }\n    items(...values) {\n        this.itemsValue.push(...values.map(itemProps => createItem(this.markType, itemProps)));\n        return this;\n    }\n    clip(value) {\n        this.clipValue = value;\n        return this;\n    }\n    interactive(value) {\n        this.interactiveValue = value;\n        return this;\n    }\n    role(value) {\n        this.roleValue = value;\n        return this;\n    }\n    name(value) {\n        this.nameValue = value;\n        return this;\n    }\n    zIndex(value) {\n        this.zIndexValue = value;\n        return this;\n    }\n    build() {\n        const result = createMark(this.markType, this.itemsValue);\n        result.clip = this.clipValue;\n        result.interactive = this.interactiveValue;\n        result.role = this.roleValue;\n        result.name = this.nameValue;\n        result.zIndex = this.zIndexValue;\n        return result;\n    }\n}\n","import * as Elements from './elements';\nimport { createItemType } from './registry';\nimport { MarkBuilder } from './MarkBuilder';\n/**\n *\n * @param markType The type of mark item to create\n * @param item The mark items to add\n */\nexport function createMark(markType, items) {\n    items.forEach((item, index) => {\n        if (item.itemtype !== markType) {\n            throw new Error(`Mark type must match the type of it's child items. Mark ${markType}, child ${item.itemtype}@${index}`);\n        }\n    });\n    const result = new Elements.Mark();\n    result.marktype = markType;\n    result.items = items;\n    return result;\n}\nexport function createItem(itemType, props = {}) {\n    return createItemType(itemType, props);\n}\nexport function buildMark(markType) {\n    return new MarkBuilder(markType);\n}\n","const itemRendererRegistry = new Map();\nexport function registerRenderer(markType, markRenderer) {\n    itemRendererRegistry.set(markType, markRenderer);\n}\nexport function renderMark(mark, context) {\n    if (!mark.marktype) {\n        throw new Error(`Unhandled mark type \"${mark.marktype}\"`);\n    }\n    const renderer = itemRendererRegistry.get(mark.marktype);\n    return renderer ? renderer.render(mark, context) : { nodes: [] };\n}\n","/**\n * Perform an invariant assertion that a mark is of a given type\n * @param mark The mark to inspect\n * @param itemType The expected item type\n */\nexport function assertTypeIs(mark, itemType) {\n    if (mark.marktype !== itemType) {\n        throw new Error(`\n            Tried to render a mark with the incorrect mark renderer. \n            Mark must be of type ${itemType}.\n        `);\n    }\n}\nfunction roleClass(role) {\n    return `role-${role || 'mark'}`;\n}\n/**\n *\n * @param marktype\n * @param children\n */\nexport function emitMarkGroup(marktype, role, children) {\n    const markGroup = {\n        type: 'g',\n        attrs: {\n            className: `mark-${marktype} ${roleClass(role)}`,\n        },\n        children,\n    };\n    return [markGroup];\n}\n/**\n * Copies shared vsvg props from the given mark into the vsvg node\n * @param item The mark item to copy from\n * @param result The vsvg node to copy into\n */\nexport function commonProps(item) {\n    const result = {};\n    if (item.fill !== undefined) {\n        result.fill = item.fill;\n    }\n    if (item.fillOpacity !== undefined) {\n        result.fillOpacity = item.fillOpacity;\n    }\n    if (item.stroke !== undefined) {\n        result.stroke = item.stroke;\n    }\n    result.strokeWidth = item.strokeWidth || 1;\n    if (item.strokeOpacity !== undefined) {\n        result.strokeOpacity = item.strokeOpacity;\n    }\n    if (item.strokeJoin !== undefined) {\n        result.strokeLinejoin = item.strokeJoin;\n    }\n    if (item.strokeCap !== undefined) {\n        result.strokeLinecap = item.strokeCap;\n    }\n    if (item.strokeDash !== undefined) {\n        result.strokeDasharray = item.strokeDash;\n    }\n    if (item.strokeDashOffset !== undefined) {\n        result.strokeDashoffset = item.strokeDashOffset;\n    }\n    return result;\n}\n","import { path } from 'd3-path';\nexport class Rectangle {\n    constructor(x = d => d.x || 0, y = d => d.y || 0, width = d => d.width || 0, height = d => d.height || 0, cornerRadius = d => d.cornerRadius || 0) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.cornerRadius = cornerRadius;\n    }\n    /**\n     * Draws out the Rectangle Shape\n     * @param d The bound datum\n     * @param x0 The offset x\n     * @param y0 The offset y\n     * @param context The drawing context (compatible with Canvas2DRenderingContext)\n     *\n     */\n    build(d, x0, y0, context) {\n        // tslint:disable-next-line no-this-assignment\n        const { x, y, width, height, cornerRadius } = this;\n        const x1 = x0 != null ? x0 : +x(d);\n        const y1 = y0 != null ? y0 : +y(d);\n        const w = +width(d);\n        const h = +height(d);\n        const cr = +cornerRadius(d);\n        if (!context) {\n            context = path();\n        }\n        if (cr <= 0) {\n            context.rect(x1, y1, w, h);\n        }\n        else {\n            const x2 = x1 + w;\n            const y2 = y1 + h;\n            context.moveTo(x1 + cr, y1);\n            context.lineTo(x2 - cr, y1);\n            context.quadraticCurveTo(x2, y1, x2, y1 + cr);\n            context.lineTo(x2, y2 - cr);\n            context.quadraticCurveTo(x2, y2, x2 - cr, y2);\n            context.lineTo(x1 + cr, y2);\n            context.quadraticCurveTo(x1, y2, x1, y2 - cr);\n            context.lineTo(x1, y1 + cr);\n            context.quadraticCurveTo(x1, y1, x1 + cr, y1);\n            context.closePath();\n        }\n        return context;\n    }\n}\n","import { path } from 'd3-path';\nconst pi = Math.PI;\nexport class Trail {\n    constructor(x = d => d.x || 0, y = d => d.y || 0, size = d => d.size || 0, defined) {\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.defined = defined;\n    }\n    build(data, context = path()) {\n        let prevX;\n        let prevY;\n        let prevR;\n        let ready = false;\n        let isLastDefined = false;\n        /**\n         * Emits a point in the stream\n         * @param x The x value\n         * @param y The y value\n         * @param w The width at the point\n         */\n        const emitPoint = (x, y, w) => {\n            const r2 = w / 2;\n            if (ready) {\n                let ux = prevY - y;\n                let uy = x - prevX;\n                if (ux || uy) {\n                    // get normal vector\n                    const ud = Math.sqrt(ux * ux + uy * uy);\n                    const rx = (ux /= ud) * prevR;\n                    const ry = (uy /= ud) * prevR;\n                    const t = Math.atan2(uy, ux);\n                    // draw segment\n                    context.moveTo(prevX - rx, prevY - ry);\n                    context.lineTo(x - ux * r2, y - uy * r2);\n                    context.arc(x, y, r2, t - pi, t);\n                    context.lineTo(prevX + rx, prevY + ry);\n                    context.arc(prevX, prevY, prevR, t, t + pi);\n                }\n                else {\n                    context.arc(x, y, r2, 0, 2 * pi);\n                }\n                context.closePath();\n            }\n            else {\n                ready = true;\n            }\n            // Set Previous Values\n            prevX = x;\n            prevY = y;\n            prevR = r2;\n        };\n        data.forEach((d, i) => {\n            const isDefined = this.defined(d, i, data);\n            if (isDefined !== isLastDefined) {\n                isLastDefined = isDefined;\n                ready = false;\n            }\n            if (isLastDefined) {\n                emitPoint(+this.x(d, i, data), +this.y(d, i, data), +this.size(d, i, data));\n            }\n        });\n        return context;\n    }\n}\n","// Path parsing and rendering code adapted from fabric.js -- Thanks!\nconst cmdlen = {\n    m: 2,\n    l: 2,\n    h: 1,\n    v: 1,\n    c: 6,\n    s: 4,\n    q: 4,\n    t: 2,\n    a: 7,\n};\nconst regexp = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)([-+])/g, /\\s|,|###/];\nexport default function (pathstr) {\n    const result = [];\n    // First, break path into command sequence\n    const path = pathstr\n        .slice()\n        .replace(regexp[0], '###$1')\n        .split(regexp[1])\n        .slice(1);\n    // Next, parse each command in turn\n    path.forEach(command => {\n        const chunks = command\n            .slice(1)\n            .trim()\n            .replace(regexp[2], '$1###$2')\n            .split(regexp[3]);\n        const cmd = command.charAt(0);\n        const cmdLength = cmdlen[cmd.toLowerCase()];\n        const parsed = [cmd];\n        chunks.forEach(chunk => {\n            const param = +chunks;\n            if (param === param) {\n                // not NaN\n                parsed.push(param);\n            }\n        });\n        // Force the parameters into the expected command length\n        if (parsed.length - 1 > cmdLength) {\n            for (let i = 1; i < parsed.length; i += cmdLength) {\n                result.push([cmd].concat(parsed.slice(i, i + cmdLength)));\n            }\n        }\n        else {\n            result.push(parsed);\n        }\n    });\n    return result;\n}\n","export const segmentCache = {};\nexport const bezierCache = {};\nconst join = [].join;\n// Copied from Inkscape svgtopdf, thanks!\nexport function segments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n    const key = join.call(arguments);\n    if (segmentCache[key]) {\n        return segmentCache[key];\n    }\n    const th = rotateX * (Math.PI / 180);\n    const sin_th = Math.sin(th);\n    const cos_th = Math.cos(th);\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    const px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n    const py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n    let pl = px * px / (rx * rx) + py * py / (ry * ry);\n    if (pl > 1) {\n        pl = Math.sqrt(pl);\n        rx *= pl;\n        ry *= pl;\n    }\n    const a00 = cos_th / rx;\n    const a01 = sin_th / rx;\n    const a10 = -sin_th / ry;\n    const a11 = cos_th / ry;\n    const x0 = a00 * ox + a01 * oy;\n    const y0 = a10 * ox + a11 * oy;\n    const x1 = a00 * x + a01 * y;\n    const y1 = a10 * x + a11 * y;\n    const d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n    let sfactor_sq = 1 / d - 0.25;\n    if (sfactor_sq < 0) {\n        sfactor_sq = 0;\n    }\n    let sfactor = Math.sqrt(sfactor_sq);\n    if (sweep === large) {\n        sfactor = -sfactor;\n    }\n    const xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n    const yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n    const th0 = Math.atan2(y0 - yc, x0 - xc);\n    const th1 = Math.atan2(y1 - yc, x1 - xc);\n    let th_arc = th1 - th0;\n    if (th_arc < 0 && sweep === 1) {\n        th_arc += 2 * Math.PI;\n    }\n    else if (th_arc > 0 && sweep === 0) {\n        th_arc -= 2 * Math.PI;\n    }\n    const segs = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n    const result = [];\n    for (let i = 0; i < segs; ++i) {\n        const th2 = th0 + i * th_arc / segs;\n        const th3 = th0 + (i + 1) * th_arc / segs;\n        result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n    }\n    return (segmentCache[key] = result);\n}\nexport function bezier(params) {\n    const key = join.call(params);\n    if (bezierCache[key]) {\n        return bezierCache[key];\n    }\n    const cx = params[0];\n    const cy = params[1];\n    const th0 = params[2];\n    const th1 = params[3];\n    const rx = params[4];\n    const ry = params[5];\n    const sin_th = params[6];\n    const cos_th = params[7];\n    const a00 = cos_th * rx;\n    const a01 = -sin_th * ry;\n    const a10 = sin_th * rx;\n    const a11 = cos_th * ry;\n    const cos_th0 = Math.cos(th0);\n    const sin_th0 = Math.sin(th0);\n    const cos_th1 = Math.cos(th1);\n    const sin_th1 = Math.sin(th1);\n    const th_half = 0.5 * (th1 - th0);\n    const sin_th_h2 = Math.sin(th_half * 0.5);\n    const t = 8 / 3 * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n    const x1 = cx + cos_th0 - t * sin_th0;\n    const y1 = cy + sin_th0 + t * cos_th0;\n    const x3 = cx + cos_th1;\n    const y3 = cy + sin_th1;\n    const x2 = x3 + t * sin_th1;\n    const y2 = y3 - t * cos_th1;\n    return (bezierCache[key] = [\n        a00 * x1 + a01 * y1,\n        a10 * x1 + a11 * y1,\n        a00 * x2 + a01 * y2,\n        a10 * x2 + a11 * y2,\n        a00 * x3 + a01 * y3,\n        a10 * x3 + a11 * y3,\n    ]);\n}\n","import { segments } from './arc';\nconst temp = ['l', 0, 0, 0, 0, 0, 0, 0];\nfunction scale(current, s) {\n    const c = (temp[0] = current[0]);\n    if (c === 'a' || c === 'A') {\n        temp[1] = s * current[1];\n        temp[2] = s * current[2];\n        temp[6] = s * current[6];\n        temp[7] = s * current[7];\n    }\n    else {\n        for (let i = 1, n = current.length; i < n; ++i) {\n            temp[i] = s * current[i];\n        }\n    }\n    return temp;\n}\nexport default function (context, path, l, t, s) {\n    let current; // current instruction\n    let previous = null;\n    let x = 0; // current x\n    let y = 0; // current y\n    let controlX = 0; // current control point x\n    let controlY = 0; // current control point y\n    let tempX;\n    let tempY;\n    let tempControlX;\n    let tempControlY;\n    if (l == null) {\n        l = 0;\n    }\n    if (t == null) {\n        t = 0;\n    }\n    if (s == null) {\n        s = 1;\n    }\n    if (context.beginPath) {\n        context.beginPath();\n    }\n    for (let i = 0, len = path.length; i < len; ++i) {\n        current = path[i];\n        if (s !== 1) {\n            current = scale(current, s);\n        }\n        switch (current[0] // first letter\n        ) {\n            case 'l': // lineto, relative\n                x += current[1];\n                y += current[2];\n                context.lineTo(x + l, y + t);\n                break;\n            case 'L': // lineto, absolute\n                x = current[1];\n                y = current[2];\n                context.lineTo(x + l, y + t);\n                break;\n            case 'h': // horizontal lineto, relative\n                x += current[1];\n                context.lineTo(x + l, y + t);\n                break;\n            case 'H': // horizontal lineto, absolute\n                x = current[1];\n                context.lineTo(x + l, y + t);\n                break;\n            case 'v': // vertical lineto, relative\n                y += current[1];\n                context.lineTo(x + l, y + t);\n                break;\n            case 'V': // verical lineto, absolute\n                y = current[1];\n                context.lineTo(x + l, y + t);\n                break;\n            case 'm': // moveTo, relative\n                x += current[1];\n                y += current[2];\n                context.moveTo(x + l, y + t);\n                break;\n            case 'M': // moveTo, absolute\n                x = current[1];\n                y = current[2];\n                context.moveTo(x + l, y + t);\n                break;\n            case 'c': // bezierCurveTo, relative\n                tempX = x + current[5];\n                tempY = y + current[6];\n                controlX = x + current[3];\n                controlY = y + current[4];\n                context.bezierCurveTo(x + current[1] + l, // x1\n                y + current[2] + t, // y1\n                controlX + l, // x2\n                controlY + t, // y2\n                tempX + l, tempY + t);\n                x = tempX;\n                y = tempY;\n                break;\n            case 'C': // bezierCurveTo, absolute\n                x = current[5];\n                y = current[6];\n                controlX = current[3];\n                controlY = current[4];\n                context.bezierCurveTo(current[1] + l, current[2] + t, controlX + l, controlY + t, x + l, y + t);\n                break;\n            case 's': // shorthand cubic bezierCurveTo, relative\n                // transform to absolute x,y\n                tempX = x + current[3];\n                tempY = y + current[4];\n                // calculate reflection of previous control points\n                controlX = 2 * x - controlX;\n                controlY = 2 * y - controlY;\n                context.bezierCurveTo(controlX + l, controlY + t, x + current[1] + l, y + current[2] + t, tempX + l, tempY + t);\n                // set control point to 2nd one of this command\n                // the first control point is assumed to be the reflection of\n                // the second control point on the previous command relative\n                // to the current point.\n                controlX = x + current[1];\n                controlY = y + current[2];\n                x = tempX;\n                y = tempY;\n                break;\n            case 'S': // shorthand cubic bezierCurveTo, absolute\n                tempX = current[3];\n                tempY = current[4];\n                // calculate reflection of previous control points\n                controlX = 2 * x - controlX;\n                controlY = 2 * y - controlY;\n                context.bezierCurveTo(controlX + l, controlY + t, current[1] + l, current[2] + t, tempX + l, tempY + t);\n                x = tempX;\n                y = tempY;\n                // set control point to 2nd one of this command\n                // the first control point is assumed to be the reflection of\n                // the second control point on the previous command relative\n                // to the current point.\n                controlX = current[1];\n                controlY = current[2];\n                break;\n            case 'q': // quadraticCurveTo, relative\n                // transform to absolute x,y\n                tempX = x + current[3];\n                tempY = y + current[4];\n                controlX = x + current[1];\n                controlY = y + current[2];\n                context.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n                x = tempX;\n                y = tempY;\n                break;\n            case 'Q': // quadraticCurveTo, absolute\n                tempX = current[3];\n                tempY = current[4];\n                context.quadraticCurveTo(current[1] + l, current[2] + t, tempX + l, tempY + t);\n                x = tempX;\n                y = tempY;\n                controlX = current[1];\n                controlY = current[2];\n                break;\n            case 't': // shorthand quadraticCurveTo, relative\n                // transform to absolute x,y\n                tempX = x + current[1];\n                tempY = y + current[2];\n                if (previous[0].match(/[QqTt]/) === null) {\n                    // If there is no previous command or if the previous command was not a Q, q, T or t,\n                    // assume the control point is coincident with the current point\n                    controlX = x;\n                    controlY = y;\n                }\n                else if (previous[0] === 't') {\n                    // calculate reflection of previous control points for t\n                    controlX = 2 * x - tempControlX;\n                    controlY = 2 * y - tempControlY;\n                }\n                else if (previous[0] === 'q') {\n                    // calculate reflection of previous control points for q\n                    controlX = 2 * x - controlX;\n                    controlY = 2 * y - controlY;\n                }\n                tempControlX = controlX;\n                tempControlY = controlY;\n                context.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n                x = tempX;\n                y = tempY;\n                controlX = x + current[1];\n                controlY = y + current[2];\n                break;\n            case 'T':\n                tempX = current[1];\n                tempY = current[2];\n                // calculate reflection of previous control points\n                controlX = 2 * x - controlX;\n                controlY = 2 * y - controlY;\n                context.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n                x = tempX;\n                y = tempY;\n                break;\n            case 'a':\n                drawArc(context, x + l, y + t, [\n                    current[1],\n                    current[2],\n                    current[3],\n                    current[4],\n                    current[5],\n                    current[6] + x + l,\n                    current[7] + y + t,\n                ]);\n                x += current[6];\n                y += current[7];\n                break;\n            case 'A':\n                drawArc(context, x + l, y + t, [\n                    current[1],\n                    current[2],\n                    current[3],\n                    current[4],\n                    current[5],\n                    current[6] + l,\n                    current[7] + t,\n                ]);\n                x = current[6];\n                y = current[7];\n                break;\n            case 'z':\n            case 'Z':\n                context.closePath();\n                break;\n        }\n        previous = current;\n    }\n}\nfunction drawArc(context, x, y, coords) {\n    const seg = segments(coords[5], // end x\n    coords[6], // end y\n    coords[0], // radius x\n    coords[1], // radius y\n    coords[3], // large flag\n    coords[4], // sweep flag\n    coords[2], // rotation\n    x, y);\n    seg.forEach((bez) => {\n        context.bezierCurveTo(bez[0], bez[1], bez[2], bez[3], bez[4], bez[5]);\n    });\n}\n","import { path } from 'd3-path';\nimport pathParse from './parse';\nimport pathRender from './render';\nconst tau = 2 * Math.PI;\nconst halfSqrt3 = Math.sqrt(3) / 2;\nconst builtins = {\n    circle: {\n        draw(context, size) {\n            if (!context) {\n                context = path();\n            }\n            const r = Math.sqrt(size) / 2;\n            context.moveTo(r, 0);\n            context.arc(0, 0, r, 0, tau);\n            return context;\n        },\n    },\n    cross: {\n        draw(context, size) {\n            if (!context) {\n                context = path();\n            }\n            const r = Math.sqrt(size) / 2;\n            const s = r / 2.5;\n            context.moveTo(-r, -s);\n            context.lineTo(-r, s);\n            context.lineTo(-s, s);\n            context.lineTo(-s, r);\n            context.lineTo(s, r);\n            context.lineTo(s, s);\n            context.lineTo(r, s);\n            context.lineTo(r, -s);\n            context.lineTo(s, -s);\n            context.lineTo(s, -r);\n            context.lineTo(-s, -r);\n            context.lineTo(-s, -s);\n            context.closePath();\n            return context;\n        },\n    },\n    diamond: {\n        draw(context, size) {\n            if (!context) {\n                context = path();\n            }\n            const r = Math.sqrt(size) / 2;\n            context.moveTo(-r, 0);\n            context.lineTo(0, -r);\n            context.lineTo(r, 0);\n            context.lineTo(0, r);\n            context.closePath();\n            return context;\n        },\n    },\n    square: {\n        draw(context, size) {\n            if (!context) {\n                context = path();\n            }\n            const w = Math.sqrt(size);\n            const x = -w / 2;\n            context.rect(x, x, w, w);\n            return context;\n        },\n    },\n    'triangle-up': {\n        draw(context, size) {\n            if (!context) {\n                context = path();\n            }\n            const r = Math.sqrt(size) / 2;\n            const h = halfSqrt3 * r;\n            context.moveTo(0, -h);\n            context.lineTo(-r, h);\n            context.lineTo(r, h);\n            context.closePath();\n            return context;\n        },\n    },\n    'triangle-down': {\n        draw(context, size) {\n            if (!context) {\n                context = path();\n            }\n            const r = Math.sqrt(size) / 2;\n            const h = halfSqrt3 * r;\n            context.moveTo(0, h);\n            context.lineTo(-r, -h);\n            context.lineTo(r, -h);\n            context.closePath();\n            return context;\n        },\n    },\n    'triangle-right': {\n        draw(context, size) {\n            if (!context) {\n                context = path();\n            }\n            const r = Math.sqrt(size) / 2;\n            const h = halfSqrt3 * r;\n            context.moveTo(h, 0);\n            context.lineTo(-h, -r);\n            context.lineTo(-h, r);\n            context.closePath();\n            return context;\n        },\n    },\n    'triangle-left': {\n        draw(context, size) {\n            if (!context) {\n                context = path();\n            }\n            const r = Math.sqrt(size) / 2;\n            const h = halfSqrt3 * r;\n            context.moveTo(-h, 0);\n            context.lineTo(h, -r);\n            context.lineTo(h, r);\n            context.closePath();\n            return context;\n        },\n    },\n};\nexport default function symbols(symbolName) {\n    return builtins.hasOwnProperty(symbolName)\n        ? builtins[symbolName]\n        : customSymbol(symbolName);\n}\nconst custom = {};\nfunction customSymbol(symbolPath) {\n    if (!custom.hasOwnProperty(symbolPath)) {\n        const parsed = pathParse(symbolPath);\n        custom[symbolPath] = {\n            draw(context, size) {\n                if (!context) {\n                    context = path();\n                }\n                pathRender(context, parsed, 0, 0, Math.sqrt(size) / 2);\n                return context;\n            },\n        };\n    }\n    return custom[symbolPath];\n}\n","import { arc as d3_arc, symbol as d3_symbol, area as d3_area, line as d3_line, } from 'd3-shape';\nimport { Rectangle } from './Rectangle';\nimport { Trail } from './Trail';\nimport symbols from './symbols';\nfunction x(item) {\n    return item.x || 0;\n}\nfunction y(item) {\n    return item.y || 0;\n}\nfunction w(item) {\n    return item.width || 0;\n}\nfunction ts(item) {\n    return item.size || 1;\n}\nfunction h(item) {\n    return item.height || 0;\n}\nfunction xw(item) {\n    return (item.x || 0) + (item.width || 0);\n}\nfunction yh(item) {\n    return (item.y || 0) + (item.height || 0);\n}\nfunction sa(item) {\n    return item.startAngle || 0;\n}\nfunction ea(item) {\n    return item.endAngle || 0;\n}\nfunction pa(item) {\n    return item.padAngle || 0;\n}\nfunction ir(item) {\n    return item.innerRadius || 0;\n}\nfunction or(item) {\n    return item.outerRadius || 0;\n}\nfunction cr(item) {\n    return item.cornerRadius || 0;\n}\nfunction def(item) {\n    return !(item.defined === false);\n}\nfunction size(item) {\n    return item.size == null ? 64 : item.size;\n}\nfunction type(item) {\n    return symbols(item.shape || 'circle');\n}\nexport const rectShape = new Rectangle(x, y, w, h, cr);\nexport const trailShape = new Trail(x, y, ts, def);\nexport const arcShape = d3_arc()\n    .startAngle(sa)\n    .endAngle(ea)\n    .padAngle(pa)\n    .innerRadius(ir)\n    .outerRadius(or)\n    .cornerRadius(cr);\nexport const areavShape = d3_area()\n    .x(x)\n    .y1(y)\n    .y0(yh)\n    .defined(def);\nexport const areahShape = d3_area()\n    .y(y)\n    .x1(x)\n    .x0(xw)\n    .defined(def);\nexport const lineShape = d3_line()\n    .x(x)\n    .y(y)\n    .defined(def);\nexport const symbolShape = d3_symbol()\n    .type(type)\n    .size(size);\n","import { curveBasis, curveBasisClosed, curveBasisOpen, curveBundle, curveCardinal, curveCardinalClosed, curveCardinalOpen, curveCatmullRom, curveCatmullRomClosed, curveCatmullRomOpen, curveLinear, curveLinearClosed, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore, } from 'd3-shape';\nconst lookup = {\n    basis: {\n        curve: curveBasis,\n    },\n    'basis-closed': {\n        curve: curveBasisClosed,\n    },\n    'basis-open': {\n        curve: curveBasisOpen,\n    },\n    bundle: {\n        curve: curveBundle,\n        tension: 'beta',\n        value: 0.85,\n    },\n    cardinal: {\n        curve: curveCardinal,\n        tension: 'tension',\n        value: 0,\n    },\n    'cardinal-open': {\n        curve: curveCardinalOpen,\n        tension: 'tension',\n        value: 0,\n    },\n    'cardinal-closed': {\n        curve: curveCardinalClosed,\n        tension: 'tension',\n        value: 0,\n    },\n    'catmull-rom': {\n        curve: curveCatmullRom,\n        tension: 'alpha',\n        value: 0.5,\n    },\n    'catmull-rom-closed': {\n        curve: curveCatmullRomClosed,\n        tension: 'alpha',\n        value: 0.5,\n    },\n    'catmull-rom-open': {\n        curve: curveCatmullRomOpen,\n        tension: 'alpha',\n        value: 0.5,\n    },\n    linear: {\n        curve: curveLinear,\n    },\n    'linear-closed': {\n        curve: curveLinearClosed,\n    },\n    monotone: {\n        horizontal: curveMonotoneY,\n        vertical: curveMonotoneX,\n    },\n    natural: {\n        curve: curveNatural,\n    },\n    step: {\n        curve: curveStep,\n    },\n    'step-after': {\n        curve: curveStepAfter,\n    },\n    'step-before': {\n        curve: curveStepBefore,\n    },\n};\nexport default function curves(type, orientation, tension) {\n    const entry = lookup.hasOwnProperty(type) && lookup[type];\n    // let curve: CurveFactory | CurveBundleFactory\n    if (entry) {\n        const curveFactory = entry.curve || entry[orientation || 'vertical'];\n        if (entry.tension && tension != null) {\n            return curveFactory[entry.tension](tension);\n        }\n        else {\n            return curveFactory;\n        }\n    }\n    else {\n        throw new Error(`could not retrieve curveFactory type ${type}, orientation ${orientation}`);\n    }\n}\n","import { Interpolation, Orientation, } from '@markable/interfaces';\nimport { rectShape, trailShape, arcShape, areavShape, areahShape, lineShape, symbolShape, } from '@markable/shapes';\nimport curves from './curves';\nexport function arc(item, context) {\n    return arcShape.context(context)(item);\n}\nexport function area(items, context) {\n    const first = items[0];\n    const interp = first.interpolate || Interpolation.Linear;\n    return (first.orient === Orientation.Horizontal ? areahShape : areavShape)\n        .curve(curves(interp, first.orient, first.tension))\n        .context(context)(items); // TODO: is this correct?\n}\nexport function line(items, context) {\n    const item = items[0];\n    const interp = item.interpolate || 'linear';\n    return lineShape\n        .curve(curves(interp, undefined, item.tension))\n        .context(context)(items);\n}\nexport function rectangle(item, xOffset, yOffset, context) {\n    return rectShape.build(item, xOffset, yOffset, context);\n}\nexport function trail(items, context) {\n    return trailShape.build(items, context);\n}\nexport function symbol(item, context) {\n    return symbolShape.context(context)(item);\n}\n/*\nTODO: Handle Custom shape marks\nexport function shape(item: ShapeItem, context: Path) {\n    return (item.mark.shape || item.shape).context(context)(item)\n}\n*/\n/*\n*/\n","import { VSvgTransformType } from '@markable/interfaces';\nexport function translate(x, y) {\n    return { type: VSvgTransformType.translate, value: [x, y] };\n}\nexport function rotate(angle) {\n    return { type: VSvgTransformType.rotate, value: angle };\n}\n","import { MarkType } from '@markable/interfaces';\nimport { emitMarkGroup, commonProps, assertTypeIs } from './util';\nimport { arc } from '../path';\nimport { translate } from './interfaces';\nexport class ArcRenderer {\n    render(mark) {\n        assertTypeIs(mark, ArcRenderer.TARGET_MARK_TYPE);\n        const nodes = emitMarkGroup(MarkType.Arc, mark.role, mark.items.map(item => {\n            const { x, y } = item;\n            const result = {\n                type: 'path',\n                attrs: Object.assign({}, commonProps(item), { d: arc(item) }),\n                transforms: [translate(x || 0, y || 0)],\n                channels: item.channels,\n                metadata: item.metadata,\n            };\n            return result;\n        }));\n        return { nodes };\n    }\n}\nArcRenderer.TARGET_MARK_TYPE = MarkType.Arc;\n","import { MarkType, getItemSpace } from '@markable/interfaces';\nimport { emitMarkGroup, commonProps, assertTypeIs } from './util';\nimport { area } from '../path';\nexport class AreaRenderer {\n    render(mark) {\n        assertTypeIs(mark, AreaRenderer.TARGET_MARK_TYPE);\n        if (mark.items.map.length === 0) {\n            return { nodes: [] };\n        }\n        const areaItems = mark.items.map(a => {\n            const space = getItemSpace(a);\n            const ai = a;\n            ai.width = space.shape.width;\n            ai.height = space.shape.height;\n            return ai;\n        });\n        const areaItem = {\n            type: 'path',\n            attrs: {\n                d: area(areaItems),\n            },\n            metadata: areaItems[0].metadata,\n            channels: areaItems[0].channels,\n        };\n        mark.items.forEach(item => (areaItem.attrs = Object.assign({}, areaItem.attrs, commonProps(item))));\n        const nodes = emitMarkGroup(MarkType.Area, mark.role, [areaItem]);\n        return { nodes };\n    }\n}\nAreaRenderer.TARGET_MARK_TYPE = MarkType.Area;\n","// tslint:disable no-submodule-imports\nimport { MarkType, getItemSpace, } from '@markable/interfaces';\nimport { commonProps, assertTypeIs } from './util';\nimport { renderMark } from './index';\nimport { rectangle } from '../path';\nimport { translate, } from './interfaces';\nfunction flatMap(items, lambda) {\n    const mappedItems = items.map(lambda);\n    return Array.prototype.concat.apply([], mappedItems);\n}\n/**\n * Renders a group's \"rectangle\", which can have a fill and stroke\n * @param item\n */\nfunction renderGroupRectangle(item, space) {\n    const groupRectCommonProps = commonProps(item);\n    const originX = space.origin.x || 0;\n    const originY = space.origin.y || 0;\n    const rectItem = item;\n    rectItem.width = space.shape.width;\n    rectItem.height = space.shape.height;\n    const groupRectShape = {\n        d: rectangle(item, originX, originY).toString(),\n    };\n    const attrs = Object.assign({}, groupRectCommonProps, groupRectShape);\n    const { metadata, channels } = item;\n    const groupRect = {\n        type: 'path',\n        attrs,\n        metadata,\n        channels,\n    };\n    return groupRect;\n}\n/**\n * Renders children of the group\n * @param item The group item\n */\nfunction renderChildren(item, context) {\n    let nodes = [];\n    let defs = [];\n    const groupItems = item.items || [];\n    groupItems.forEach(m => {\n        const renderedChild = renderMark(m, context);\n        if (renderedChild.defs) {\n            defs = [...defs, ...renderedChild.defs];\n        }\n        nodes = [...nodes, ...renderedChild.nodes];\n    });\n    return { defs, nodes };\n}\nfunction renderGroup(item, space, children) {\n    const { channels, metadata } = item;\n    const group = {\n        type: 'g',\n        transforms: [translate(space.origin.x, space.origin.y)],\n        children,\n        metadata,\n        channels,\n    };\n    return group;\n}\nfunction renderGroupClip(clipId, group, groupRect) {\n    const clipPath = {\n        type: 'clipPath',\n        attrs: {\n            id: clipId,\n        },\n        children: [groupRect],\n    };\n    group = {\n        type: 'g',\n        attrs: {\n            clipPath: `url(#${clipId})`,\n        },\n        children: [group],\n    };\n    return { clipPath, group };\n}\nexport class GroupRenderer {\n    render(mark, context) {\n        assertTypeIs(mark, GroupRenderer.TARGET_MARK_TYPE);\n        const defs = [];\n        const nodes = flatMap(mark.items, (item) => {\n            const space = getItemSpace(item);\n            // Render the Group's Rectangle\n            const groupRect = renderGroupRectangle(item, space);\n            // Render the Group's children\n            const { defs: groupDefs, nodes: groupChildren } = renderChildren(item, context);\n            defs.push(...(groupDefs || []));\n            // Render the group\n            let group = renderGroup(item, space, groupChildren);\n            // Handle if the group is clipped\n            if (item.clip) {\n                const { group: groupWrapper, clipPath } = renderGroupClip(`clip${context.nextId()}`, group, groupRect);\n                defs.push(clipPath);\n                group = groupWrapper;\n            }\n            return [groupRect, group];\n        });\n        return { nodes, defs };\n    }\n}\nGroupRenderer.TARGET_MARK_TYPE = MarkType.Group;\n","import { MarkType } from '@markable/interfaces';\nimport { assertTypeIs } from './util';\nexport class ImageRenderer {\n    render(mark) {\n        assertTypeIs(mark, ImageRenderer.TARGET_MARK_TYPE);\n        // TODO\n        return { nodes: [] };\n    }\n}\nImageRenderer.TARGET_MARK_TYPE = MarkType.Image;\n","import { MarkType } from '@markable/interfaces';\nimport { emitMarkGroup, commonProps, assertTypeIs } from './util';\nimport { line } from '../path';\nexport class LineRenderer {\n    render(mark) {\n        assertTypeIs(mark, LineRenderer.TARGET_MARK_TYPE);\n        if (mark.items.map.length === 0) {\n            return { nodes: [] };\n        }\n        const lineItem = {\n            type: 'path',\n            attrs: {\n                d: line(mark.items),\n            },\n            metadata: mark.items[0].metadata,\n            channels: mark.items[0].channels,\n        };\n        mark.items.forEach(item => (lineItem.attrs = Object.assign({}, lineItem.attrs, commonProps(item))));\n        const nodes = emitMarkGroup(MarkType.Line, mark.role, [lineItem]);\n        return { nodes };\n    }\n}\nLineRenderer.TARGET_MARK_TYPE = MarkType.Line;\n","import { MarkType } from '@markable/interfaces';\nimport { emitMarkGroup, commonProps, assertTypeIs } from './util';\nimport { translate } from './interfaces';\nexport class PathRenderer {\n    render(mark) {\n        assertTypeIs(mark, PathRenderer.TARGET_MARK_TYPE);\n        const nodes = emitMarkGroup(MarkType.Path, mark.role, mark.items.map(item => {\n            const { x, y } = item;\n            const result = {\n                type: 'path',\n                attrs: Object.assign({}, commonProps(item), { d: item.path }),\n                transforms: [translate(x || 0, y || 0)],\n                metadata: item.metadata,\n                channels: item.channels,\n            };\n            return result;\n        }));\n        return { nodes };\n    }\n}\nPathRenderer.TARGET_MARK_TYPE = MarkType.Path;\n","import { MarkType, getItemSpace, } from '@markable/interfaces';\nimport { commonProps, assertTypeIs, emitMarkGroup } from './util';\nimport { rectangle } from '../path';\nexport class RectRenderer {\n    render(mark) {\n        assertTypeIs(mark, RectRenderer.TARGET_MARK_TYPE);\n        const nodes = emitMarkGroup(MarkType.Rect, mark.role, mark.items.map(item => {\n            const { metadata, channels } = item;\n            const space = getItemSpace(item);\n            const attrs = commonProps(item);\n            const rectItem = item;\n            rectItem.width = space.shape.width;\n            rectItem.height = space.shape.height;\n            attrs.d = rectangle(rectItem, space.origin.x, space.origin.y).toString();\n            const result = {\n                type: 'path',\n                attrs,\n                metadata,\n                channels,\n            };\n            return result;\n        }));\n        return { nodes };\n    }\n}\nRectRenderer.TARGET_MARK_TYPE = MarkType.Rect;\n","import { MarkType } from '@markable/interfaces';\nimport { assertTypeIs, emitMarkGroup, commonProps } from './util';\nimport { translate } from './interfaces';\nexport class RuleRenderer {\n    render(mark) {\n        assertTypeIs(mark, RuleRenderer.TARGET_MARK_TYPE);\n        // Render each item embedded in this mark\n        const nodes = emitMarkGroup(MarkType.Rule, mark.role, mark.items.map(item => {\n            const x = item.x || 0;\n            const y = item.y || 0;\n            const attrs = commonProps(item);\n            if (item.x2 !== undefined) {\n                attrs.x2 = item.x2 - x;\n            }\n            if (item.y2 !== undefined) {\n                attrs.y2 = item.y2 - y;\n            }\n            const result = {\n                type: 'line',\n                attrs,\n                transforms: [translate(x, y)],\n                channels: item.channels,\n                metadata: item.metadata,\n            };\n            return result;\n        }));\n        return { nodes };\n    }\n}\nRuleRenderer.TARGET_MARK_TYPE = MarkType.Rule;\n","import { MarkType } from '@markable/interfaces';\nimport { emitMarkGroup, commonProps, assertTypeIs } from './util';\nimport { symbol } from '../path';\nimport { translate } from './interfaces';\nexport class SymbolRenderer {\n    render(mark) {\n        assertTypeIs(mark, SymbolRenderer.TARGET_MARK_TYPE);\n        const nodes = emitMarkGroup(MarkType.Symbol, mark.role, mark.items.map(item => {\n            const { x = 0, y = 0 } = item;\n            const result = {\n                type: 'path',\n                attrs: Object.assign({}, commonProps(item), { d: symbol(item) }),\n                transforms: [translate(x, y)],\n                metadata: item.metadata,\n                channels: item.channels,\n            };\n            return result;\n        }));\n        return { nodes };\n    }\n}\nSymbolRenderer.TARGET_MARK_TYPE = MarkType.Symbol;\n","import { MarkType, VerticalTextAlignment, } from '@markable/interfaces';\nimport { emitMarkGroup, commonProps, assertTypeIs } from './util';\nimport { rotate, translate } from './interfaces';\nconst alignments = { left: 'start', center: 'middle', right: 'end' };\nconst DEFAULT_FONT_SIZE = 11;\nconst DEFAULT_FONT_FAMILY = 'sans-serif';\nfunction calculateTextOrigin({ x, y, baseline, fontSize, radius = 0, theta = 0, }) {\n    x = x || 0;\n    y = y || 0;\n    if (radius) {\n        const t = theta - Math.PI / 2;\n        x += radius * Math.cos(t);\n        y += radius * Math.sin(t);\n    }\n    return [x, y];\n}\nfunction calculateBaseline(alignment) {\n    switch (alignment) {\n        case VerticalTextAlignment.Top:\n            return 'hanging';\n        case VerticalTextAlignment.Middle:\n            return 'central';\n        case VerticalTextAlignment.Bottom:\n            return 'baseline';\n        default:\n            return undefined;\n    }\n}\nfunction getTextTransforms(item) {\n    const origin = calculateTextOrigin(item);\n    const transforms = [];\n    if (item.angle !== undefined) {\n        transforms.push(translate(origin[0], origin[1]), rotate(item.angle));\n        if (item.dx !== undefined || item.dy !== undefined) {\n            transforms.push(translate(item.dx || 0, item.dy || 0));\n        }\n    }\n    else {\n        transforms.push(translate(origin[0] + (item.dx || 0) || 0, origin[1] + (item.dy || 0) || 0));\n    }\n    return transforms;\n}\nexport class TextRenderer {\n    render(mark) {\n        assertTypeIs(mark, TextRenderer.TARGET_MARK_TYPE);\n        const nodes = emitMarkGroup(MarkType.Text, mark.role, mark.items.map(item => {\n            const attrs = Object.assign({}, commonProps(item), { alignmentBaseline: calculateBaseline(item.baseline) });\n            if (item.align) {\n                attrs.textAnchor = alignments[item.align];\n            }\n            const children = item.text !== undefined ? [item.text] : undefined;\n            const result = {\n                type: 'text',\n                attrs,\n                style: {\n                    fontSize: item.fontSize || DEFAULT_FONT_SIZE,\n                    fontFamily: item.font || DEFAULT_FONT_FAMILY,\n                    fontWeight: item.fontWeight,\n                    fontStyle: item.fontStyle,\n                    fontVariant: item.fontVariant,\n                },\n                transforms: getTextTransforms(item),\n                metadata: item.metadata,\n                channels: item.channels,\n                children,\n            };\n            return result;\n        }));\n        return { nodes };\n    }\n}\nTextRenderer.TARGET_MARK_TYPE = MarkType.Text;\n","import { MarkType } from '@markable/interfaces';\nimport { assertTypeIs } from './util';\nexport class TrailRenderer {\n    render(mark) {\n        assertTypeIs(mark, TrailRenderer.TARGET_MARK_TYPE);\n        // TODO\n        return { nodes: [] };\n    }\n}\nTrailRenderer.TARGET_MARK_TYPE = MarkType.Trail;\n","import { MarkType } from '@markable/interfaces';\nimport { assertTypeIs } from './util';\nexport class ShapeRenderer {\n    render(mark) {\n        assertTypeIs(mark, ShapeRenderer.TARGET_MARK_TYPE);\n        // TODO\n        return { nodes: [] };\n    }\n}\nShapeRenderer.TARGET_MARK_TYPE = MarkType.Shape;\n","import { MarkType } from '@markable/interfaces';\nimport { registerRenderer } from './registry';\nimport { ArcRenderer } from './ArcRenderer';\nimport { AreaRenderer } from './AreaRenderer';\nimport { GroupRenderer } from './GroupRenderer';\nimport { ImageRenderer } from './ImageRenderer';\nimport { LineRenderer } from './LineRenderer';\nimport { PathRenderer } from './PathRenderer';\nimport { RectRenderer } from './RectRenderer';\nimport { RuleRenderer } from './RuleRenderer';\nimport { SymbolRenderer } from './SymbolRenderer';\nimport { TextRenderer } from './TextRenderer';\nimport { TrailRenderer } from './TrailRenderer';\nimport { ShapeRenderer } from './ShapeRenderer';\nregisterRenderer(MarkType.Arc, new ArcRenderer());\nregisterRenderer(MarkType.Area, new AreaRenderer());\nregisterRenderer(MarkType.Group, new GroupRenderer());\nregisterRenderer(MarkType.Image, new ImageRenderer());\nregisterRenderer(MarkType.Line, new LineRenderer());\nregisterRenderer(MarkType.Path, new PathRenderer());\nregisterRenderer(MarkType.Rect, new RectRenderer());\nregisterRenderer(MarkType.Rule, new RuleRenderer());\nregisterRenderer(MarkType.Shape, new ShapeRenderer());\nregisterRenderer(MarkType.Symbol, new SymbolRenderer());\nregisterRenderer(MarkType.Text, new TextRenderer());\nregisterRenderer(MarkType.Trail, new TrailRenderer());\nexport * from './registry';\n","import { DEFAULT_HEIGHT, DEFAULT_WIDTH, } from '@markable/interfaces';\nimport { renderMark } from './element_renderers';\nimport { translate } from './element_renderers/interfaces';\nconst DEFAULT_BG_COLOR = 'transparent';\nconst DEFAULT_ORIGIN = [0, 0];\n/**\n * The VirtualSvgRender renders Scenegraph data into a serializable Virtual DOM.\n *\n * The Virtual Dom acts as an intermediate form that can be rendered out into many forms.\n */\nexport class VirtualSvgConverter {\n    render(mark, options) {\n        const { width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT, backgroundColor = DEFAULT_BG_COLOR, origin = DEFAULT_ORIGIN, } = options;\n        const [x = 0, y = 0] = origin;\n        // Create the rendering Context\n        let id = 0;\n        const context = {\n            nextId: () => `${++id}`,\n        };\n        // Get the rendering of the root mark\n        const root = renderMark(mark, context);\n        const children = [\n            {\n                type: 'defs',\n                children: root.defs,\n            },\n            {\n                type: 'g',\n                transforms: [translate(x, y)],\n                children: root.nodes,\n            },\n        ];\n        // Wrap the rendered root in an SVG\n        const svg = {\n            type: 'svg',\n            attrs: {\n                width: width + x,\n                height: height + y,\n            },\n            style: {\n                backgroundColor,\n            },\n            children,\n        };\n        return svg;\n    }\n}\n","import { DEFAULT_HEIGHT, DEFAULT_WIDTH, } from '@markable/interfaces';\nexport class ChartOptionsManager {\n    constructor(options) {\n        this.options = options;\n    }\n    get chartSpace() {\n        const width = this.options.width || DEFAULT_WIDTH;\n        const height = this.options.height || DEFAULT_HEIGHT;\n        return {\n            origin: {\n                x: this.paddingLeft,\n                y: this.paddingTop,\n            },\n            shape: {\n                width: width - this.paddingLeft - this.paddingRight,\n                height: height - this.paddingTop - this.paddingBottom,\n            },\n        };\n    }\n    get paddingTop() {\n        return this.getPadding('top');\n    }\n    get paddingBottom() {\n        return this.getPadding('bottom');\n    }\n    get paddingLeft() {\n        return this.getPadding('left');\n    }\n    get paddingRight() {\n        return this.getPadding('right');\n    }\n    getPadding(name) {\n        const paddingType = typeof this.options.padding;\n        if (paddingType === 'number') {\n            return this.options.padding;\n        }\n        else if (paddingType === 'object') {\n            return this.options.padding[name] || 0;\n        }\n        return 0;\n    }\n}\n","/**\n * The scene frame is analagous to a stack-frame - it contains contextual\n * information for a section of a scene, including dimensions, scales, data, and event handlers\n */\nexport class SceneFrame {\n    constructor(node, mark, data, view, viewTL = [0, 0], viewBR = [view.height, view.width], scales = {}, channels = {}, channelId = 0, channelHandlers = {}, boundDataItem = {}) {\n        this.node = node;\n        this.mark = mark;\n        this.data = data;\n        this.view = view;\n        this.viewTL = viewTL;\n        this.viewBR = viewBR;\n        this.scales = scales;\n        this.channels = channels;\n        this.channelId = channelId;\n        this.channelHandlers = channelHandlers;\n        this.boundDataItem = boundDataItem;\n    }\n    /**\n     * Emits a new scene frame with the given node. Recomputes scales and registers handelrs.\n     */\n    pushNode(node) {\n        const scales = this.getRecomputedScales(node, this.viewTL, this.viewBR);\n        return new SceneFrame(node, undefined, this.data, this.view, this.viewTL, this.viewBR, scales, {}, this.channelId, this.channelHandlers, this.boundDataItem);\n    }\n    pushMark(mark) {\n        const channels = this.registerChannels(mark.channels);\n        return new SceneFrame(this.node, mark, this.data, this.view, this.viewTL, this.viewBR, this.scales, channels, this.channelId, this.channelHandlers, this.boundDataItem);\n    }\n    pushData(data) {\n        const dataFrame = Object.assign({}, this.data, data);\n        return new SceneFrame(this.node, this.mark, dataFrame, this.view, this.viewTL, this.viewBR, this.scales, this.channels, this.channelId, this.channelHandlers, this.boundDataItem);\n    }\n    /**\n     * Pushes a new sceneframe with an updated viewspace. Recomputes scales.\n     *\n     * @param view The new view to push. This is the size of the group that will be inserted\n     * @param viewTL The top-left of the draw-area within the view. This does not affect the emitted\n     * group, but does affect draw-scales\n     * @param viewBR The bottom-right of the draw-area within the view. This does not affect the emitted\n     * group, but does affect draw-scales\n     */\n    pushView(view, viewTL = [0, 0], viewBR = [view.height, view.width]) {\n        const scales = this.getRecomputedScales(this.node, viewTL, viewBR);\n        return new SceneFrame(this.node, this.mark, this.data, view, viewTL, viewBR, scales, this.channels, this.channelId, this.channelHandlers, this.boundDataItem);\n    }\n    pushBoundDataItem(dataItem) {\n        return new SceneFrame(this.node, this.mark, this.data, this.view, this.viewTL, this.viewBR, this.scales, this.channels, this.channelId, this.channelHandlers, dataItem);\n    }\n    getRecomputedScales(node, viewTL, viewBR) {\n        const data = this.data;\n        let scales = Object.assign({}, this.scales);\n        const xBounds = [viewTL[1], viewBR[1]];\n        const yBounds = [viewBR[0], viewTL[0]];\n        node.scales.forEach(creator => {\n            const args = {\n                viewBounds: { x: xBounds, y: yBounds },\n                data,\n                scales,\n            };\n            const newScales = creator(args);\n            scales = Object.assign({}, scales, newScales);\n        });\n        return scales;\n    }\n    registerChannels(channels) {\n        // For each channel the client specifies, encode the name-mapping in the Scenegraph and\n        // map the handler function in our scene result\n        return Object.entries(channels).reduce((prev, [eventName, handler]) => {\n            prev[eventName] = this.registerHandler(handler);\n            return prev;\n        }, {});\n    }\n    registerHandler(handler) {\n        const id = `evt${this.channelId++}`;\n        this.channelHandlers[id] = handler;\n        return id;\n    }\n}\n","import { MarkType, getItemSpace, } from '@markable/interfaces';\nimport { createItem } from '@markable/scenegraph';\nimport { processNode } from '../processNode';\n/**\n * Creates a scenegraph item bound to a data row\n *\n * @param frame The current scene frame\n * @param row The data row\n * @param index The data row index\n * @param table The data table\n */\nexport function createBoundItem(frame, row, index, table) {\n    const mark = frame.mark;\n    const item = createItemFromMark(mark, row, index, table, frame);\n    if (mark.type !== MarkType.Group) {\n        return item;\n    }\n    // Update the view and recompute scales\n    const groupDrawRect = getNextDrawRect(getItemSpace(item), frame.view);\n    const itemFrame = frame\n        .pushView({\n        width: groupDrawRect.right - groupDrawRect.left,\n        height: groupDrawRect.bottom - groupDrawRect.top,\n    })\n        .pushBoundDataItem(row);\n    // Mash in the children and the bounds\n    const items = mark.child ? processNode(mark.child, itemFrame) : [];\n    const groupItem = Object.assign({}, item, { items, x: groupDrawRect.left, y: groupDrawRect.top, x2: groupDrawRect.right, y2: groupDrawRect.bottom });\n    return groupItem;\n}\n/**\n * Creates a scenegraph item for a giver mark\n * @param mark The mark being used to specify the new item\n * @param row The data row bound to the mark\n * @param index The index of the data-row relative to its table\n * @param data The data table containing the row bound to the mark\n * @param channelNames The event-handling channel names to attach to this item\n * @param scales The current scale frame, required to encode item properties\n * @param dataFrame The current data frame, required to encode item properties\n */\nfunction createItemFromMark(mark, row, index, data, frame) {\n    const { type, encodings, name, role } = mark;\n    return createItem(type, Object.assign({}, transferEncodings(row, index, data, encodings, frame), { name,\n        role, metadata: { index }, channels: frame.channels }));\n}\n/**\n * Computes the draw-rectangle for a group given its item-space and it's parent's draw space.\n *\n * It's important to note that these are a group's dimensions, because they will greedily\n * use parent space if their space has not been specified\n *\n * @param space The space measured for the group item\n * @param drawRect\n */\nfunction getNextDrawRect(space, viewSize) {\n    const { width: availableWidth, height: availableHeight } = viewSize;\n    const { origin: { x = 0, y = 0 }, shape: { width = availableWidth, height = availableHeight }, } = space;\n    const top = y;\n    const left = x;\n    const right = left + width;\n    const bottom = top + height;\n    return {\n        top,\n        left,\n        bottom,\n        right,\n    };\n}\nfunction transferEncodings(d, index, data, encodings, frame) {\n    const props = {};\n    Object.keys(encodings)\n        .filter(t => t !== 'items')\n        .forEach(key => {\n        const encoding = encodings[key];\n        if (encoding) {\n            const dataContext = {\n                d,\n                index,\n                data,\n                tables: frame.data,\n            };\n            const value = encoding(dataContext, frame.scales);\n            props[key] = value;\n        }\n    });\n    return props;\n}\n","import { MarkType } from '@markable/interfaces';\nimport { buildMark } from '@markable/scenegraph';\nimport { crossValue } from './crossValue';\nexport class Domain {\n    createContext(context) {\n        const range = context.range;\n        const maxRange = Math.max(...range);\n        const minRange = Math.min(...range);\n        return Object.assign({}, context, { domainMinRange: minRange, domainMaxRange: maxRange, domainCross: crossValue(context.axis, context.thickness) });\n    }\n    isScenegraphElementGenerated(context) {\n        return !!context.axis.domain;\n    }\n    createScenegraphElement(context) {\n        const { axis, rangeProperty, rangeEndProperty, crossProperty, domainCross, domainMinRange, domainMaxRange, } = context;\n        return buildMark(MarkType.Rule)\n            .role('axis-domain')\n            .items({\n            stroke: axis.domainColor,\n            strokeWidth: axis.domainWidth,\n            [rangeProperty]: domainMinRange,\n            [rangeEndProperty]: domainMaxRange + axis.domainWidth,\n            [crossProperty]: domainCross,\n        })\n            .build();\n    }\n}\n","import { AxisOrientation } from '@markable/interfaces';\nexport function crossValue(axis, thickness) {\n    const domainWidth = axis.domainWidth;\n    const { orient } = axis;\n    let result = domainWidth;\n    switch (orient) {\n        case AxisOrientation.Bottom: {\n            result = domainWidth / 2;\n            break;\n        }\n        case AxisOrientation.Left: {\n            result = thickness - domainWidth / 2;\n            break;\n        }\n        case AxisOrientation.Right: {\n            result = domainWidth / 2;\n            break;\n        }\n        case AxisOrientation.Top: {\n            result = thickness + domainWidth / 2;\n            break;\n        }\n    }\n    return result;\n}\n","/**\n * Gets logical tick values and their associated labels\n * @param context The axis context\n */\nexport function getTickValues(context) {\n    const { axis, scale } = context;\n    if (axis.values != null) {\n        return axis.values.map(av => (Object.assign({}, av, { position: scale(av.value) })));\n    }\n    // Try to get the ticks from the `tick` utility built into d3 scales\n    return scale.ticks\n        ? getTicksFromScaleTicks(context)\n        : scale.domain\n            ? getTicksFromScaleDomain(axis, scale)\n            : [];\n}\nfunction getDomainScaleValue(t, scale, axis) {\n    const tickRound = axis.tickRound;\n    const bandPosition = axis.bandPosition;\n    const result = scale.bandwidth\n        ? scale(t) + scale.bandwidth() * bandPosition\n        : t;\n    return tickRound ? Math.round(result) : result;\n}\nfunction getTicksFromScaleTicks(context) {\n    const { axis, scale } = context;\n    const tickWidth = axis.tickWidth;\n    if (!scale.ticks) {\n        throw new Error('cannot extract scale domain');\n    }\n    const ticks = axis.tickCount != null ? scale.ticks(axis.tickCount) : scale.ticks();\n    return ticks.map((t) => {\n        const position = scale(t);\n        return {\n            value: t,\n            position: axis.tickRound\n                ? Math.round(position)\n                : position - tickWidth / 2,\n            label: context.labelFormatter(t),\n        };\n    });\n}\nfunction getTicksFromScaleDomain(axis, scale) {\n    if (!scale.domain) {\n        throw new Error('cannot extract scale domain');\n    }\n    const domain = scale.domain();\n    return domain.map((t) => ({\n        value: t,\n        position: getDomainScaleValue(t, scale, axis),\n        label: `${t}`,\n    }));\n}\n","import { MarkType } from '@markable/interfaces';\nimport { buildMark } from '@markable/scenegraph';\nimport { getTickValues } from './getTickValues';\nimport { getLabelFormatter } from './getLabelFormatter';\nexport class TickLines {\n    createContext(context) {\n        const tickCrossStart = getTickCrossStart(context);\n        const tickCrossEnd = getTickCrossEnd(context);\n        const labelFormatter = getLabelFormatter(context);\n        context = Object.assign({}, context, { labelFormatter, tickCrossEnd, tickCrossStart });\n        const ticks = getTickValues(context);\n        context = Object.assign({}, context, { ticks });\n        return context;\n    }\n    isScenegraphElementGenerated(context) {\n        return !!context.axis.ticks;\n    }\n    createScenegraphElement(context) {\n        return buildMark(MarkType.Rule)\n            .role('axis-ticks')\n            .items(...context.ticks.map(tick => createTickItem(tick, context)))\n            .build();\n    }\n}\nfunction getTickCrossStart(context) {\n    const tickSize = context.axis.tickSize;\n    return context.topOrLeft ? context.thickness - tickSize : tickSize;\n}\nfunction getTickCrossEnd(context) {\n    return context.topOrLeft\n        ? context.thickness\n        : context.axis.tickWidth;\n}\nfunction createTickItem(tick, context) {\n    const { axis: { tickColor: stroke, tickWidth: strokeWidth }, } = context;\n    const crossStart = getCrossStart(context);\n    const crossEnd = getCrossEnd(context);\n    const rangeStart = getRangeStart(tick, context);\n    return {\n        [context.rangeProperty]: rangeStart,\n        [context.crossProperty]: crossStart,\n        [context.crossEndProperty]: crossEnd,\n        stroke,\n        strokeWidth,\n    };\n}\nfunction getRangeStart(tick, context) {\n    const strokeWidth = context.axis.tickWidth;\n    return tick.position + strokeWidth;\n}\nfunction getCrossStart(context) {\n    const tickSize = context.axis.tickSize;\n    const tickWidth = context.axis.tickWidth;\n    const result = context.topOrLeft ? context.thickness - tickSize : tickSize;\n    return result + tickWidth / 2;\n}\nfunction getCrossEnd(context) {\n    const tickWidth = context.axis.tickWidth;\n    return context.topOrLeft ? context.thickness : tickWidth;\n}\n","import { timeFormat } from 'd3-time-format';\nimport { format } from 'd3-format';\nfunction isTimeScale(scale) {\n    return scale.__scaletype__ === 'utc' || scale.__scaletype__ === 'time';\n}\nexport function getLabelFormatter(context) {\n    const scale = context.scale;\n    const { labelFormat } = context.axis;\n    if (!labelFormat) {\n        return (t) => `${t}`;\n    }\n    return isTimeScale(scale) ? timeFormat(labelFormat) : format(labelFormat);\n}\n","import { MarkType, VerticalTextAlignment, HorizontalAlignment, AxisOrientation, } from '@markable/interfaces';\nimport { buildMark } from '@markable/scenegraph';\nexport class TickLabels {\n    createContext(context) {\n        return context;\n    }\n    isScenegraphElementGenerated(context) {\n        return !!context.axis.labels;\n    }\n    createScenegraphElement(context) {\n        return buildMark(MarkType.Text)\n            .role('axis-tick-labels')\n            .items(...(context.ticks || []).map(tick => createTickLabel(tick, context)))\n            .build();\n    }\n}\nfunction createTickLabel(tick, context) {\n    const { axis, rangeProperty, crossProperty } = context;\n    const fontSize = axis.labelFontSize;\n    const tickSize = axis.tickSize;\n    const pad = axis.labelPadding;\n    const font = axis.labelFont;\n    const fill = axis.labelColor;\n    const fontWeight = axis.labelFontWeight;\n    const text = tick.label;\n    const align = getHorizontalAlignment(axis);\n    const baseline = getBaseline(axis);\n    const labelAngle = axis.labelAngle;\n    const crossPropertyValue = context.topOrLeft\n        ? context.thickness - tickSize - pad\n        : tickSize + pad + (axis.orient === AxisOrientation.Bottom ? 1 : 0);\n    const result = {\n        strokeWidth: 0,\n        stroke: 'none',\n        [rangeProperty]: tick.position + 1,\n        [crossProperty]: crossPropertyValue,\n        fontWeight,\n        text,\n        fill,\n        font,\n        fontSize,\n        baseline,\n        align,\n    };\n    if (labelAngle !== undefined) {\n        result.theta = labelAngle * Math.PI / 180;\n    }\n    return result;\n}\nfunction getBaseline(axis) {\n    if (axis.labelBaseline) {\n        return axis.labelBaseline;\n    }\n    switch (axis.orient) {\n        case AxisOrientation.Top:\n            return VerticalTextAlignment.Bottom;\n        case AxisOrientation.Bottom:\n            return VerticalTextAlignment.Top;\n        case AxisOrientation.Left:\n        case AxisOrientation.Right:\n            return VerticalTextAlignment.Middle;\n    }\n}\nfunction getHorizontalAlignment(axis) {\n    if (axis.labelAlign !== undefined) {\n        return axis.labelAlign;\n    }\n    switch (axis.orient) {\n        case AxisOrientation.Top:\n        case AxisOrientation.Bottom:\n            return HorizontalAlignment.Center;\n        case AxisOrientation.Left:\n            return HorizontalAlignment.Right;\n        case AxisOrientation.Right:\n            return HorizontalAlignment.Left;\n    }\n}\n","import { Domain } from './domain';\nimport { TickLines } from './tickLines';\nimport { TickLabels } from './tickLabels';\n/**\n * The axis component class instances\n */\nexport const components = [\n    new Domain(),\n    new TickLines(),\n    new TickLabels(),\n];\n","import { MarkType, AxisOrientation } from '@markable/interfaces';\nimport { buildMark } from '@markable/scenegraph';\nimport { components } from './components';\nimport { getContext } from './getContext';\nexport function buildAxis(axis, frame, axisSpace) {\n    const context = createPopulatedContext(axis, frame, axisSpace);\n    const groupSize = getGroupSize(context, frame.view);\n    const origin = getGroupOrigin(context, frame.view);\n    // Build the components of the axis\n    const items = [];\n    components.forEach(e => {\n        if (e.isScenegraphElementGenerated(context)) {\n            items.push(e.createScenegraphElement(context));\n        }\n    });\n    return buildMark(MarkType.Group)\n        .role('axis')\n        .items(Object.assign({ items, x: origin.x, y: origin.y }, groupSize))\n        .build();\n}\nfunction createPopulatedContext(axis, frame, axisSpace) {\n    const initialContext = getContext(axis, frame, axisSpace);\n    let result = initialContext;\n    components.forEach(component => (result = component.createContext(result)));\n    return result;\n}\nfunction getGroupOrigin(context, availableSpace) {\n    const { height = 0, width = 0 } = availableSpace;\n    switch (context.axis.orient) {\n        case AxisOrientation.Top:\n            return { x: 0, y: 0 };\n        case AxisOrientation.Bottom:\n            return {\n                x: 0,\n                y: height - context.thickness,\n            };\n        case AxisOrientation.Left:\n            return { x: 0, y: 0 };\n        case AxisOrientation.Right:\n            return { x: width - context.thickness, y: 0 };\n    }\n}\nfunction getGroupSize(context, availableSpace) {\n    const { height = 0, width = 0 } = availableSpace;\n    if (context.horizontal) {\n        return {\n            width,\n            height: context.thickness,\n        };\n    }\n    else {\n        return {\n            width: context.thickness,\n            height,\n        };\n    }\n}\n","import { AxisOrientation } from '@markable/interfaces';\nexport function getContext(axis, frame, axisSpace) {\n    // Create the new axis space\n    const thickness = getThickness(axis, axisSpace);\n    const axisFrame = frame.pushView(getScaleSize(axis, axisSpace, thickness, frame.view), getScaleTL(axis, axisSpace, frame.view), getScaleBR(axis, axisSpace, frame.view));\n    const scaleName = axis.scale;\n    const scale = axisFrame.scales[scaleName];\n    const range = (scale.range && scale.range()) || [0, 0];\n    const horizontal = axis.orient === AxisOrientation.Top ||\n        axis.orient === AxisOrientation.Bottom;\n    const topOrLeft = axis.orient === AxisOrientation.Top || axis.orient === AxisOrientation.Left;\n    return {\n        axis,\n        range,\n        scale,\n        thickness,\n        horizontal,\n        topOrLeft,\n        frame: axisFrame,\n        rangeProperty: horizontal ? 'x' : 'y',\n        rangeEndProperty: horizontal ? 'x2' : 'y2',\n        crossProperty: horizontal ? 'y' : 'x',\n        crossEndProperty: horizontal ? 'y2' : 'x2',\n    };\n}\nfunction getThickness(axis, space) {\n    switch (axis.orient) {\n        case AxisOrientation.Top:\n            return space.top;\n        case AxisOrientation.Right:\n            return space.right;\n        case AxisOrientation.Bottom:\n            return space.bottom;\n        case AxisOrientation.Left:\n            return space.left;\n        default:\n            return 0;\n    }\n}\nfunction getScaleTL(axis, space, availableSpace) {\n    const { width, height } = availableSpace;\n    const { left, top, bottom, right } = space;\n    switch (axis.orient) {\n        case AxisOrientation.Top:\n            return [0, left];\n        case AxisOrientation.Bottom:\n            return [height - bottom, left];\n        case AxisOrientation.Left:\n            return [top, 0];\n        case AxisOrientation.Right:\n            return [top, width - right];\n    }\n}\nfunction getScaleBR(axis, space, availableSpace) {\n    const { width, height } = availableSpace;\n    const { left, top, bottom, right } = space;\n    switch (axis.orient) {\n        case AxisOrientation.Top:\n            return [top, width - right];\n        case AxisOrientation.Bottom:\n            return [height, width - right];\n        case AxisOrientation.Left:\n            return [height - bottom, left];\n        case AxisOrientation.Right:\n            return [height - bottom, width];\n    }\n}\nfunction getScaleSize(axis, space, axisThickness, availableSpace) {\n    const { left, right, top, bottom } = space;\n    const { height: viewHeight = 0, width: viewWidth = 0 } = availableSpace;\n    const isHorizontal = axis.orient === AxisOrientation.Top ||\n        axis.orient === AxisOrientation.Bottom;\n    if (isHorizontal) {\n        return {\n            width: viewWidth - left - right,\n            height: axisThickness,\n        };\n    }\n    else {\n        return {\n            width: axisThickness,\n            height: viewHeight - top - bottom,\n        };\n    }\n}\n","import { AxisOrientation } from '@markable/interfaces';\nimport { buildAxis } from '../axes/buildAxis';\n/**\n * TODO: Store these defaults in a unified place\n */\nconst DEFAULT_AXIS_THICKNESS = 25;\n/**\n * Builds axes into a screen frame\n * @param node The current scene node\n * @param frame Thec curren scene frame\n */\nexport function buildAxes(node, frame) {\n    // If no axes are present, return an empty axis array and an unchanged view\n    if (node.axes.length === 0) {\n        return {\n            axes: [],\n            remainingSpace: { origin: { x: 0, y: 0 }, shape: frame.view },\n        };\n    }\n    const axisSpace = getAxisSpace(frame);\n    const axes = node.axes.map(axis => buildAxis(axis, frame, axisSpace));\n    // Build the frame here so that the marks have updated scales\n    const remainingSpace = getRemainingSpace(frame, axisSpace);\n    return {\n        axes,\n        remainingSpace,\n    };\n}\nfunction getRemainingSpace(frame, axisSpace) {\n    const { width: availableWidth = 0, height: availableHeight = 0 } = frame.view;\n    // Build the frame here so that the marks have updated scales\n    const remainingSpace = {\n        origin: {\n            x: axisSpace.left,\n            y: axisSpace.top,\n        },\n        shape: {\n            width: availableWidth - axisSpace.left - axisSpace.right,\n            height: availableHeight - axisSpace.top - axisSpace.bottom,\n        },\n    };\n    return remainingSpace;\n}\n/**\n * Gets the space consumed by the axes. Each key is an axis orientation, and the values are their respective thickness\n * @param frame\n */\nfunction getAxisSpace(frame) {\n    /**\n     * Hard space is space required by an axis. Soft space is space\n     * required for labels to not bleed over the edge. Soft space is only used\n     * if hard space is zero.\n     */\n    const space = {\n        top: {\n            hard: 0,\n            soft: 0,\n        },\n        left: {\n            hard: 0,\n            soft: 0,\n        },\n        bottom: {\n            hard: 0,\n            soft: 0,\n        },\n        right: {\n            hard: 0,\n            soft: 0,\n        },\n    };\n    frame.node.axes.forEach(a => {\n        const thickness = axisThickness(a);\n        const fontSize = a.labelFontSize;\n        const fontPad = fontSize / 2;\n        switch (a.orient) {\n            case AxisOrientation.Top:\n                space.top.hard = Math.max(space.top.hard, thickness);\n                break;\n            case AxisOrientation.Right:\n                space.right.hard = Math.max(space.right.hard, thickness);\n                space.top.soft = Math.max(space.top.soft, fontPad);\n                space.bottom.soft = Math.max(space.top.soft, fontPad);\n                break;\n            case AxisOrientation.Bottom:\n                space.bottom.hard = Math.max(space.bottom.hard, thickness);\n                break;\n            case AxisOrientation.Left:\n                space.left.hard = Math.max(space.left.hard, thickness);\n                space.top.soft = Math.max(space.top.soft, fontPad);\n                space.bottom.soft = Math.max(space.top.soft, fontPad);\n                break;\n        }\n    });\n    return {\n        top: Math.max(space.top.hard, space.top.soft),\n        left: Math.max(space.left.hard, space.left.soft),\n        bottom: Math.max(space.bottom.hard, space.bottom.soft),\n        right: Math.max(space.right.hard, space.right.soft),\n    };\n}\nfunction axisThickness(axis) {\n    return axis.thickness || DEFAULT_AXIS_THICKNESS;\n}\n","import { MarkType } from '@markable/interfaces';\nimport { buildMarkItem } from './marks/buildMarkItem';\nimport { buildAxes } from './axes';\nimport { buildMark } from '@markable/scenegraph';\n/**\n * Processes a scene specification node into the SceneGraph model\n * @param node The scene node to process\n * @param scaleFrame The scales available for the given scene node\n */\nexport function processNode(node, parentFrame) {\n    // Push the new node, which registers channels and recomputes scales\n    const frame = parentFrame.pushNode(node);\n    // Build out the axes, which may or may not update the frame\n    const { remainingSpace, axes } = buildAxes(node, frame);\n    // Construct the items for the marks\n    const markFrame = frame.pushView(remainingSpace.shape);\n    const markItems = node.marks.map(mark => buildMarkItem(mark, markFrame));\n    // Emit the result - if axes are present, wrap the marks in a group to put them in the correct space\n    if (axes.length > 0) {\n        return [...axes, createMarkGroup(markItems, remainingSpace)];\n    }\n    else {\n        return markItems;\n    }\n}\nfunction createMarkGroup(items, space) {\n    return buildMark(MarkType.Group)\n        .role('marks')\n        .items(Object.assign({}, space.origin, space.shape, { items }))\n        .build();\n}\n","import { createMark } from '@markable/scenegraph';\nimport { createBoundItem } from './createBoundItem';\nexport function buildMarkItem(mark, frame) {\n    const markFrame = frame.pushMark(mark);\n    /**\n     * If the data is a faceted group, then bind one group per facet.\n     */\n    const boundData = getBoundData(mark, markFrame);\n    const items = Array.isArray(boundData)\n        ? createItemPerDataRow(markFrame, boundData)\n        : createItemPerFacet(markFrame, boundData);\n    return createMark(mark.type, items);\n}\n/**\n * Creates one scenegraph item per facet partition\n *\n * @param frame The current scene frame\n * @param partitions the item faceting configuration\n */\nfunction createItemPerFacet(frame, { name, partitions }) {\n    return partitions.map((partition, index) => {\n        return createBoundItem(frame.pushData({ [name]: partition }), partition, index, partitions);\n    });\n}\n/**\n * Creates one sceengraph item per row in a data-table\n * @param frame The current scene frame\n * @param data The data table\n */\nfunction createItemPerDataRow(frame, data) {\n    return data.map((row, index) => createBoundItem(frame, row, index, data));\n}\n/**\n * Gets the bound data for a mark.\n * * If the mark is a singleton, this will return an array with a single sentinel object.\n * * If the mark is not faceted, this will return the source table specified by the mark\n * * If the mark is faceted, this will return a partition set, with data for each facet partition.\n *\n * @param mark The mark to bind data to\n * @param dataFrame The current data-frame, which provides data-sets at this scope\n */\nfunction getBoundData(mark, frame) {\n    const { singleton, table, facet } = mark;\n    // If the table is unset, render as a singleton of the existing bound data-item\n    if (singleton) {\n        return [frame.boundDataItem];\n    }\n    if (!table) {\n        console.log('error with mark', mark);\n        throw new Error('mark must either have singleton set to true or have no data defined');\n    }\n    const sourceTable = frame.data[table];\n    if (!facet) {\n        return sourceTable || [];\n    }\n    const { name, partitionOn } = facet;\n    const getFacetKey = typeof partitionOn === 'function' ? partitionOn : (d) => d[partitionOn];\n    const partitionMap = new Map();\n    const partitions = [];\n    sourceTable.forEach((row) => {\n        const key = getFacetKey(row);\n        if (!partitionMap.has(key)) {\n            const newPartition = [];\n            partitions.push(newPartition);\n            partitionMap.set(key, newPartition);\n        }\n        const partition = partitionMap.get(key);\n        partition.push(row);\n    });\n    return { name, partitions };\n}\n","import { parseScene } from '@markable/scenegraph';\nimport { VirtualSvgConverter } from '@markable/vsvg';\nimport { createScenegraph } from '@markable/scene';\nexport class Orchestrator {\n    constructor(renderer, prerenderer = new VirtualSvgConverter()) {\n        this.renderer = renderer;\n        this.prerenderer = prerenderer;\n    }\n    /**\n     * Renders a raw scenegraph object into view. This is mostly useful for internal debugging\n     * @param rawScene The raw scenegraph object to render\n     * @param options Charting options\n     */\n    renderScenegraph(rawScene, options = {}) {\n        try {\n            const scenegraph = parseScene(rawScene);\n            const intermediate = this.prerenderer.render(scenegraph, options);\n            return this.renderer.render(intermediate, {});\n        }\n        catch (err) {\n            console.log('error rendering scenegraph', err);\n            throw err;\n        }\n    }\n    /**\n     * Binds data to a scene and renders it into view.\n     * @param scene The scene to rendre\n     * @param options The chart options\n     * @param tables The charting data\n     */\n    renderScene(scene, options = {}, tables) {\n        try {\n            const sg = createScenegraph(scene, tables, options);\n            const vdom = this.prerenderer.render(sg.root, options);\n            return this.renderer.render(vdom, sg.channelHandlers);\n        }\n        catch (err) {\n            console.log('error rendering scene', err);\n            throw err;\n        }\n    }\n}\n","import { SGNodeType } from '@markable/interfaces';\nimport { Mark, GroupItem } from './elements';\nimport { createItemType } from './registry';\nconst KNOWN_KEYS = [\n    'marktype',\n    'name',\n    'role',\n    'interactive',\n    'clip',\n    'items',\n    'zindex',\n    // layout\n    'x',\n    'y',\n    'width',\n    'height',\n    'align',\n    'baseline',\n    // fill\n    'fill',\n    'fillOpacity',\n    'opacity',\n    // stroke\n    'stroke',\n    'strokeOpacity',\n    'strokeWidth',\n    'strokeCap',\n    // stroke dash\n    'strokeDash',\n    'strokeDashOffset',\n    // arc\n    'startAngle',\n    'endAngle',\n    'innerRadius',\n    'outerRadius',\n    // arc, rect\n    'cornerRadius',\n    'padAngle',\n    // area, line\n    'interpolate',\n    'tension',\n    'orient',\n    'defined',\n    // image\n    'url',\n    // path\n    'path',\n    // rule\n    'x2',\n    'y2',\n    // symbol\n    'size',\n    'shape',\n    // text\n    'text',\n    'angle',\n    'theta',\n    'radius',\n    'dx',\n    'dy',\n    // font\n    'font',\n    'fontSize',\n    'fontWeight',\n    'fontStyle',\n    'fontVariant',\n];\nexport function sceneToJSON(scene, indent) {\n    return JSON.stringify(scene, KNOWN_KEYS, indent);\n}\nexport function parseScene(json) {\n    const scene = typeof json === 'string' ? JSON.parse(json) : json;\n    return initializeMark(scene);\n}\n/**\n * Unpack a raw scenegraph Mark node into the scenegraph object model\n * @param rawMark The raw mark object\n */\nfunction initializeMark(rawMark) {\n    const { marktype, role } = rawMark;\n    // Construct the output mark\n    const result = new Mark();\n    result.marktype = marktype;\n    result.role = role;\n    result.items = (rawMark.items || []).map((rawItem) => {\n        const parentType = marktype ? SGNodeType.Mark : SGNodeType.Item;\n        // Initialize the data for this child node\n        const item = parentType === SGNodeType.Mark\n            ? initializeItem(marktype, rawItem)\n            : initializeMark(rawItem);\n        // Set parentage information\n        item.parent = result;\n        item.parentType = parentType;\n        return item;\n    });\n    if (rawMark.hasOwnProperty('clip')) {\n        result.clip = rawMark.clip;\n    }\n    if (rawMark.hasOwnProperty('interactive')) {\n        result.interactive = rawMark.interactive;\n    }\n    return result;\n}\n/**\n * Unpack a raw scenegraph Item node into the scenegraph object model\n * @param marktype The mark type of the item\n * @param rawItem The raw item object\n */\nfunction initializeItem(marktype, rawItem) {\n    const result = createItemType(marktype, rawItem);\n    // If this is a group item, populate the nested marks\n    if (result.itemtype === GroupItem.ITEM_TYPE) {\n        const group = result;\n        const items = (rawItem.items || []).map((item) => initializeMark(item));\n        group.items = items;\n    }\n    return result;\n}\n","import { ChartOptionsManager } from './ChartOptionsManager';\nimport { SceneFrame } from './SceneFrame';\nimport { processNode } from './processNode';\n/**\n * Builds a new scenegraph instance by binding data to a scene specification.\n *\n * @param data The data to bind with\n */\nexport function createScenegraph(root, data, options) {\n    const optionsManager = new ChartOptionsManager(options);\n    const width = optionsManager.chartSpace.shape.width;\n    const height = optionsManager.chartSpace.shape.height;\n    const emptyNode = undefined;\n    const rootFrame = new SceneFrame(emptyNode, undefined, data, {\n        width,\n        height,\n    });\n    return {\n        root: processNode(root, rootFrame)[0],\n        channelHandlers: rootFrame.channelHandlers,\n    };\n}\n","export class SceneNodeBuilder {\n    constructor() {\n        this.markBuilders = [];\n        this.axisBuilders = [];\n        /**\n         * The scales defined for children of this node\n         */\n        this.scales = [];\n    }\n    /**\n     * Adds a scale-creator to the scene configuration\n     * @param name The name of the scale-creator to add\n     * @param table The name of the bound datatable to use\n     * @param creator The scale-creator\n     */\n    scale(...creators) {\n        creators.forEach(c => this.scales.push(typeof c.build === 'function' ? c.build() : c));\n        return this;\n    }\n    mark(...builders) {\n        this.markBuilders.push(...builders);\n        return this;\n    }\n    axes(...builders) {\n        this.axisBuilders.push(...builders);\n        return this;\n    }\n    /**\n     * Builds the scene object\n     */\n    build() {\n        const { scales, markBuilders, axisBuilders } = this;\n        return {\n            marks: markBuilders.map(m => m.build()),\n            axes: axisBuilders.map(m => m.build()),\n            scales,\n        };\n    }\n}\n","// tslint:disable no-this-assignment unified-signatures\nimport { MarkEncodingKey, MarkType, } from '@markable/interfaces';\nimport { SceneNodeBuilder } from './SceneNodeBuilder';\nexport class MarkBuilder {\n    constructor(type) {\n        this.type = type;\n        this.channelsValue = {};\n        this.encodingsValue = {};\n    }\n    table(table) {\n        this.tableValue = table;\n        return this;\n    }\n    singleton(value) {\n        this.singletonValue = value;\n        return this;\n    }\n    role(role) {\n        this.roleValue = role;\n        return this;\n    }\n    name(name) {\n        this.nameValue = name;\n        return this;\n    }\n    zIndex(zIndex) {\n        if (zIndex !== undefined) {\n            this.encode(MarkEncodingKey.zIndex, () => zIndex);\n        }\n        else {\n            delete this.encodingsValue.zIndex;\n        }\n        return this;\n    }\n    handle(name, handler) {\n        if (typeof name === 'string') {\n            if (!handler) {\n                throw new Error(`handler function must be defined for handler ${name}`);\n            }\n            this.channelsValue[name] = handler;\n        }\n        else {\n            const channels = name;\n            Object.entries(channels).forEach(([nameVal, handlerVal]) => (this.channelsValue[nameVal] = handlerVal));\n        }\n        return this;\n    }\n    // #endregion\n    // Polymorphic function definition\n    encode(first, encoding) {\n        if (typeof first === 'string') {\n            // Handle encode(key, encoding) invocations\n            const key = first;\n            if (!encoding) {\n                throw new Error(`encoding must be defined for key ${key}`);\n            }\n            this.encodingsValue[key] = encoding;\n        }\n        else {\n            // Handle encode(map) invocations\n            const encodings = first;\n            Object.entries(encodings).forEach(([name, entryEncoding]) => (this.encodingsValue[name] = entryEncoding));\n            return this;\n        }\n        return this;\n    }\n    facet(facet) {\n        if (facet !== undefined && this.type !== MarkType.Group) {\n            throw new Error('faceting can only be applied to group type marks');\n        }\n        this.facetValue = facet;\n        return this;\n    }\n    /**\n     * Pushes a new scene node onto the graph\n     */\n    child(callback) {\n        this.childNode = new SceneNodeBuilder();\n        callback(this.childNode);\n        return this;\n    }\n    build() {\n        const { type, tableValue: table, channelsValue: channels, encodingsValue: encodings, roleValue: role, nameValue: name, facetValue: facet, singletonValue: singleton, childNode, } = this;\n        if (!type) {\n            throw new Error('mark type must be set');\n        }\n        return {\n            table,\n            type,\n            channels,\n            encodings,\n            role,\n            name,\n            facet,\n            singleton,\n            child: childNode && childNode.build(),\n        };\n    }\n}\n","const DEFAULT_COLOR = '#777';\nconst DEFAULT_TEXT_COLOR = '#000';\nconst DEFAULT_STROKE = 1;\nconst DEFAULT_TICK_SIZE = 5;\nconst DEFAULT_FONT_SIZE = 10;\nconst DEFAULT_FONT = 'sans-serif';\nconst DEFAULT_LABEL_PADDING = 1;\nconst DEFAULT_BAND_POSITION = 0.5;\nconst DEFAULT_THICKNESS = 25;\nexport class AxisBuilder {\n    // #endregion\n    constructor(scaleName, orientValue) {\n        this.scaleName = scaleName;\n        this.orientValue = orientValue;\n        this.thicknessValue = DEFAULT_THICKNESS;\n        // #region Domain Configuration Fields\n        this.domainValue = true;\n        this.domainColorValue = DEFAULT_COLOR;\n        this.domainWidthValue = DEFAULT_STROKE;\n        // #endregion\n        // #region Tick Configuration Fields\n        this.ticksValue = true;\n        this.tickColorValue = DEFAULT_COLOR;\n        this.tickOffsetValue = 0;\n        this.tickRoundValue = false;\n        this.tickSizeValue = DEFAULT_TICK_SIZE;\n        this.tickWidthValue = DEFAULT_STROKE;\n        // #endregion\n        // #region Label Configuration Fields\n        this.labelsValue = true;\n        this.labelFontValue = DEFAULT_FONT;\n        this.labelFontSizeValue = DEFAULT_FONT_SIZE;\n        this.labelColorValue = DEFAULT_TEXT_COLOR;\n        this.labelPaddingValue = DEFAULT_LABEL_PADDING;\n        this.bandPositionValue = DEFAULT_BAND_POSITION;\n        if (!this.scaleName) {\n            throw new Error('scale name must be defined');\n        }\n        if (!this.orientValue) {\n            throw new Error('axis orientation must be defined');\n        }\n    }\n    // #region Domain Configuration\n    domain(value) {\n        this.domainValue = value;\n        return this;\n    }\n    domainWidth(value) {\n        this.domainWidthValue = value;\n        return this;\n    }\n    domainColor(value) {\n        this.domainColorValue = value;\n        return this;\n    }\n    // #endregion\n    // #region Tick Configuration\n    ticks(value) {\n        this.ticksValue = value;\n        return this;\n    }\n    tickColor(value) {\n        this.tickColorValue = value;\n        return this;\n    }\n    tickCount(value) {\n        this.tickCountValue = value;\n        return this;\n    }\n    tickOffset(value) {\n        this.tickOffsetValue = value;\n        return this;\n    }\n    tickRound(value) {\n        this.tickRoundValue = value;\n        return this;\n    }\n    tickSize(value) {\n        this.tickSizeValue = value;\n        return this;\n    }\n    tickWidth(value) {\n        this.tickWidthValue = value;\n        return this;\n    }\n    bandPosition(value) {\n        this.bandPositionValue = value;\n        return this;\n    }\n    values(values) {\n        this.tickValues = values;\n        return this;\n    }\n    // #endregion\n    // #region Labels Configuratino\n    labels(value) {\n        this.labelsValue = value;\n        return this;\n    }\n    labelFont(value) {\n        this.labelFontValue = value;\n        return this;\n    }\n    labelFontSize(value) {\n        this.labelFontSizeValue = value;\n        return this;\n    }\n    labelColor(value) {\n        this.labelColorValue = value;\n        return this;\n    }\n    labelPadding(value) {\n        this.labelPaddingValue = value;\n        return this;\n    }\n    labelFontWeight(value) {\n        this.labelFontWeightValue = value;\n        return this;\n    }\n    labelAngle(value) {\n        this.labelAngleValue = value;\n        return this;\n    }\n    labelFormat(value) {\n        this.labelFormatValue = value;\n        return this;\n    }\n    thickness(value) {\n        this.thicknessValue = value;\n        return this;\n    }\n    // #endregion\n    build() {\n        return {\n            scale: this.scaleName,\n            orient: this.orientValue,\n            domain: this.domainValue,\n            domainWidth: this.domainWidthValue,\n            domainColor: this.domainColorValue,\n            ticks: this.ticksValue,\n            tickCount: this.tickCountValue,\n            tickColor: this.tickColorValue,\n            tickOffset: this.tickOffsetValue,\n            tickRound: this.tickRoundValue,\n            tickSize: this.tickSizeValue,\n            tickWidth: this.tickWidthValue,\n            values: this.tickValues,\n            labels: this.labelsValue,\n            labelFont: this.labelFontValue,\n            labelFontSize: this.labelFontSizeValue,\n            labelColor: this.labelColorValue,\n            labelPadding: this.labelPaddingValue,\n            labelAlign: this.labelAlignValue,\n            labelFontWeight: this.labelFontWeightValue,\n            bandPosition: this.bandPositionValue,\n            labelAngle: this.labelAngleValue,\n            labelFormat: this.labelFormatValue,\n            thickness: this.thicknessValue,\n        };\n    }\n}\n","import { MarkType, DEFAULT_HEIGHT, DEFAULT_WIDTH, } from '@markable/interfaces';\nimport { MarkBuilder } from './MarkBuilder';\nimport { SceneNodeBuilder } from './SceneNodeBuilder';\nimport { AxisBuilder } from './AxisBuilder';\nexport * from './MarkBuilder';\nexport * from './SceneNodeBuilder';\n/**\n * A factory function for creating a new scene\n */\nexport function scene(cb, dimensions, origin = [0, 0]) {\n    return new SceneNodeBuilder().mark(group('root')\n        .role('frame')\n        .singleton(true)\n        .zIndex(0)\n        .encode({\n        x: () => origin[0],\n        y: () => origin[1],\n        width: () => (dimensions && dimensions.width) || DEFAULT_WIDTH,\n        height: () => (dimensions && dimensions.height) || DEFAULT_HEIGHT,\n    })\n        .child(cb));\n}\n/**\n * A factory function for creating a new mark\n * @param type The mark type to create\n */\nexport function mark(type) {\n    return new MarkBuilder(type);\n}\n//\n// Utility functions for creating typed marks\n//\nexport function arc(name) {\n    return markWithName(MarkType.Arc, name);\n}\nexport function area(name) {\n    return markWithName(MarkType.Area, name);\n}\nexport function group(name) {\n    return markWithName(MarkType.Group, name);\n}\nexport function image(name) {\n    return markWithName(MarkType.Image, name);\n}\nexport function line(name) {\n    return markWithName(MarkType.Line, name);\n}\nexport function path(name) {\n    return markWithName(MarkType.Path, name);\n}\nexport function rect(name) {\n    return markWithName(MarkType.Rect, name);\n}\nexport function rule(name) {\n    return markWithName(MarkType.Rule, name);\n}\nexport function shape(name) {\n    return markWithName(MarkType.Shape, name);\n}\nexport function symbol(name) {\n    return markWithName(MarkType.Symbol, name);\n}\nexport function text(name) {\n    return markWithName(MarkType.Text, name);\n}\nexport function trail(name) {\n    return markWithName(MarkType.Trail, name);\n}\nfunction markWithName(markType, name) {\n    const result = mark(markType);\n    return name ? result.name(name) : result;\n}\n/**\n * Creates a new Axis builder\n * @param scale The name of the scale to align the axis with\n * @param orientation The positioning of the axis in the view-space\n */\nexport function axis(scale, orientation) {\n    return new AxisBuilder(scale, orientation);\n}\n","import * as React from 'react';\nimport { SceneNodeBuilder } from '@markable/builder';\nexport const { Consumer: SceneNodeBuilderConsumer, Provider: SceneNodeBuilderProvider, } = React.createContext(new SceneNodeBuilder());\n","import * as React from 'react';\nimport { scene } from '@markable/builder';\nimport { SceneNodeBuilderProvider } from './Context';\nexport class ChartSpec extends React.PureComponent {\n    render() {\n        let sceneNodeBuilder;\n        this.sceneBuilder = scene(node => (sceneNodeBuilder = node), this.dimensions, this.origin);\n        return (React.createElement(SceneNodeBuilderProvider, { value: sceneNodeBuilder }, this.props.children));\n    }\n    componentDidMount() {\n        this.updateSpec();\n    }\n    componentDidUpdate() {\n        return this.updateSpec();\n    }\n    get origin() {\n        if (!this.props.padding) {\n            return [0, 0];\n        }\n        const pad = this.props.padding;\n        const isNumberPad = typeof pad === 'number';\n        return isNumberPad\n            ? [pad, pad]\n            : [pad.left || 0, pad.top || 0];\n    }\n    get dimensions() {\n        const { width, height } = this.props;\n        return { width, height };\n    }\n    updateSpec() {\n        if (this.sceneBuilder) {\n            const spec = this.sceneBuilder.build();\n            this.props.onSpecReady(spec);\n        }\n    }\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\n// tslint:disable no-var-requires\nimport * as React from 'react';\nimport { Orchestrator } from '@markable/orchestrator';\nimport { ChartSpec } from './ChartSpec';\nconst shallowequal = require('shallowequal');\nexport class Chart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.receiveSpec = (spec) => {\n            const rendered = this.pipeline.renderScene(spec, {\n                width: this.props.width,\n                height: this.props.height,\n                padding: this.props.padding,\n            }, this.props.data);\n            this.setState({ rendered });\n        };\n        this.pipeline = new Orchestrator(props.renderer);\n        this.state = { rendered: null };\n    }\n    shouldComponentUpdate(props, state) {\n        return !shallowequal(this.props, props) || !shallowequal(this.state, state);\n    }\n    componentDidMount() {\n        if (this.props.scene) {\n            this.receiveSpec(this.props.scene);\n        }\n    }\n    render() {\n        const _a = this.props, { renderer, data } = _a, props = __rest(_a, [\"renderer\", \"data\"]);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(ChartSpec, Object.assign({}, props, { onSpecReady: this.receiveSpec }), this.props.children),\n            this.state.rendered));\n    }\n}\n","import * as React from 'react';\nimport { axis } from '@markable/builder';\nimport { SceneNodeBuilderConsumer } from './Context';\nexport class Axis extends React.PureComponent {\n    render() {\n        return (React.createElement(SceneNodeBuilderConsumer, null, api => {\n            this.receiveApi(api);\n            return this.props.children;\n        }));\n    }\n    receiveApi(api) {\n        const { scale, orient } = this.props;\n        const newAxis = axis(scale, orient);\n        // For any other properties that are set to defined values, pipe them into the axis builder\n        Object.keys(this.props).forEach(propName => {\n            const propValue = this.props[propName];\n            if (propName !== 'scale' &&\n                propName !== 'orient' &&\n                propValue !== undefined) {\n                ;\n                newAxis[propName](propValue);\n            }\n        });\n        api.axes(newAxis);\n    }\n}\n","import * as React from 'react';\nimport { SceneNodeBuilderConsumer } from '../Context';\nexport class Scale extends React.PureComponent {\n    render() {\n        return (React.createElement(SceneNodeBuilderConsumer, null, api => {\n            this.apiInstance = api;\n            this.addScale();\n            return null;\n        }));\n    }\n    get api() {\n        if (!this.apiInstance) {\n            throw new Error('api must be defined');\n        }\n        return this.apiInstance;\n    }\n    addScale() {\n        this.api.scale((args) => this.props.create(args));\n    }\n}\n","export class DomainScale {\n    name(value) {\n        this.nameValue = value;\n        return this;\n    }\n    table(value) {\n        this.tableValue = value;\n        return this;\n    }\n    domain(arg) {\n        if (typeof arg === 'function') {\n            this.domainValue = arg;\n        }\n        else if (Array.isArray(arg)) {\n            this.domainValue = () => arg;\n        }\n        else if (arg !== undefined && typeof arg === 'string') {\n            this.bindDomainValue = arg;\n        }\n        else {\n            this.domainValue = undefined;\n            this.bindDomainValue = undefined;\n        }\n        return this;\n    }\n    build() {\n        if (!this.nameValue) {\n            throw new Error('scale name must be defined');\n        }\n        return (args) => this.createScale(args);\n    }\n    processDomainValues(values) {\n        return values;\n    }\n    getDomain(args) {\n        return this.domainValue\n            ? this.domainValue(args)\n            : this.getDomainFromTableBinding(args);\n    }\n    getDomainFromTableBinding(args) {\n        if (!this.tableValue) {\n            throw new Error('table must be defined');\n        }\n        if (!this.bindDomainValue) {\n            throw new Error('domain must be defined');\n        }\n        const bind = this.bindDomainValue;\n        const data = args.data[this.tableValue] || [];\n        const domainValues = data.map((d) => d[bind]);\n        const result = this.processDomainValues(domainValues);\n        return result;\n    }\n    get bindDomainArray() {\n        const bindDomain = this.bindDomainValue;\n        if (!bindDomain) {\n            throw new Error('Either bindDomain or domain must be set');\n        }\n        return typeof bindDomain === 'string'\n            ? [bindDomain]\n            : bindDomain;\n    }\n}\n","import { DomainScale } from './DomainScale';\nconst reverse = require('lodash/reverse');\nexport class DomainRangeScale extends DomainScale {\n    range(arg) {\n        if (typeof arg === 'function') {\n            this.rangeValue = arg;\n        }\n        else if (Array.isArray(arg)) {\n            this.rangeValue = () => arg;\n        }\n        else if (typeof arg !== undefined) {\n            this.bindRangeValue = arg;\n        }\n        else {\n            this.rangeValue = undefined;\n            this.bindRangeValue = undefined;\n        }\n        return this;\n    }\n    reverse(reversed) {\n        this.reverseValue = reversed === undefined ? true : reversed;\n        return this;\n    }\n    getRange(args) {\n        const range = this.determineRange(args);\n        const result = this.reverseValue ? this.reverseRange(range) : range;\n        return result;\n    }\n    reverseRange(range) {\n        const result = [...range];\n        return reverse(result);\n    }\n    determineRange(args) {\n        if (this.rangeValue) {\n            return this.rangeValue(args);\n        }\n        else {\n            const bindRange = this.bindRangeValue;\n            if (!bindRange) {\n                throw new Error('Either bindRange or range must be set');\n            }\n            return this.handleRangeBind(args, bindRange);\n        }\n    }\n}\n","import { Dimension } from '@markable/interfaces';\nexport function getBoundRange(args, rangeBind) {\n    const { viewBounds: { x, y }, } = args;\n    // If an origin is defined, this will use the origin in the scale calculatinos\n    return rangeBind === Dimension.Height ? y : x;\n}\n","import { DomainRangeScale } from '../DomainRangeScale';\nimport { extent } from 'd3-array';\nimport { getBoundRange } from '../getBoundRange';\nexport class QuantitativeScale extends DomainRangeScale {\n    constructor() {\n        super(...arguments);\n        this.defaultZero = false;\n    }\n    /**\n     * A boolean indicating if output values should be clamped to the range (default false).\n     * If clamping is disabled and the scale is passed a value outside the domain, the scale\n     *  may return a value outside the range through extrapolation. If clamping is enabled,\n     * the output value of the scale is always within the scale’s range.\n     */\n    clamp(value) {\n        this.clampValue = value;\n        return this;\n    }\n    /**\n     * Extends the domain so that it starts and ends on nice round values.\n     */\n    nice(value = true) {\n        this.niceValue = value;\n        return this;\n    }\n    /**\n     * Adjusts the range of the scale to account for a pixel-padding on each end.\n     * @param paddingValue The number of pixels to pad each end of the scale's range with.\n     */\n    padding(paddingValue) {\n        this.paddingValue = paddingValue;\n        return this;\n    }\n    /**\n     * Boolean flag indicating if the scale domain should include zero.\n     * The default value is true for linear, sqrt and pow, and false otherwise.\n     */\n    zero(value) {\n        this.zeroValue = value;\n        return this;\n    }\n    getRange(args) {\n        const range = super.getRange(args);\n        if (this.paddingValue !== undefined) {\n            const [start, end] = range;\n            const pad = this.paddingValue;\n            const newStart = start > end ? start - pad : start + pad;\n            const newEnd = end > start ? end - pad : end + pad;\n            return [newStart, newEnd];\n        }\n        else {\n            return range;\n        }\n    }\n    processDomainValues(values) {\n        const result = extent(values);\n        if (this.getZero() && !this.domainContainsZero(result)) {\n            const [min, max] = result;\n            const zero = 0;\n            return 0 < min ? [zero, max] : [min, zero];\n        }\n        return result;\n    }\n    domainContainsZero(domain) {\n        return 0 >= domain[0] && 0 <= domain[1];\n    }\n    getZero() {\n        return this.zeroValue || this.defaultZero;\n    }\n    handleRangeBind(args, rangeBind) {\n        return getBoundRange(args, rangeBind);\n    }\n    addCommonProperties(scale) {\n        if (this.niceValue === true) {\n            scale.nice();\n        }\n        else if (this.niceValue !== undefined) {\n            scale.nice(this.niceValue);\n        }\n        if (this.clampValue !== undefined) {\n            scale.clamp(this.clampValue);\n        }\n    }\n}\n","const category10 = [\n    '#1f77b4',\n    '#ff7f0e',\n    '#2ca02c',\n    '#d62728',\n    '#9467bd',\n    '#8c564b',\n    '#e377c2',\n    '#7f7f7f',\n    '#bcbd22',\n    '#17becf',\n];\nconst category20 = [\n    '#1f77b4',\n    '#aec7e8',\n    '#ff7f0e',\n    '#ffbb78',\n    '#2ca02c',\n    '#98df8a',\n    '#d62728',\n    '#ff9896',\n    '#9467bd',\n    '#c5b0d5',\n    '#8c564b',\n    '#c49c94',\n    '#e377c2',\n    '#f7b6d2',\n    '#7f7f7f',\n    '#c7c7c7',\n    '#bcbd22',\n    '#dbdb8d',\n    '#17becf',\n    '#9edae5',\n];\nconst category20b = [\n    '#393b79',\n    '#5254a3',\n    '#6b6ecf',\n    '#9c9ede',\n    '#637939',\n    '#8ca252',\n    '#b5cf6b',\n    '#cedb9c',\n    '#8c6d31',\n    '#bd9e39',\n    '#e7ba52',\n    '#e7cb94',\n    '#843c39',\n    '#ad494a',\n    '#d6616b',\n    '#e7969c',\n    '#7b4173',\n    '#a55194',\n    '#ce6dbd',\n    '#de9ed6',\n];\nconst category20c = [\n    '#3182bd',\n    '#6baed6',\n    '#9ecae1',\n    '#c6dbef',\n    '#e6550d',\n    '#fd8d3c',\n    '#fdae6b',\n    '#fdd0a2',\n    '#31a354',\n    '#74c476',\n    '#a1d99b',\n    '#c7e9c0',\n    '#756bb1',\n    '#9e9ac8',\n    '#bcbddc',\n    '#dadaeb',\n    '#636363',\n    '#969696',\n    '#bdbdbd',\n    '#d9d9d9',\n];\nexport var CategoricalColorScheme;\n(function (CategoricalColorScheme) {\n    CategoricalColorScheme[\"category10\"] = \"category10\";\n    CategoricalColorScheme[\"category20\"] = \"category20\";\n    CategoricalColorScheme[\"category20b\"] = \"category20b\";\n    CategoricalColorScheme[\"category20c\"] = \"category20c\";\n})(CategoricalColorScheme || (CategoricalColorScheme = {}));\nexport const colorSchemeMap = new Map();\ncolorSchemeMap.set(CategoricalColorScheme.category10, category10);\ncolorSchemeMap.set(CategoricalColorScheme.category20, category20);\ncolorSchemeMap.set(CategoricalColorScheme.category20b, category20b);\ncolorSchemeMap.set(CategoricalColorScheme.category20c, category20c);\n","import { scaleLinear } from 'd3-scale';\nimport { QuantitativeScale } from './QuantitativeScale';\nexport class LinearScale extends QuantitativeScale {\n    constructor() {\n        super(...arguments);\n        this.defaultZero = true;\n    }\n    createScale(args) {\n        const domain = this.getDomain(args);\n        const range = this.getRange(args);\n        const scale = scaleLinear()\n            .domain(domain)\n            .range(range);\n        this.addCommonProperties(scale);\n        return {\n            [this.nameValue]: scale,\n        };\n    }\n}\n","import { scaleBand } from 'd3-scale';\nimport { DomainRangeScale } from '../DomainRangeScale';\nimport { getBoundRange } from '../getBoundRange';\nexport class BandScale extends DomainRangeScale {\n    /**\n     * The name of the band-width static scale\n     */\n    bandwidthName(value) {\n        this.bandwidthValue = value;\n        return this;\n    }\n    /**\n     * The outer and inner padding value\n     */\n    padding(value) {\n        this.paddingValue = value;\n        return this;\n    }\n    /**\n     * The inner padding value\n     */\n    paddingInner(value) {\n        this.paddingInnerValue = value;\n        return this;\n    }\n    /**\n     * The outer padding value\n     */\n    paddingOuter(value) {\n        this.paddingOuterValue = value;\n        return this;\n    }\n    /**\n     * Bin alignment 0-beginning, 1=end\n     */\n    align(value) {\n        this.alignValue = value;\n        return this;\n    }\n    createScale(args) {\n        const domain = this.getDomain(args);\n        const range = this.getRange(args);\n        const bandscale = scaleBand()\n            .domain(domain.map(d => '' + d))\n            .range(range);\n        if (this.alignValue) {\n            bandscale.align(this.alignValue);\n        }\n        if (this.paddingValue) {\n            bandscale.padding(this.paddingValue);\n        }\n        if (this.paddingOuterValue) {\n            bandscale.paddingOuter(this.paddingOuterValue);\n        }\n        if (this.paddingInnerValue) {\n            bandscale.paddingInner(this.paddingInnerValue);\n        }\n        const result = { [this.nameValue]: bandscale };\n        if (this.bandwidthValue) {\n            result[this.bandwidthValue] = bandscale.bandwidth;\n        }\n        return result;\n    }\n    handleRangeBind(args, rangeBind) {\n        return getBoundRange(args, rangeBind);\n    }\n}\n","import { scaleOrdinal } from 'd3-scale';\nimport { DomainScale } from '../DomainScale';\nimport { colorSchemeMap } from '../colorSchemeMap';\nexport class OrdinalScale extends DomainScale {\n    /**\n     * The range of values to map to\n     */\n    range(value) {\n        this.rangeValue = value;\n        return this;\n    }\n    /**\n     * The color scheme to use as the target ordinal domain\n     */\n    colorScheme(value) {\n        this.colorSchemeValue = value;\n        return this;\n    }\n    createScale(args) {\n        const domain = this.getDomain(args);\n        const range = this.getRange();\n        const scale = scaleOrdinal(this.rangeValue)\n            .domain(domain)\n            .range(range);\n        return { [this.nameValue]: scale };\n    }\n    getRange() {\n        if (this.colorSchemeValue) {\n            return colorSchemeMap.get(this.colorSchemeValue);\n        }\n        else if (this.rangeValue) {\n            return this.rangeValue;\n        }\n        else {\n            throw new Error('Either colorScheme or domain must be set');\n        }\n    }\n}\n","// tslint:disable max-classes-per-file\nimport * as React from 'react';\nimport { SceneNodeBuilderConsumer } from '../Context';\nexport class DomainScale extends React.PureComponent {\n    render() {\n        return (React.createElement(SceneNodeBuilderConsumer, null, (api) => {\n            this.apiInstance = api;\n            this.addScale();\n            return null;\n        }));\n    }\n    get api() {\n        if (!this.apiInstance) {\n            throw new Error('api must be defined');\n        }\n        return this.apiInstance;\n    }\n    addScale() {\n        this.api.scale(this.createScale());\n    }\n}\n","import { DomainScale } from './DomainScale';\nexport class DomainRangeScale extends DomainScale {\n    get isReversed() {\n        return this.props.reverse || false;\n    }\n}\n","import { linear } from '@markable/scales';\nimport { QuantitativeScale, } from './QuantitativeScale';\nexport class LinearScale extends QuantitativeScale {\n    createScale() {\n        return linear(this.props.name)\n            .table(this.props.table)\n            .domain(this.props.domain)\n            .range(this.props.range)\n            .zero(this.props.zero)\n            .clamp(this.props.clamp)\n            .nice(this.props.nice)\n            .padding(this.props.padding)\n            .reverse(this.isReversed)\n            .build();\n    }\n}\n","import { LinearScale, LogScale, PowScale, SequantialScale, SqrtScale, TimeScale, UtcScale, } from './quantitative';\nimport { BandScale, OrdinalScale, PointScale } from './discrete';\nexport * from './quantitative';\nexport * from './discrete';\nexport { CategoricalColorScheme } from './colorSchemeMap';\n// Quantitative Scale Factories\nexport const linear = (name) => new LinearScale().name(name);\nexport const log = (name) => new LogScale().name(name);\nexport const pow = (name) => new PowScale().name(name);\nexport const sequential = (name) => new SequantialScale().name(name);\nexport const sqrt = (name) => new SqrtScale().name(name);\nexport const time = (name) => new TimeScale().name(name);\nexport const utc = (name) => new UtcScale().name(name);\n// Discrete Scale Factories\nexport const band = (name, bandwidth) => new BandScale().name(name).bandwidthName(bandwidth);\nexport const ordinal = (name) => new OrdinalScale().name(name);\nexport const point = (name, step) => new PointScale().name(name).stepName(step);\n","import { DomainRangeScale } from '../DomainRangeScale';\nexport class QuantitativeScale extends DomainRangeScale {\n}\n","import { band } from '@markable/scales';\nimport { DomainRangeScale } from '../DomainRangeScale';\nexport class BandScale extends DomainRangeScale {\n    createScale() {\n        return band(this.props.name, this.props.bandWidth)\n            .table(this.props.table)\n            .domain(this.props.domain)\n            .range(this.props.range)\n            .align(this.props.align)\n            .padding(this.props.padding)\n            .paddingOuter(this.props.paddingOuter)\n            .paddingInner(this.props.paddingInner)\n            .reverse(this.isReversed)\n            .build();\n    }\n}\n","import { ordinal } from '@markable/scales';\nimport { DomainScale } from '../DomainScale';\nexport class OrdinalScale extends DomainScale {\n    createScale() {\n        return ordinal(this.props.name)\n            .table(this.props.table)\n            .domain(this.props.domain)\n            .range(this.props.range)\n            .colorScheme(this.props.colorScheme)\n            .build();\n    }\n}\n","import * as React from 'react';\nimport { SceneNodeBuilderConsumer, SceneNodeBuilderProvider } from '../Context';\nimport { mark } from '@markable/builder';\nimport { captureCommonEncodings } from '../interfaces';\nexport class BaseMark extends React.PureComponent {\n    render() {\n        return (React.createElement(SceneNodeBuilderConsumer, null, api => {\n            this.apiInstance = api;\n            const node = this.addMark();\n            return (React.createElement(SceneNodeBuilderProvider, { value: node }, this.props.children));\n        }));\n    }\n    get channels() {\n        const eventHandlers = this.props.eventHandlers || {};\n        const channels = Object.assign({}, eventHandlers);\n        Object.keys(this.props).forEach(propKey => {\n            if (propKey.startsWith('on')) {\n                channels[propKey] = this.props[propKey];\n            }\n        });\n        return channels;\n    }\n    get encodings() {\n        const encodingProps = Object.assign({}, captureCommonEncodings(this.props), this.encodeCustomProperties());\n        return Object.entries(encodingProps).reduce((prev, [name, propValue]) => {\n            prev[name] = (typeof propValue === 'function'\n                ? propValue\n                : (() => propValue));\n            return prev;\n        }, {});\n    }\n    get api() {\n        if (!this.apiInstance) {\n            throw new Error('api must be defined');\n        }\n        return this.apiInstance;\n    }\n    addMark() {\n        return this.api.mark(this.createMark());\n    }\n    createMark() {\n        const { table, name, role } = this.props;\n        let result = mark(this.markType)\n            .handle(this.channels)\n            .encode(this.encodings);\n        if (table) {\n            result = result.table(table);\n        }\n        const singleton = this.props.singleton;\n        if (singleton) {\n            result = result.singleton(singleton);\n        }\n        if (name) {\n            result = result.name(name);\n        }\n        if (role) {\n            result = result.role(role);\n        }\n        return result;\n    }\n}\n","export function captureCommonEncodings(props) {\n    const result = {};\n    const transferProp = (name) => {\n        const propVal = props[name];\n        if (propVal !== undefined) {\n            result[name] = propVal;\n        }\n    };\n    [\n        'x',\n        'x2',\n        'xc',\n        'width',\n        'y',\n        'y2',\n        'yc',\n        'height',\n        'opacity',\n        'fill',\n        'fillOpacity',\n        'stroke',\n        'strokeOpacity',\n        'strokeWidth',\n        'strokeCap',\n        'strokeDash',\n        'strokeDashOffset',\n        'strokeJoin',\n        'strokeMiterLimit',\n        'cursor',\n        'href',\n        'tooltip',\n        'zIndex',\n    ].map(pv => transferProp(pv));\n    return result;\n}\n","import { MarkType } from '@markable/interfaces';\nimport { BaseMark } from './BaseMark';\nexport class Group extends BaseMark {\n    constructor() {\n        super(...arguments);\n        this.markType = MarkType.Group;\n    }\n    encodeCustomProperties() {\n        const { clip, cornerRadius } = this.props;\n        return {\n            clip,\n            cornerRadius,\n        };\n    }\n    addMark() {\n        let node;\n        this.api.mark(this.createMark().child(n => (node = n)));\n        return node;\n    }\n    createMark() {\n        const nodeBuilder = super.createMark();\n        const { facetName, facetKey } = this.props;\n        if (facetName || facetKey) {\n            if (!facetName || !facetKey) {\n                throw new Error('Both facetName and facetKey props must be defined to enable faceting');\n            }\n            nodeBuilder.facet({\n                name: facetName,\n                partitionOn: facetKey,\n            });\n        }\n        return nodeBuilder;\n    }\n}\n","import { MarkType } from '@markable/interfaces';\nimport { BaseMark } from './BaseMark';\nexport class Rect extends BaseMark {\n    constructor() {\n        super(...arguments);\n        this.markType = MarkType.Rect;\n    }\n    encodeCustomProperties() {\n        return {\n            cornerRadius: this.props.cornerRadius,\n        };\n    }\n}\n","import { MarkType, } from '@markable/interfaces';\nimport { BaseMark } from './BaseMark';\nexport class Text extends BaseMark {\n    constructor() {\n        super(...arguments);\n        this.markType = MarkType.Text;\n    }\n    encodeCustomProperties() {\n        const { align, angle, baseline, dir, dx, dy, ellipsis, font, fontSize, fontWeight, fontVariant, fontStyle, limit, radius, text, theta, } = this.props;\n        return {\n            align,\n            angle,\n            baseline,\n            dir,\n            dx,\n            dy,\n            ellipsis,\n            font,\n            fontSize,\n            fontWeight,\n            fontVariant,\n            fontStyle,\n            limit,\n            radius,\n            text,\n            theta,\n        };\n    }\n}\n","import * as React from 'react';\nimport { VSvgTransformType, } from '@markable/interfaces';\nfunction createElementFor(vdom, key, handlers) {\n    const { type, children, attrs = {}, style, transforms: vdomTransforms = [], channels = {}, metadata = { index: -1 }, } = vdom;\n    const reactAttrs = Object.assign({ key,\n        style, transform: getTransformAttribute(vdomTransforms) }, attrs);\n    // Map the handlers into the vdom\n    Object.keys(channels).forEach(eventName => {\n        const eventId = channels[eventName];\n        const reactEventName = eventName;\n        const handler = handlers[eventId];\n        reactAttrs[reactEventName] = (eventArg) => handler(eventArg, metadata);\n    });\n    return React.createElement(type, reactAttrs, (children || [])\n        .filter(c => !!c)\n        .map((c, index) => typeof c !== 'object' ? c : createElementFor(c, `${index}`, handlers)));\n}\nfunction getTransformAttribute(vdomTransforms) {\n    const transforms = [];\n    vdomTransforms.forEach(t => {\n        if (t.type === VSvgTransformType.rotate) {\n            transforms.push(`rotate(${t.value})`);\n        }\n        else if (t.type === VSvgTransformType.translate) {\n            transforms.push(`translate(${t.value[0]}, ${t.value[1]})`);\n        }\n    });\n    return transforms.length > 0 ? transforms.join(' ') : undefined;\n}\n/**\n * Renders a Virtual DOM out to React-DOM's Virtual DOM\n */\nexport class Renderer {\n    render(vdom, handlers) {\n        return createElementFor(vdom, 'root', handlers);\n    }\n}\n","export var CompareOrder;\n(function (CompareOrder) {\n    CompareOrder[\"ascending\"] = \"asc\";\n    CompareOrder[\"descending\"] = \"desc\";\n})(CompareOrder || (CompareOrder = {}));\nexport var Offset;\n(function (Offset) {\n    Offset[\"zero\"] = \"zero\";\n    Offset[\"center\"] = \"center\";\n    Offset[\"normalize\"] = \"normalize\";\n})(Offset || (Offset = {}));\nexport function createSorter(sorts) {\n    return (a, b) => {\n        let result = 0;\n        for (const sort of sorts) {\n            const { order = CompareOrder.descending, field } = sort;\n            const valueA = field(a);\n            const valueB = field(b);\n            if (order === CompareOrder.ascending) {\n                result = valueA - valueB;\n            }\n            if (result !== 0) {\n                break;\n            }\n        }\n        return result;\n    };\n}\n","// tslint:disable\nimport * as React from 'react'\nimport {\n  Axis,\n  Chart,\n  Rect,\n  LinearScale,\n  BandScale,\n  Dimension,\n  Text,\n} from '@markable/react'\nimport {\n  AxisOrientation,\n  VerticalTextAlignment,\n  HorizontalAlignment,\n} from '@markable/interfaces'\nimport { Renderer } from '@markable/react-svg-renderer'\n\nconst renderer = new Renderer()\n\nconst data = [\n  { category: 'A', amount: 28 },\n  { category: 'B', amount: 55 },\n  { category: 'C', amount: 43 },\n  { category: 'D', amount: 91 },\n  { category: 'E', amount: 81 },\n  { category: 'F', amount: 53 },\n  { category: 'G', amount: 19 },\n  { category: 'H', amount: 87 },\n]\n\nexport interface BarChartState {\n  hoverRowIndex: number | undefined\n}\n\n/**\n * Adapted from https://vega.github.io/vega/examples/bar-chart/\n */\nexport default class BarChart extends React.Component<{}, BarChartState> {\n  constructor(props: {}) {\n    super(props)\n    this.state = { hoverRowIndex: undefined }\n  }\n\n  public render() {\n    const { hoverRowIndex } = this.state\n    return (\n      <Chart width={400} height={200} renderer={renderer} data={{ data }}>\n        <LinearScale\n          name=\"y\"\n          table=\"data\"\n          domain=\"amount\"\n          range={Dimension.Height}\n          nice\n        />\n        <BandScale\n          table=\"data\"\n          name=\"x\"\n          bandWidth=\"band\"\n          domain=\"category\"\n          padding={0.05}\n          range={Dimension.Width}\n        />\n        <Axis orient={AxisOrientation.Bottom} scale=\"x\" />\n        <Axis orient={AxisOrientation.Left} scale=\"y\" />\n        <Rect\n          table=\"data\"\n          onMouseEnter={(evt: any, { index }) => {\n            if (hoverRowIndex !== index) {\n              this.setState({ hoverRowIndex: index })\n            }\n          }}\n          onMouseLeave={(evt: any, { index }) => {\n            if (hoverRowIndex === index) {\n              this.setState({ hoverRowIndex: undefined })\n            }\n          }}\n          x={({ d }, { x }) => x(d.category)}\n          y={({ d }, { y }) => y(d.amount)}\n          width={(d, { band }) => band()}\n          y2={(d, { y }) => y(0)}\n          fill={({ index }) =>\n            hoverRowIndex === index ? 'firebrick' : 'steelblue'\n          }\n        />\n        {hoverRowIndex === undefined ? null : (\n          <Text\n            singleton\n            text={d => d.tables.data[hoverRowIndex].amount}\n            fill=\"black\"\n            x={({ tables }, { x, band }) =>\n              x(tables.data[hoverRowIndex].category) + band() / 2\n            }\n            y={({ tables }, { y }) => y(tables.data[hoverRowIndex].amount) - 3}\n            baseline={VerticalTextAlignment.Bottom}\n            align={HorizontalAlignment.Center}\n          />\n        )}\n      </Chart>\n    )\n  }\n}\n","// tslint:disable\nimport * as React from 'react'\nimport {\n  HorizontalAlignment,\n  VerticalTextAlignment,\n} from '@markable/interfaces'\nimport {\n  Chart,\n  LinearScale,\n  BandScale,\n  Dimension,\n  OrdinalScale,\n  CategoricalColorScheme,\n  Group,\n  Rect,\n  Text,\n} from '@markable/react'\nimport { Renderer } from '@markable/react-svg-renderer'\nconst renderer = new Renderer()\n\nconst data = [\n  { category: 'A', position: 0, value: 0.1 },\n  { category: 'A', position: 1, value: 0.6 },\n  { category: 'A', position: 2, value: 0.9 },\n  { category: 'A', position: 3, value: 0.4 },\n  { category: 'B', position: 0, value: 0.7 },\n  { category: 'B', position: 1, value: 0.2 },\n  { category: 'B', position: 2, value: 1.1 },\n  { category: 'B', position: 3, value: 0.8 },\n  { category: 'C', position: 0, value: 0.6 },\n  { category: 'C', position: 1, value: 0.1 },\n  { category: 'C', position: 2, value: 0.2 },\n  { category: 'C', position: 3, value: 0.7 },\n]\n\n/**\n * Adapted from https://vega.github.io/vega/examples/grouped-bar-chart/q\n */\nexport default class GroupedBarChart extends React.Component<{}> {\n  public render() {\n    return (\n      <Chart\n        width={300}\n        height={240}\n        padding={5}\n        data={{ data }}\n        renderer={renderer}\n      >\n        <BandScale\n          name=\"y\"\n          table=\"data\"\n          bandWidth=\"categoryHeight\"\n          range={Dimension.Height}\n          domain=\"category\"\n          padding={0.2}\n        />\n        <LinearScale\n          name=\"x\"\n          table=\"data\"\n          range={Dimension.Width}\n          domain=\"value\"\n          nice\n          zero\n        />\n        <OrdinalScale\n          name=\"color\"\n          table=\"data\"\n          domain=\"position\"\n          colorScheme={CategoricalColorScheme.category20}\n        />\n        <Group\n          name=\"chartgroup\"\n          table=\"data\"\n          facetKey={row => row.category}\n          facetName=\"facet\"\n          y={({ d }, { y }) => y(d[0].category)}\n          height={(d, { categoryHeight }) => categoryHeight()}\n        >\n          <BandScale\n            name=\"pos\"\n            bandWidth=\"rowHeight\"\n            range={Dimension.Height}\n            table=\"facet\"\n            domain=\"position\"\n          />\n          <Rect\n            name=\"bars\"\n            table=\"facet\"\n            x={({ d }, { x }) => x(d.value)}\n            y={({ d }, { pos }) => pos(d.position)}\n            x2={(d, { x }) => x(0)}\n            fill={({ d }, { color }) => color(d.position)}\n            height={(d, { rowHeight }) => rowHeight()}\n          />\n          <Text\n            table=\"facet\"\n            x={({ d }, { x }) => x(d.value) - 3}\n            y={({ d }, { pos, rowHeight }) =>\n              pos(d.position) + rowHeight() * 0.5\n            }\n            fill={'white'}\n            align={HorizontalAlignment.Right}\n            baseline={VerticalTextAlignment.Middle}\n            text={({ d }) => d.value}\n          />\n        </Group>\n      </Chart>\n    )\n  }\n}\n","// tslint:disable no-var-requires no-submodule-imports\nimport { Offset, createSorter } from '../interfaces';\nfunction flatMap(items, lambda) {\n    const mappedItems = items.map(lambda);\n    return Array.prototype.concat.apply([], mappedItems);\n}\nexport class StackTransform {\n    constructor() {\n        this.offsetVal = Offset.zero;\n        this.outputFields = ['y0', 'y1'];\n        this.stackCenter = (group, max) => {\n            const [y0, y1] = this.outputFields;\n            const field = this.fieldVal;\n            const sum = group.sum || 0;\n            let last = (max - sum) / 2;\n            for (const d of group) {\n                const value = Math.abs(field(d));\n                d[y0] = last;\n                d[y1] = last += value;\n            }\n        };\n        this.stackNormalize = (group) => {\n            const [y0, y1] = this.outputFields;\n            const field = this.fieldVal;\n            const scale = 1 / group.sum;\n            let last = 0;\n            let v = 0;\n            for (const d of group) {\n                const value = Math.abs(field(d));\n                d[y0] = last;\n                d[y1] = last = scale * (v += value);\n            }\n        };\n        this.stackZero = (group) => {\n            const [y0, y1] = this.outputFields;\n            const field = this.fieldVal;\n            let lastPos = 0;\n            let lastNeg = 0;\n            for (const d of group) {\n                const v = field(d);\n                if (v < 0) {\n                    d[y0] = lastNeg;\n                    d[y1] = lastNeg += v;\n                }\n                else {\n                    d[y0] = lastPos;\n                    d[y1] = lastPos += v;\n                }\n            }\n        };\n    }\n    /**\n     * The data field that determines the stack heights.\n     * @param field\n     */\n    field(field) {\n        this.fieldVal = field;\n        return this;\n    }\n    /**\n     * An array of fields by which to partition the data into separate stacks.\n     * @param groupBy\n     */\n    groupBy(...groupBy) {\n        this.groupByVal = groupBy;\n        return this;\n    }\n    /**\n     * Criteria for sorting values within each stack.\n     * @param sort\n     */\n    sort(...sort) {\n        this.sortVal = sort;\n        return this;\n    }\n    /**\n     * The baseline offset. One of “zero” (default), “center”, or “normalize”. The “center” offset will center the stacks. The “normalize” offset will compute percentage values for each stack point, with output values in the range [0,1].\n     * @param offset\n     */\n    offset(offset) {\n        this.offsetVal = offset;\n        return this;\n    }\n    /**\n     * The output fields for the computed start and end stack values. The default is [\"y0\", \"y1\"].\n     * @param outputFields\n     */\n    output(start, end) {\n        this.outputFields = [start, end];\n        return this;\n    }\n    transform(data) {\n        // Clone the data to keep this functional\n        const innerData = [...data.map(d => (Object.assign({}, d)))];\n        const rawGroups = this.partitionGroups(innerData);\n        const groups = this.computeMaxesAndSums(rawGroups);\n        this.processDataStacks(groups);\n        return flatMap(groups, (t) => t);\n    }\n    get stacker() {\n        switch (this.offsetVal) {\n            case Offset.zero:\n                return this.stackZero;\n            case Offset.center:\n                return this.stackCenter;\n            case Offset.normalize:\n                return this.stackNormalize;\n            default:\n                throw new Error(`unknown offset: ${this.offsetVal}`);\n        }\n    }\n    partitionGroups(data) {\n        const groupBy = this.groupByVal;\n        const groups = [];\n        if (groupBy === undefined) {\n            // copy the given data table as the first group\n            groups.push(data.slice());\n        }\n        else {\n            // For each row in the table, assign it to its group\n            const map = new Map();\n            for (const d of data) {\n                const groupKey = groupBy.map(gb => gb(d)).join(',');\n                if (!map.has(groupKey)) {\n                    const newGroup = [];\n                    map.set(groupKey, newGroup);\n                    groups.push(newGroup);\n                }\n                const group = map.get(groupKey);\n                group.push(d);\n            }\n        }\n        return groups;\n    }\n    computeMaxesAndSums(groups) {\n        const field = this.fieldVal;\n        const sorter = this.sortVal && createSorter(this.sortVal);\n        let max = 0;\n        let sum = 0;\n        // compute sums of groups, sort groups as needed\n        for (const group of groups) {\n            let groupMax = 0;\n            let groupSum = 0;\n            for (const d of group) {\n                const value = Math.abs(field(d));\n                if (value > groupMax) {\n                    groupMax = value;\n                }\n                groupSum += value;\n            }\n            group.sum = groupSum;\n            group.max = groupMax;\n            if (groupSum > max) {\n                max = groupSum;\n            }\n            sum += groupSum;\n            if (sorter) {\n                group.sort(sorter);\n            }\n        }\n        groups.max = max;\n        groups.sum = sum;\n        return groups;\n    }\n    processDataStacks(groups) {\n        const stacker = this.stacker;\n        groups.forEach(g => stacker(g, groups.max));\n    }\n}\n","// tslint:disable\nimport * as React from 'react'\nimport {\n  Chart,\n  Rect,\n  LinearScale,\n  Axis,\n  BandScale,\n  Dimension,\n  OrdinalScale,\n  CategoricalColorScheme,\n} from '@markable/react'\nimport { Renderer } from '@markable/react-svg-renderer'\nimport { StackTransform } from '@markable/transform'\nimport { AxisOrientation } from '@markable/interfaces'\n\nconst renderer = new Renderer()\nconst data = [\n  { x: 0, y: 28, c: 0 },\n  { x: 0, y: 55, c: 1 },\n  { x: 1, y: 43, c: 0 },\n  { x: 1, y: 91, c: 1 },\n  { x: 2, y: 81, c: 0 },\n  { x: 2, y: 53, c: 1 },\n  { x: 3, y: 19, c: 0 },\n  { x: 3, y: 87, c: 1 },\n  { x: 4, y: 52, c: 0 },\n  { x: 4, y: 48, c: 1 },\n  { x: 5, y: 24, c: 0 },\n  { x: 5, y: 49, c: 1 },\n  { x: 6, y: 87, c: 0 },\n  { x: 6, y: 66, c: 1 },\n  { x: 7, y: 17, c: 0 },\n  { x: 7, y: 27, c: 1 },\n  { x: 8, y: 68, c: 0 },\n  { x: 8, y: 16, c: 1 },\n  { x: 9, y: 49, c: 0 },\n  { x: 9, y: 15, c: 1 },\n]\nconst stackedData = new StackTransform()\n  .groupBy((r: any) => r.x)\n  .field((r: any) => r.y)\n  .sort({ field: (r: any) => r.c })\n  .transform(data)\n\nexport interface StackedBarChartState {\n  hoverRowIndex?: number\n}\n\n/**\n * Adapted from https://vega.github.io/vega/examples/stacked-bar-chart/\n */\nexport default class StackedBarChart extends React.Component<\n  {},\n  StackedBarChartState\n> {\n  constructor(props: {}) {\n    super(props)\n    this.state = {}\n  }\n  public render() {\n    return (\n      <Chart\n        width={500}\n        height={200}\n        data={{ data: stackedData }}\n        renderer={renderer}\n      >\n        {/* Scale Definitions */}\n        <BandScale\n          name=\"x\"\n          table=\"data\"\n          bandWidth=\"width\"\n          range={Dimension.Width}\n          domain=\"x\"\n        />\n        <LinearScale\n          name=\"y\"\n          table=\"data\"\n          range={Dimension.Height}\n          domain=\"y1\"\n          nice\n          zero\n        />\n        <OrdinalScale\n          name=\"color\"\n          table=\"data\"\n          domain=\"c\"\n          colorScheme={CategoricalColorScheme.category10}\n        />\n\n        {/* Axes */}\n        <Axis orient={AxisOrientation.Bottom} scale=\"x\" thickness={20} />\n        <Axis orient={AxisOrientation.Left} scale=\"y\" thickness={30} />\n\n        {/* Marks */}\n        <Rect\n          onMouseEnter={(evt, { index }) => {\n            if (this.state.hoverRowIndex !== index) {\n              this.setState({ hoverRowIndex: index })\n            }\n          }}\n          onMouseLeave={(evt, { index }) => {\n            if (this.state.hoverRowIndex === index) {\n              this.setState({ hoverRowIndex: undefined })\n            }\n          }}\n          table=\"data\"\n          x={({ d }, { x }) => x(d.x)}\n          width={(d, { width }) => width() - 1}\n          y={({ d }, { y }) => y(d.y0)}\n          y2={({ d }, { y }) => y(d.y1)}\n          fill={({ d }, { color }) => color(d.c)}\n          fillOpacity={({ index }) =>\n            this.state.hoverRowIndex === index ? 0.5 : 1\n          }\n        />\n      </Chart>\n    )\n  }\n}\n","import BarChart from './bar-chart'\nimport GroupedBarChart from './grouped-bar-chart'\nimport StackedBarChart from './stacked-bar-chart'\n\nexport default {\n  'bar-chart': BarChart,\n  'grouped-bar-chart': GroupedBarChart,\n  'stacked-bar-chart': StackedBarChart,\n}\n","import * as React from 'react'\nimport { Orchestrator } from '@markable/orchestrator'\nimport { Renderer } from '@markable/react-svg-renderer'\n\nconst pipeline = new Orchestrator(new Renderer())\nexport interface SGChartProps {\n  data: any\n  width?: number\n  height?: number\n  origin?: [number, number]\n}\nexport const SGChart: React.SFC<SGChartProps> = ({\n  data,\n  width = 200,\n  height = 200,\n  origin = [0, 0] as [number, number],\n}) => pipeline.renderScenegraph(data, { width, height, origin })\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { nameColumnWidth } from './constants'\n\nconst Container = styled.div`\n  display: flex;\n`\nconst NameColumn = styled.div`\n  width: ${nameColumnWidth}px;\n`\nconst InputColumn = styled.input`\n  flex: 2;\n`\n\nexport interface SliderProps {\n  name: string\n  min?: number\n  max?: number\n  value?: number\n  step?: number\n  onChange?: (value: number | string) => void\n}\n\nexport const Slider: React.SFC<SliderProps> = ({\n  name,\n  min = 0,\n  max = 200,\n  value = 0,\n  step = 1,\n  onChange = (v: any) => null,\n}) => {\n  const handleChange = (evt: any) => onChange(evt.target.value)\n  return (\n    <Container>\n      <NameColumn>{name}</NameColumn>\n      <InputColumn\n        type=\"range\"\n        name={name}\n        value={value}\n        min={min}\n        max={max}\n        step={step}\n        onChange={handleChange}\n      />\n      <div>{value}</div>\n    </Container>\n  )\n}\n","export const nameColumnWidth = 120\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { nameColumnWidth } from './constants'\n\nconst Container = styled.div`\n  display: flex;\n`\nconst NameColumn = styled.div`\n  width: ${nameColumnWidth}px;\n`\nconst InputColumn = styled.div`\n  flex: 2;\n`\n\nexport interface DropdownProps {\n  name: string\n  value: string\n  options: string[]\n  onChange: (v: string) => void\n}\nexport const Dropdown: React.SFC<DropdownProps> = ({\n  name,\n  value,\n  options,\n  onChange = (v: any) => null,\n}) => {\n  const handleChange = (evt: any) => onChange(evt.target.value)\n  const optionDom = options.map(o => (\n    <option key={o} value={o}>\n      {o}\n    </option>\n  ))\n  return (\n    <Container>\n      <NameColumn>{name}</NameColumn>\n      <InputColumn>\n        <select name={name} onChange={handleChange} value={value}>\n          {optionDom}\n        </select>\n      </InputColumn>\n    </Container>\n  )\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { nameColumnWidth } from './constants'\n\nconst Container = styled.div`\n  display: flex;\n`\nconst NameColumn = styled.div`\n  width: ${nameColumnWidth}px;\n`\nconst InputColumn = styled.input`\n  flex: 2;\n`\n\nexport interface ToggleProps {\n  name: string\n  value?: boolean\n  onChange?: (value: boolean) => void\n}\n\nexport const Toggle: React.SFC<ToggleProps> = ({\n  name,\n  value,\n  onChange = (v: any) => null,\n}) => {\n  const handleChange = (evt: any) => onChange(evt.target.checked)\n  return (\n    <Container>\n      <NameColumn>{name}</NameColumn>\n      <InputColumn\n        type=\"checkbox\"\n        name={name}\n        checked={value}\n        onChange={handleChange}\n      />\n      <div>{value}</div>\n    </Container>\n  )\n}\n","// tslint:disable jsx-no-lambda jsx-no-lambda-props react-component-classes-should-implement-scu\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport { SGChart } from './chart'\nimport { Slider } from './slider'\nimport { Dropdown } from './dropdown'\nimport { Toggle } from './toggle'\n\nexport interface SingleMarkTesterState {\n  scenegraph: any\n}\n\nexport interface SliderSpec {\n  name: string\n  min?: number\n  max?: number\n  step?: number\n}\n\nexport interface DropdownSpec {\n  name: string\n  options: string[]\n}\n\nexport interface ToggleSpec {\n  name: string\n}\n\nexport interface SingleMarkTesterProps {\n  initialScenegraph: any\n  sliders?: SliderSpec[]\n  dropdowns?: DropdownSpec[]\n  toggles?: ToggleSpec[]\n  chartWidth?: number\n  chartHeight?: number\n  chartOrigin?: [number, number]\n  updateScenegraph?: (update?: any, scenegraph?: any) => any\n  getParam?: (name: string, scenegraph: any) => any\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 600px;\n`\nconst ChartContainer = styled.div`\n  border: 1px solid grey;\n  margin-right: 25px;\n`\nconst ControlsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport class SingleMarkTester extends React.Component<\n  SingleMarkTesterProps,\n  SingleMarkTesterState\n> {\n  constructor(props: SingleMarkTesterProps) {\n    super(props)\n    this.state = { scenegraph: props.initialScenegraph }\n  }\n\n  public render() {\n    const {\n      sliders = [],\n      dropdowns = [],\n      toggles = [],\n      chartWidth,\n      chartHeight,\n      chartOrigin,\n    } = this.props\n    const sliderElements = sliders.map(({ name, min, max, step }) => (\n      <Slider\n        key={name}\n        name={name}\n        min={min}\n        max={max}\n        step={step}\n        value={this.getParam(name)}\n        onChange={v =>\n          this.setParam({ [name]: typeof v === 'string' ? parseFloat(v) : v })\n        }\n      />\n    ))\n    const dropdownElements = dropdowns.map(({ name, options }) => (\n      <Dropdown\n        key={name}\n        name={name}\n        options={options}\n        value={this.getParam(name)}\n        onChange={v => this.setParam({ [name]: v }) as any}\n      />\n    ))\n    const toggleElements = toggles.map(({ name }) => (\n      <Toggle\n        key={name}\n        name={name}\n        value={this.getParam(name)}\n        onChange={v => this.setParam({ [name]: v })}\n      />\n    ))\n    return (\n      <Container>\n        <ChartContainer>\n          <SGChart\n            data={this.state.scenegraph}\n            width={chartWidth}\n            height={chartHeight}\n            origin={chartOrigin}\n          />\n        </ChartContainer>\n        <ControlsContainer>\n          {toggleElements}\n          {sliderElements}\n          {dropdownElements}\n        </ControlsContainer>\n      </Container>\n    )\n  }\n\n  private getParam(name: string) {\n    return this.props.getParam\n      ? this.props.getParam(name, this.state.scenegraph)\n      : this.state.scenegraph.items[0][name]\n  }\n\n  private setParam(update: any) {\n    const scenegraph = this.updateScenegraph(update, this.state.scenegraph)\n    this.setState({ ...this.state, scenegraph })\n  }\n\n  private updateScenegraph(update: any, scenegraph: any) {\n    if (this.props.updateScenegraph) {\n      return this.props.updateScenegraph(update, scenegraph)\n    } else {\n      return {\n        ...scenegraph,\n        items: [\n          {\n            ...scenegraph.items[0],\n            ...update,\n          },\n        ],\n      }\n    }\n  }\n}\n","// Go Cougs\nexport const CRIMSON = '#981e32'\nexport const GREY = '#8d959a'\n","import * as React from 'react'\nimport { SingleMarkTester } from './util/single-mark-tester'\nimport * as palette from './util/palette'\n\nconst BASE_ITEM = {\n  stroke: palette.CRIMSON,\n  fill: palette.GREY,\n}\n\nconst ArcTester: React.SFC = () => (\n  <SingleMarkTester\n    initialScenegraph={{\n      marktype: 'arc',\n      items: [\n        {\n          ...BASE_ITEM,\n          startAngle: -0.73,\n          endAngle: 0.73,\n          padAngle: 0,\n          innerRadius: 0,\n          outerRadius: 50,\n          strokeWidth: 4,\n          x: 100,\n          y: 100,\n        },\n      ],\n    }}\n    sliders={[\n      { name: 'x' },\n      { name: 'y' },\n      { name: 'startAngle', min: -6.28, max: 6.28, step: 0.1 },\n      { name: 'endAngle', min: -6.28, max: 6.28, step: 0.1 },\n      { name: 'padAngle', min: -6.28, max: 6.28, step: 0.1 },\n      { name: 'innerRadius', max: 100 },\n      { name: 'outerRadius', max: 100 },\n      { name: 'strokeWidth', max: 10 },\n    ]}\n  />\n)\n\nexport default ArcTester\n","// tslint:disable jsx-no-lambda\nimport * as React from 'react'\nimport { SingleMarkTester } from './util/single-mark-tester'\nimport * as palette from './util/palette'\n\nconst BASE_ITEM = {\n  stroke: palette.CRIMSON,\n  fill: palette.GREY,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  strokeWidth: 2,\n  tension: 0,\n}\n\nconst AreaTesterHorizontal: React.SFC = () => (\n  <SingleMarkTester\n    chartWidth={420}\n    chartOrigin={[10, 0]}\n    initialScenegraph={{\n      marktype: 'area',\n      items: [\n        {\n          x: 0,\n          y: 98.18,\n          y2: 200,\n          ...BASE_ITEM,\n        },\n        {\n          x: 80,\n          y: 0,\n          y2: 200,\n          ...BASE_ITEM,\n        },\n        {\n          x: 160,\n          y: 47.27,\n          y2: 200,\n          ...BASE_ITEM,\n        },\n        {\n          x: 240,\n          y: 76.36,\n          y2: 200,\n          ...BASE_ITEM,\n        },\n        {\n          x: 400,\n          y: 25.4545,\n          y2: 200,\n          ...BASE_ITEM,\n        },\n      ],\n    }}\n    sliders={[\n      { name: 'y2' },\n      { name: 'tension', min: 0, max: 1, step: 0.1 },\n      { name: 'strokeWidth', max: 10 },\n      { name: 'strokeOpacity', max: 1, min: 0, step: 0.1 },\n      { name: 'fillOpacity', max: 1, min: 0, step: 0.1 },\n    ]}\n    dropdowns={[\n      {\n        name: 'interpolate',\n        options: [\n          'basis',\n          'cardinal',\n          'catmull-rom',\n          'linear',\n          'monotone',\n          'natural',\n          'step',\n          'step-after',\n          'step-before',\n        ],\n      },\n    ]}\n    toggles={[{ name: 'defined' }]}\n    updateScenegraph={(update, scenegraph) => {\n      scenegraph.items.forEach((item: any) => {\n        Object.keys(update).forEach(key => (item[key] = update[key]))\n      })\n      return scenegraph\n    }}\n  />\n)\n\nexport default AreaTesterHorizontal\n","// tslint:disable jsx-no-lambda\nimport * as React from 'react'\nimport { SingleMarkTester } from './util/single-mark-tester'\nimport * as palette from './util/palette'\n\nconst BASE_ITEM = {\n  stroke: palette.CRIMSON,\n  fill: palette.GREY,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  strokeWidth: 2,\n  tension: 0,\n}\nconst chartHeight = 250\nconst interval = chartHeight / 4\n\nconst AreaTesterVertical: React.SFC = () => (\n  <SingleMarkTester\n    chartWidth={420}\n    chartHeight={chartHeight}\n    chartOrigin={[10, 0]}\n    initialScenegraph={{\n      marktype: 'area',\n      items: [\n        {\n          y: interval * 0,\n          x: 98.18,\n          x2: 400,\n          orient: 'vertical',\n          ...BASE_ITEM,\n        },\n        {\n          y: interval,\n          x: 0,\n          x2: 400,\n          orient: 'vertical',\n          ...BASE_ITEM,\n        },\n        {\n          y: interval * 2,\n          x: 47.27,\n          x2: 400,\n          orient: 'vertical',\n          ...BASE_ITEM,\n        },\n        {\n          y: interval * 3,\n          x: 76.36,\n          x2: 400,\n          orient: 'vertical',\n          ...BASE_ITEM,\n        },\n        {\n          y: interval * 4,\n          x: 25.4545,\n          x2: 400,\n          orient: 'vertical',\n          ...BASE_ITEM,\n        },\n      ],\n    }}\n    sliders={[\n      { name: 'x2', max: 400, min: 0 },\n      { name: 'tension', min: 0, max: 1, step: 0.1 },\n      { name: 'strokeWidth', max: 10 },\n      { name: 'strokeOpacity', max: 1, min: 0, step: 0.1 },\n      { name: 'fillOpacity', max: 1, min: 0, step: 0.1 },\n    ]}\n    dropdowns={[\n      {\n        name: 'interpolate',\n        options: [\n          'basis',\n          'cardinal',\n          'catmull-rom',\n          'linear',\n          'monotone',\n          'natural',\n          'step',\n          'step-after',\n          'step-before',\n        ],\n      },\n    ]}\n    toggles={[{ name: 'defined' }]}\n    updateScenegraph={(update, scenegraph) => {\n      scenegraph.items.forEach((item: any) => {\n        Object.keys(update).forEach(key => (item[key] = update[key]))\n      })\n      return scenegraph\n    }}\n  />\n)\n\nexport default AreaTesterVertical\n","import * as React from 'react'\nimport { SingleMarkTester } from './util/single-mark-tester'\nimport * as palette from './util/palette'\n\nconst BASE_ITEM = {\n  stroke: palette.CRIMSON,\n  fill: palette.GREY,\n}\n\nconst GroupTester: React.SFC = () => (\n  <SingleMarkTester\n    initialScenegraph={{\n      marktype: 'group',\n      items: [\n        {\n          ...BASE_ITEM,\n          clip: false,\n          x: 25,\n          x2: 150,\n          y: 25,\n          y2: 150,\n          width: 150,\n          height: 150,\n          cornerRadius: 0,\n          strokeWidth: 4,\n          items: [\n            {\n              marktype: 'rect',\n              items: [\n                {\n                  x: 75,\n                  y: -10,\n                  width: 10,\n                  height: 20,\n                  stroke: palette.CRIMSON,\n                  strokeWidth: 2,\n                  fill: 'white',\n                },\n                {\n                  x: -5,\n                  y: 50,\n                  width: 50,\n                  height: 50,\n                  stroke: palette.CRIMSON,\n                  strokeWidth: 2,\n                  fill: 'white',\n                },\n                {\n                  x: 100,\n                  y: 100,\n                  width: 75,\n                  height: 85,\n                  stroke: palette.CRIMSON,\n                  strokeWidth: 2,\n                  fill: 'white',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    }}\n    toggles={[{ name: 'clip' }]}\n    sliders={[\n      { name: 'x' },\n      { name: 'y' },\n      { name: 'width', min: 25, max: 150 },\n      { name: 'height', min: 25, max: 150 },\n      { name: 'cornerRadius', max: 20 },\n      { name: 'strokeWidth', max: 10 },\n    ]}\n  />\n)\n\nexport default GroupTester\n","// tslint:disable jsx-no-lambda\nimport * as React from 'react'\nimport { SingleMarkTester } from './util/single-mark-tester'\nimport * as palette from './util/palette'\n\nconst BASE_ITEM = {\n  stroke: palette.CRIMSON,\n  strokeOpacity: 1,\n  strokeWidth: 1,\n}\n\nconst LineTester: React.SFC = () => (\n  <SingleMarkTester\n    chartWidth={420}\n    chartOrigin={[10, 0]}\n    initialScenegraph={{\n      marktype: 'line',\n      items: [\n        {\n          x: 0,\n          y: 98.18,\n          y2: 200,\n          ...BASE_ITEM,\n        },\n        {\n          x: 80,\n          y: 0,\n          y2: 200,\n          ...BASE_ITEM,\n        },\n        {\n          x: 160,\n          y: 47.27,\n          y2: 200,\n          ...BASE_ITEM,\n        },\n        {\n          x: 240,\n          y: 76.36,\n          y2: 200,\n          ...BASE_ITEM,\n        },\n        {\n          x: 400,\n          y: 25.4545,\n          y2: 200,\n          ...BASE_ITEM,\n        },\n      ],\n    }}\n    sliders={[\n      { name: 'tension', min: 0, max: 1, step: 0.1 },\n      { name: 'strokeWidth', max: 10 },\n      { name: 'strokeOpacity', max: 1, min: 0, step: 0.1 },\n    ]}\n    dropdowns={[\n      {\n        name: 'interpolate',\n        options: [\n          'basis',\n          'cardinal',\n          'catmull-rom',\n          'linear',\n          'monotone',\n          'natural',\n          'step',\n          'step-after',\n          'step-before',\n        ],\n      },\n    ]}\n    updateScenegraph={(update, scenegraph) => {\n      scenegraph.items.forEach((item: any) => {\n        Object.keys(update).forEach(key => (item[key] = update[key]))\n      })\n      return scenegraph\n    }}\n  />\n)\n\nexport default LineTester\n","import * as React from 'react'\nimport { SingleMarkTester } from './util/single-mark-tester'\nimport * as palette from './util/palette'\n\nconst BASE_ITEM = {\n  stroke: palette.CRIMSON,\n  fill: palette.GREY,\n}\n\nconst RectTester: React.SFC = () => (\n  <SingleMarkTester\n    initialScenegraph={{\n      marktype: 'rect',\n      items: [\n        {\n          ...BASE_ITEM,\n          x: 50,\n          y: 50,\n          width: 75,\n          height: 75,\n          cornerRadius: 0,\n          stroke: palette.CRIMSON,\n          fill: palette.GREY,\n          strokeWidth: 4,\n        },\n      ],\n    }}\n    sliders={[\n      { name: 'x' },\n      { name: 'y' },\n      { name: 'width' },\n      { name: 'height' },\n      { name: 'cornerRadius', max: 15 },\n      { name: 'strokeWidth', max: 10 },\n    ]}\n  />\n)\n\nexport default RectTester\n","import ArcTester from './arc-tester'\nimport AreaTesterHorizontal from './area-tester-horizontal'\nimport AreaTesterVertical from './area-tester-vertical'\nimport GroupTester from './group-tester'\nimport ImageTester from './image-tester'\nimport LineTester from './line-tester'\nimport PathTester from './path-tester'\nimport ShapeTester from './shape-tester'\nimport RectTester from './rect-tester'\nimport RuleTester from './rule-tester'\nimport TextTester from './text-tester'\n\nexport default {\n  'arc-tester': ArcTester,\n  'area-tester-horizontal': AreaTesterHorizontal,\n  'area-tester-vertical': AreaTesterVertical,\n  'group-tester': GroupTester,\n  'image-tester': ImageTester,\n  'line-tester': LineTester,\n  'path-tester': PathTester,\n  'shape-tester': ShapeTester,\n  'rect-tester': RectTester,\n  'rule-tester': RuleTester,\n  'text-tester': TextTester,\n}\n","import * as React from 'react'\n\nconst ImageTester: React.SFC = () => <div>TODO</div>\n\nexport default ImageTester\n","import * as React from 'react'\n\nconst PathTester: React.SFC = () => <div>TODO</div>\n\nexport default PathTester\n","import * as React from 'react'\n\nconst ShapeTester: React.SFC = () => <div>TODO</div>\n\nexport default ShapeTester\n","import * as React from 'react'\nimport { SingleMarkTester } from './util/single-mark-tester'\nimport * as palette from './util/palette'\n\nconst RuleTester: React.SFC = () => (\n  <SingleMarkTester\n    initialScenegraph={{\n      marktype: 'rule',\n      items: [\n        {\n          x: 50,\n          y: 50,\n          x2: 100,\n          y2: 100,\n          stroke: palette.CRIMSON,\n          strokeWidth: 4,\n          strokeCap: 'butt',\n          strokeDash: '[1,0]',\n        },\n      ],\n    }}\n    sliders={[\n      { name: 'x' },\n      { name: 'y' },\n      { name: 'x2' },\n      { name: 'y2' },\n      { name: 'strokeWidth', max: 10 },\n    ]}\n    dropdowns={[\n      { name: 'strokeCap', options: ['butt', 'round', 'square'] },\n      {\n        name: 'strokeDash',\n        options: ['1,0', '8,8', '4,4', '4,2', '2,1', '1,1'],\n      },\n    ]}\n  />\n)\n\nexport default RuleTester\n","// tslint:disable jsx-no-lambda\nimport * as React from 'react'\nimport { SingleMarkTester } from './util/single-mark-tester'\n\nconst TextTester: React.SFC = () => (\n  <SingleMarkTester\n    initialScenegraph={{\n      marktype: 'group',\n      items: [\n        {\n          width: 200,\n          height: 200,\n          items: [\n            {\n              marktype: 'symbol',\n              items: [\n                {\n                  fill: 'firebrick',\n                  size: 25,\n                  x: 100,\n                  y: 100,\n                },\n              ],\n            },\n            {\n              marktype: 'text',\n              items: [\n                {\n                  text: 'Text Label',\n                  x: 100,\n                  y: 100,\n                  font: 'sans-serif',\n                  fontSize: 18,\n                  fill: 'black',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    }}\n    sliders={[\n      { name: 'x' },\n      { name: 'y' },\n      { name: 'dx', min: -20, max: 20 },\n      { name: 'dy', min: -20, max: 20 },\n      { name: 'angle', min: -180, max: 180 },\n      { name: 'fontSize', min: 1, max: 36 },\n      { name: 'limit', min: 0, max: 150 },\n      { name: 'radius', max: 50 },\n      { name: 'theta', max: 6.28, step: 0.1 },\n    ]}\n    dropdowns={[\n      { name: 'align', options: ['left', 'center', 'right'] },\n      {\n        name: 'baseline',\n        options: ['alphabetic', 'top', 'middle', 'bottom'],\n      },\n      { name: 'font', options: ['sans-serif', 'serif', 'monospace'] },\n      { name: 'fontWeight', options: ['normal', 'bold'] },\n      { name: 'fontStyle', options: ['normal', 'italic'] },\n    ]}\n    getParam={(name, scenegraph) =>\n      // Get item parameters off of the textmark's first item, which is nested a bit\n      scenegraph.items[0].items[1].items[0][name]\n    }\n    updateScenegraph={(update, scenegraph) => {\n      const groupMark = scenegraph\n      const firstGroup = scenegraph.items[0]\n      const symbolMark = firstGroup.items[0]\n      const symbolItem = symbolMark.items[0]\n      const textMark = firstGroup.items[1]\n      const textItem = textMark.items[0]\n      return {\n        ...groupMark,\n        items: [\n          {\n            ...firstGroup,\n            items: [\n              {\n                ...symbolMark,\n                items: [\n                  {\n                    ...symbolItem,\n                    x: update.x || symbolItem.x,\n                    y: update.y || symbolItem.y,\n                  },\n                ],\n              },\n              {\n                ...textMark,\n                items: [\n                  {\n                    ...textItem,\n                    ...update,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      }\n    }}\n  />\n)\n\nexport default TextTester\n","import charts from './charts'\nimport markTesters from './mark-testers'\n\nexport default {\n  ...charts,\n  ...markTesters,\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport components from '../examples'\n\n// tslint:disable-next-line\nconst rehypeReact = require('rehype-react')\n\nconst renderAst = new rehypeReact({\n  createElement: React.createElement,\n  components,\n}).Compiler\n\nexport interface DocProps {\n  docPage: {\n    htmlAst: any\n  }\n}\n\nfunction renderDocPage(doc: any) {\n  try {\n    return renderAst(doc)\n  } catch (err) {\n    // tslint:disable-next-line\n    console.log('error rendering doc page', err)\n  }\n}\n\nconst Doc: React.SFC<DocProps> = ({ docPage }) => (\n  <Container>\n    <Gutter />\n    <Content>{renderDocPage(docPage.htmlAst)}</Content>\n    <Gutter />\n  </Container>\n)\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst Gutter = styled.div`\n  flex: 1;\n`\n\nconst Content = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default Doc\n"],"sourceRoot":""}