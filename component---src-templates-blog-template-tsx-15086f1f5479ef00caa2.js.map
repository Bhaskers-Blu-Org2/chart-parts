{"version":3,"sources":["webpack:///./src/templates/blogTemplate.tsx","webpack:///./src/components/post.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_sidebar__WEBPACK_IMPORTED_MODULE_2__","_components_post__WEBPACK_IMPORTED_MODULE_3__","_util_convertGraphqlToc__WEBPACK_IMPORTED_MODULE_4__","arg","_arg$data","data","post","toc","logoTo","sidebar","items","convertGraphqlToc","activePath","location","pathname","_util_renderHtmlAst__WEBPACK_IMPORTED_MODULE_1__","Post","_ref","className","frontmatter","date","renderAst","htmlAst"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,8BAAAG,IAAA,IAAAC,EAAAN,EAAA,GAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAYe,SAASI,EAASO,GAAU,IAAAC,EACnBD,EAAIE,KAAlBC,EADiCF,EACjCE,KAAMC,EAD2BH,EAC3BG,IAEd,OACET,EAAA,cAACC,EAAA,EAAD,CACES,OAAO,QACPC,QACEX,EAAA,cAACE,EAAA,EAAD,CACEU,MAAOC,YAAkBJ,GACzBK,WAAYT,EAAIU,SAASC,YAI7BhB,EAAA,cAACG,EAAA,EAAD,CAAMK,KAAMA,KAKX,IAAMT,EAAS,+CC9BtB,IAAAC,EAAAN,EAAA,GAAAuB,EAAAvB,EAAA,KA4BewB,IAXoB,SAAAC,GAAc,IAAXX,EAAWW,EAAXX,KACpC,OACER,EAAA,qBAAKoB,UAAU,uBACbpB,EAAA,qBAAKoB,UAAU,aACbpB,EAAA,wBAAKQ,EAAKa,YAAYC,MACtBtB,EAAA,qBAAKoB,UAAU,qBAAqBG,YAAUf,EAAKgB","file":"component---src-templates-blog-template-tsx-15086f1f5479ef00caa2.js","sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport Post from '../components/post'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\n\nexport default function Template(arg: any) {\n  const { post, toc } = arg.data\n\n  return (\n    <Layout\n      logoTo=\"/blog\"\n      sidebar={\n        <Sidebar\n          items={convertGraphqlToc(toc)}\n          activePath={arg.location.pathname}\n        />\n      }\n    >\n      <Post post={post} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n\n    toc: allMarkdownRemark(\n      filter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            order\n          }\n        }\n      }\n    }\n  }\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport * as React from 'react'\nimport renderAst from '../util/renderHtmlAst'\nexport interface PostProps {\n  post: {\n    html: string\n    htmlAst: any\n    frontmatter: {\n      date: string\n    }\n  }\n}\n\nconst Post: React.SFC<PostProps> = ({ post }) => {\n  return (\n    <div className=\"blog-post-container\">\n      <div className=\"blog-post\">\n        <h2>{post.frontmatter.date}</h2>\n        <div className=\"blog-post-content\">{renderAst(post.htmlAst)}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n"],"sourceRoot":""}