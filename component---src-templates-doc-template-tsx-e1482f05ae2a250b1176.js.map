{"version":3,"sources":["webpack:///./src/components/doc.tsx","webpack:///./src/templates/docTemplate.tsx"],"names":["Container","styled","div","Gutter","Content","Doc","docPage","renderAst","htmlAst","require","DocStructure","memo","toc","pathname","page","title","frontmatter","sidebar","items","convertGraphqlToc","activePath","flat","Template","data","currentPage","location","displayName","pageQuery"],"mappings":"iKAyBMA,EAAYC,IAAOC,IAAV,oEAAGD,CAAH,mBAITE,EAASF,IAAOC,IAAV,iEAAGD,CAAH,aAING,EAAUH,IAAOC,IAAV,kEAAGD,CAAH,gDAMEI,EAxBiB,SAAC,GAAgB,IAAdC,EAAc,EAAdA,QAClC,OACC,kBAACN,EAAD,KACC,kBAACG,EAAD,MACA,kBAACC,EAAD,KAAUG,YAAUD,EAAQE,UAC5B,kBAACL,EAAD,QCpBH,+HAYAM,EAAQ,KAOD,IAAMC,EAA4CC,gBACxD,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAAlB,OACC,kBAAC,IAAD,CACCC,MAAOD,EAAKE,YAAYD,MACxBE,QACC,kBAAC,IAAD,CACCC,MAAOC,YAAkBP,GACzBQ,WAAYP,EACZQ,MAAM,KAIR,kBAAC,EAAD,CAAKf,QAASQ,QAMF,SAASQ,EAAT,GAGP,QAFPC,KAAQX,EAED,EAFCA,IAAKY,EAEN,EAFMA,YACDX,EACL,EADPY,SAAYZ,SAEZ,OAAO,kBAACH,EAAD,CAAcE,IAAKA,EAAKE,KAAMU,EAAaX,SAAUA,IAN7DH,EAAagB,YAAc,eASpB,IAAMC,EAAY","file":"component---src-templates-doc-template-tsx-e1482f05ae2a250b1176.js","sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport renderAst from '../util/renderHtmlAst'\n\nexport interface DocProps {\n\tdocPage: {\n\t\thtmlAst: any\n\t}\n}\n\nconst Doc: React.FC<DocProps> = ({ docPage }) => {\n\treturn (\n\t\t<Container>\n\t\t\t<Gutter />\n\t\t\t<Content>{renderAst(docPage.htmlAst)}</Content>\n\t\t\t<Gutter />\n\t\t</Container>\n\t)\n}\n\nconst Container = styled.div`\n\tdisplay: flex;\n`\n\nconst Gutter = styled.div`\n\tflex: 1;\n`\n\nconst Content = styled.div`\n\tflex: 5;\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nexport default Doc\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport React, { memo } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\nimport Doc from '../components/doc'\n\nrequire('prismjs/themes/prism-tomorrow.css')\n\nexport interface DocStructureProps {\n\ttoc: any\n\tpathname: string\n\tpage: any\n}\nexport const DocStructure: React.FC<DocStructureProps> = memo(\n\t({ toc, pathname, page }) => (\n\t\t<Layout\n\t\t\ttitle={page.frontmatter.title}\n\t\t\tsidebar={\n\t\t\t\t<Sidebar\n\t\t\t\t\titems={convertGraphqlToc(toc)}\n\t\t\t\t\tactivePath={pathname}\n\t\t\t\t\tflat={false}\n\t\t\t\t/>\n\t\t\t}\n\t\t>\n\t\t\t<Doc docPage={page} />\n\t\t</Layout>\n\t)\n)\nDocStructure.displayName = 'DocStructure'\n\nexport default function Template({\n\tdata: { toc, currentPage },\n\tlocation: { pathname },\n}: any) {\n\treturn <DocStructure toc={toc} page={currentPage} pathname={pathname} />\n}\n\nexport const pageQuery = graphql`\n\tquery($path: String!) {\n\t\tcurrentPage: markdownRemark(frontmatter: { path: { eq: $path } }) {\n\t\t\thtml\n\t\t\thtmlAst\n\t\t\tfrontmatter {\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\tpath\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/documentation/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}