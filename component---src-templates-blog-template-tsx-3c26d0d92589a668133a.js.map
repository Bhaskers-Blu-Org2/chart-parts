{"version":3,"sources":["webpack:///./src/templates/blogTemplate.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/util/theme.ts","webpack:///./src/configs/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/util/convertGraphqlToc.ts","webpack:///./src/components/sidebar/createTree.ts","webpack:///./src/components/sidebar/link_tree.tsx","webpack:///./src/components/sidebar/index.tsx","webpack:///./src/components/post.tsx"],"names":["Template","arg","_arg$data","data","post","toc","react__WEBPACK_IMPORTED_MODULE_0__","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","a","logoTo","sidebar","_components_sidebar__WEBPACK_IMPORTED_MODULE_2__","items","Object","_util_convertGraphqlToc__WEBPACK_IMPORTED_MODULE_4__","activePath","location","pathname","_components_post__WEBPACK_IMPORTED_MODULE_3__","pageQuery","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","props","Consumer","staticQueryData","query","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","topts","dist_default","typography_theme_github_dist_default","options","__webpack_exports__","text","fontFamily","bodyFontFamily","join","lineHeight","baseLineHeight","highlight","palette","primary","alt","alt2","alt3","backgrounds","header","206","e","t","n","m","module","exports","__webpack_require__","default","ProdPageRenderer","_ref","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","u","215","i","r","o","l","Container","styled_components__WEBPACK_IMPORTED_MODULE_3__","div","withConfig","displayName","_util_theme__WEBPACK_IMPORTED_MODULE_4__","InnerContainer","Links","Title","h1","TitleLink","gatsby__WEBPACK_IMPORTED_MODULE_2__","Link","OuterLink","_ref$logoTo","react__WEBPACK_IMPORTED_MODULE_1__","_ref2","_ref2$site$siteMetada","site","siteMetadata","title","githubUrl","to","_public_static_d_613551944_json__WEBPACK_IMPORTED_MODULE_0__","BodyContent","styled_components__WEBPACK_IMPORTED_MODULE_4__","ContentContainer","Content","SidebarContainer","_util_theme__WEBPACK_IMPORTED_MODULE_6__","_ref$sidebar","gatsby__WEBPACK_IMPORTED_MODULE_3__","_ref3","description","keywords","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","meta","name","content","_header__WEBPACK_IMPORTED_MODULE_5__","_public_static_d_1361144656_json__WEBPACK_IMPORTED_MODULE_0__","convertGraphqlToc","input","edges","map","pathItems","node","frontmatter","path","split","filter","slice","area","order","childrenOf","tree","keys","k","link_tree_LinkTree","LinkTree","_this","_React$Component","call","this","onExpandCollapseClick","setState","expanded","state","hasBeenManuallyToggled","componentDidMount","_this$props","startsWith","item","childKeys","linkStyle","getLinkStyle","react","CurrentLevel","renderIcon","assign","style","pathKey","renderChildren","_this$props2","depth","marginLeft","fontSize","color","theme","fontWeight","length","IconSpacer","ExpandedIcon","onClick","size","CollapsedIcon","_this$props3","childNodes","ck","sort","b","c","key","Component","styled_components_browser_esm","span","fa","FaAngleDown","FaAngleRight","gatsby_browser_entry","sidebar_Container","forEach","rootItem","rootTree","current","splice","pi","index","pruneTree","newChildren","child","push","apply","result","createTree","subtree","className","date","dangerouslySetInnerHTML","__html","html"],"mappings":"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","file":"component---src-templates-blog-template-tsx-3c26d0d92589a668133a.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport Post from '../components/post'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\n\nexport default function Template(arg: any) {\n  const { post, toc } = arg.data\n\n  return (\n    <Layout\n      logoTo=\"/blog\"\n      sidebar={\n        <Sidebar\n          items={convertGraphqlToc(toc)}\n          activePath={arg.location.pathname}\n        />\n      }\n    >\n      <Post post={post} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    post: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n\n    toc: allMarkdownRemark(\n      filter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            order\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import typography from '../configs/typography'\n\nconst { options: topts } = typography\n\nexport default {\n  text: {\n    fontFamily: topts.bodyFontFamily.join(', ') as string,\n    lineHeight: topts.baseLineHeight as number,\n    highlight: '#2D882D',\n  },\n  palette: {\n    primary: '#AA3939',\n    highlight: '#FFF3B0',\n    alt: '#335C67',\n    alt2: '#E09F3E',\n    alt3: '#540B0E',\n  },\n  backgrounds: {\n    sidebar: '#F6F6F6',\n    header: '#AA3939',\n  },\n}\n","import Typography from 'typography'\nimport theme from 'typography-theme-github'\n\nconst typography = new Typography(theme)\n\nexport default typography\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// tslint:disable jsx-no-lambda\nimport * as React from 'react'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport theme from '../util/theme'\n\nexport interface HeaderProps {\n  logoTo?: string\n}\n\nconst Header: React.SFC<HeaderProps> = ({ logoTo = '/' }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            githubUrl\n          }\n        }\n      }\n    `}\n    render={({\n      site: {\n        siteMetadata: { title, githubUrl },\n      },\n    }: any) => {\n      return (\n        <Container>\n          <InnerContainer>\n            <Title>\n              <TitleLink to={logoTo}>{title}</TitleLink>\n            </Title>\n            <Links>\n              <OuterLink to=\"/\">Home</OuterLink>\n              <OuterLink to=\"/documentation\">Docs</OuterLink>\n              <OuterLink to=\"/blog\">Updates</OuterLink>\n              <OuterLink to={githubUrl}>Github</OuterLink>\n            </Links>\n          </InnerContainer>\n        </Container>\n      )\n    }}\n  />\n)\n\nconst Container = styled.div`\n  background: ${theme.backgrounds.header};\n`\n\nconst InnerContainer = styled.div`\n  margin: 0 auto;\n  max-width: 960;\n  padding: 1.45rem 1.0875rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nconst Links = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst Title = styled.h1`\n  margin: 0;\n`\n\nconst TitleLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n  font-family: ${theme.text.fontFamily};\n  font-weight: 100;\n`\n\nconst OuterLink = styled(Link)`\n  color: white;\n  margin-left: 8px;\n  margin-right: 8px;\n  font-family: ${theme.text.fontFamily};\n  font-weight: 100;\n`\n\nexport default Header\n","// tslint:disable jsx-no-lambda\nimport * as React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport { SiteMetadata } from '../types'\nimport Header from './header'\nimport theme from '../util/theme'\nimport './layout.css'\n\ninterface LayoutQueryResult {\n  site: {\n    siteMetadata: SiteMetadata\n  }\n}\n\nexport interface LayoutProps {\n  sidebar?: JSX.Element\n  logoTo?: string\n}\n\nconst Layout: React.SFC<LayoutProps> = ({\n  sidebar = null,\n  logoTo,\n  children,\n}) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            keywords\n            description\n          }\n        }\n      }\n    `}\n    render={({ site: { siteMetadata } }: LayoutQueryResult) => {\n      const { title } = siteMetadata\n      return (\n        <>\n          <Helmet title={title} meta={getMeta(siteMetadata)} />\n          <BodyContent>\n            <Header />\n            <ContentContainer>\n              {sidebar ? <SidebarContainer>{sidebar}</SidebarContainer> : null}\n              <Content>{children}</Content>\n            </ContentContainer>\n          </BodyContent>\n        </>\n      )\n    }}\n  />\n)\n\nfunction getMeta({ description, keywords }: SiteMetadata) {\n  return [\n    { name: 'description', content: description },\n    { name: 'keywords', content: keywords.join(', ') },\n  ]\n}\n\nconst BodyContent = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  flex: 1;\n  padding: 0;\n  margin: 0;\n`\n\nconst Content = styled.div`\n  margin: auto;\n  padding: 0px 1.0875rem 1.45rem;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  flex: 5;\n  padding: 1.45rem;\n  overflow: scroll;\n`\n\nconst SidebarContainer = styled.div`\n  display: flex;\n  flex: 1;\n  padding: 1rem;\n  background: ${theme.backgrounds.sidebar};\n`\n\nexport default Layout\n","import { SidebarItem } from '../components/sidebar'\n\nexport default function convertGraphqlToc(input: {\n  edges: Array<{\n    node: {\n      frontmatter: {\n        path: string\n        title: string\n        order: number\n      }\n    }\n  }>\n}): SidebarItem[] {\n  return input.edges.map(e => {\n    const pathItems = e.node.frontmatter.path\n      .split('/')\n      .filter(t => !!t)\n      .slice(1)\n\n    return {\n      path: e.node.frontmatter.path,\n      pathItems,\n      title: e.node.frontmatter.title,\n      area: pathItems[0],\n      order: e.node.frontmatter.order,\n    }\n  })\n}\n","import { SidebarItem, TreeNode } from './interfaces'\n\n/**\n * Creates a nested tree of sidebar items given a flat array of items\n * @param items The sidebar items to create the tree from\n */\nexport function createTree(items: SidebarItem[]) {\n  const tree: { [key: string]: TreeNode } = {}\n\n  // Insert each item into the tree\n  items.forEach(i => insertItemIntoTree(i, tree))\n  Object.keys(tree).forEach(key => {\n    const subtree = tree[key]\n    pruneTree(subtree)\n  })\n\n  return Object.keys(tree)\n    .map(k => tree[k])\n    .filter(t => !!t)\n    .sort((a, b) => (a as any).item.order - (b as any).item.order)\n}\n\nfunction pruneTree(tree: TreeNode): TreeNode {\n  if (isLeaf(tree)) {\n    return tree\n  }\n  const children = childrenOf(tree).map(c => pruneTree(c))\n\n  const newChildren: TreeNode[] = []\n  children.forEach(child => {\n    if (child.item === undefined) {\n      newChildren.push(...childrenOf(child))\n    } else {\n      newChildren.push(child)\n    }\n  })\n\n  tree.children = childHash(newChildren)\n  return tree\n}\n\nfunction childHash(children: TreeNode[]) {\n  const result: { [key: string]: TreeNode } = {}\n  children.forEach(child => (result[child.pathKey] = child))\n  return result\n}\n\nfunction childrenOf(tree: TreeNode) {\n  return Object.keys(tree.children).map(k => tree.children[k])\n}\n\nfunction isLeaf(tree: TreeNode) {\n  return childrenOf(tree).length === 0\n}\n\nfunction insertItemIntoTree(\n  item: SidebarItem,\n  tree: { [key: string]: TreeNode }\n) {\n  // Split the path up into \"items\" which will be used to create the three\n  const pathItems = item.path\n    .split('/')\n    .filter(t => !!t)\n    .slice(1)\n\n  const rootItem = pathItems[0]\n  let rootTree = tree[rootItem]\n  if (!rootTree) {\n    rootTree = tree[rootItem] = {\n      item: undefined as any,\n      pathKey: rootItem,\n      children: {},\n    }\n  }\n\n  if (pathItems.length === 1) {\n    rootTree.item = item\n  } else {\n    insertPathItemIntoTree(item, pathItems, rootTree)\n  }\n}\n\nfunction insertPathItemIntoTree(\n  item: SidebarItem,\n  pathItems: string[],\n  tree: TreeNode\n) {\n  // skip the first item since it's been added to the root hash already\n  let current = tree\n  pathItems.splice(1).forEach((pi, index) => {\n    if (!current.children[pi]) {\n      current.children[pi] = {\n        item: undefined as any,\n        pathKey: pi,\n        children: {},\n      }\n    }\n    current = current.children[pi]\n  })\n  current.item = item\n}\n","// tslint:disable no-var-requires no-submodule-imports\nimport * as React from 'react'\nimport { TreeNode } from './interfaces'\nimport { Link as RawLink } from 'gatsby'\nimport styled from 'styled-components'\nimport theme from '../../util/theme'\nimport {\n  FaAngleDown as ExpandedIconRaw,\n  FaAngleRight as CollapsedIconRaw,\n} from 'react-icons/fa'\n\nexport interface LinkTreeProps {\n  node: TreeNode\n  depth: number\n  expanded?: boolean\n  activePath: string\n}\n\nconst ToggleSize = 15\n\nexport interface LinkTreeState {\n  expanded: boolean\n  hasBeenManuallyToggled: boolean\n}\n\nexport default class LinkTree extends React.Component<\n  LinkTreeProps,\n  LinkTreeState\n> {\n  constructor(props: LinkTreeProps) {\n    super(props)\n    this.state = { expanded: !!props.expanded, hasBeenManuallyToggled: false }\n  }\n\n  public componentDidMount() {\n    const { activePath, node } = this.props\n    if (activePath.startsWith(node.item.path)) {\n      this.setState({ expanded: true })\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const { node } = this.props\n    const { item, children } = node\n    if (!item) {\n      return null\n    }\n\n    const childKeys = Object.keys(children)\n    const linkStyle = this.getLinkStyle()\n\n    return (\n      <Container>\n        <CurrentLevel>\n          {this.renderIcon(childKeys)}\n          <Link to={item.path} {...{ style: linkStyle }}>\n            {item.title || node.pathKey}\n          </Link>\n        </CurrentLevel>\n        {this.renderChildren(childKeys)}\n      </Container>\n    )\n  }\n\n  private getLinkStyle(): React.CSSProperties {\n    const {\n      activePath,\n      depth,\n      node: { item },\n    } = this.props\n\n    const marginLeft = 15 + depth * 15\n    const fontSize = 16 - depth * 2\n    const linkStyle: React.CSSProperties = {\n      marginLeft,\n      fontSize,\n    }\n\n    if (activePath === item.path) {\n      linkStyle.color = theme.text.highlight\n      linkStyle.fontWeight = 500\n    }\n\n    return linkStyle\n  }\n\n  private renderIcon(childKeys: string[]) {\n    if (childKeys.length === 0) {\n      return <IconSpacer />\n    } else if (this.state.expanded) {\n      return (\n        <ExpandedIcon onClick={this.onExpandCollapseClick} size={ToggleSize} />\n      )\n    } else {\n      return (\n        <CollapsedIcon onClick={this.onExpandCollapseClick} size={ToggleSize} />\n      )\n    }\n  }\n\n  private renderChildren(childKeys: string[]) {\n    const { node, depth, activePath } = this.props\n    const { expanded } = this.state\n    if (!expanded) {\n      return null\n    }\n\n    // Get the nodes for the children and sort them\n    const childNodes = childKeys.map(ck => node.children[ck])\n    childNodes.sort((a, b) => (a.item.order || 0) - (b.item.order || 0))\n\n    return childNodes.map(c => (\n      <LinkTree\n        key={c.pathKey}\n        node={c}\n        depth={depth + 1}\n        activePath={activePath}\n      />\n    ))\n  }\n\n  private onExpandCollapseClick = () => {\n    this.setState({\n      expanded: !this.state.expanded,\n      hasBeenManuallyToggled: true,\n    })\n  }\n}\n\nconst Container = styled.div``\n\nconst IconSpacer = styled.span`\n  width: 15px;\n`\n\nconst CurrentLevel = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nconst ExpandedIcon = styled(ExpandedIconRaw)`\n  color: #999;\n  cursor: pointer;\n  width: 15px;\n`\n\nconst CollapsedIcon = styled(CollapsedIconRaw)`\n  color: #999;\n  cursor: pointer;\n  width: 15px;\n`\n\nconst Link = styled(RawLink)`\n  font-family: ${theme.text.fontFamily};\n  line-height: ${theme.text.lineHeight * 1.5};\n  font-weight: 100;\n  font-size: 16px;\n  display: flex;\n  flex-direction: column;\n`\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { SidebarItem, TreeNode } from './interfaces'\nimport { createTree } from './createTree'\nimport LinkTree from './link_tree'\n\nexport { SidebarItem } from './interfaces'\n\nexport interface SidebarProps {\n  items: SidebarItem[]\n  activePath: string\n}\n\nconst Sidebar: React.SFC<SidebarProps> = ({ items, activePath }) => {\n  const tree: TreeNode[] = createTree(items)\n  return (\n    <Container>\n      {tree\n        .map(subtree => {\n          return !subtree.item ? null : (\n            <LinkTree\n              key={subtree.pathKey}\n              node={subtree}\n              depth={0}\n              activePath={activePath}\n            />\n          )\n        })\n        .filter(t => !!t)}\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`\n\nexport default Sidebar\n","import * as React from 'react'\n\nexport interface PostProps {\n  post: {\n    html: string\n    frontmatter: {\n      date: string\n    }\n  }\n}\n\nconst Post: React.SFC<PostProps> = ({ post }) => (\n  <div className=\"blog-post-container\">\n    <div className=\"blog-post\">\n      <h2>{post.frontmatter.date}</h2>\n      <div\n        className=\"blog-post-content\"\n        dangerouslySetInnerHTML={{ __html: post.html }}\n      />\n    </div>\n  </div>\n)\n\nexport default Post\n"],"sourceRoot":""}