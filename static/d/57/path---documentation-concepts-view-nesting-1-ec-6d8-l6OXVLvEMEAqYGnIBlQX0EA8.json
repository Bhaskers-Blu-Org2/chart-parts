{"data":{"currentPage":{"html":"<h2>View Nesting</h2>\n<p>A common task in charting is to divide the view-space into separate sub-charts. There are a variety of reasons we may want to do this.</p>\n<ul>\n<li>Rendering different chart types in adjacent areas to focus on different aspects of the data</li>\n<li>Rendering a detail view and an overview to allow brush-selection of what's show in detail</li>\n<li>Data faceting and small-multiple views</li>\n</ul>\n<img alt=\"View Nesting\" src=\"/images/view_nesting.png\" height=\"250\">\n<p>To support this, our view model supports the idea of recursively splitting view areas based on data-faceting or manual definition.</p>\n<h2>Group Marks</h2>\n<p><strong>Group</strong> type marks are how we split views into sub-views. Each group instance provides a localized view-space to marks nested within it. Groups, like any other mark type, can be bound rows in a table or defined as singleton instances. When groups are data-bound they may optionally define a \"facet\" parameter to facet the source data table.</p>\n<h3>Singletons</h3>\n<p>Any mark be specified as a <em>singleton</em>, in which case it is unbound to a data-table and emits only a single item. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Faceting</h3>\n<p>Groups may specify a <strong>facet</strong> value that describes how to facet incoming data. In this case, the data is partitioned into a set of sub-tables, each representing a view of the source table, and one group item is emitted per each data partition. When faceting is used, the data partition is given a name and provided to child marks so that they can render based on the faceted view of the data the group provides.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token string\">'my-data'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">facet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'my-data-facet'</span><span class=\"token punctuation\">,</span>\n        partitionOn<span class=\"token punctuation\">:</span> r <span class=\"token operator\">=></span> r<span class=\"token punctuation\">.</span>category<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>Faceting Specification Object</h4>\n<ul>\n<li><strong>name</strong>: The name of the facet table to provide to child-marks.</li>\n<li><strong>partitionOn</strong>: A string describing a field to use as a <em>partition key</em>, or a function that returns a <em>partition key</em> for each row of the incoming data set. The partition key is used to separate the data rows into different partitions.</li>\n<li><strong>transform</strong>: A function that accepts a partition of data and performs final transformation before providing it to chlidren. Clients may use this to define aggregation, layout-transformations, or any other augmentation that is necessary for child marks to render. Default is an identity function.</li>\n</ul>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"View Nesting"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A common task in charting is to divide the view-space into separate sub-charts. There are a variety of reasons we may want to do this."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Rendering different chart types in adjacent areas to focus on different aspects of the data"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Rendering a detail view and an overview to allow brush-selection of what's show in detail"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Data faceting and small-multiple views"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"img","properties":{"alt":"View Nesting","src":"/images/view_nesting.png","height":250},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To support this, our view model supports the idea of recursively splitting view areas based on data-faceting or manual definition."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Group Marks"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Group"}]},{"type":"text","value":" type marks are how we split views into sub-views. Each group instance provides a localized view-space to marks nested within it. Groups, like any other mark type, can be bound rows in a table or defined as singleton instances. When groups are data-bound they may optionally define a \"facet\" parameter to facet the source data table."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Singletons"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Any mark be specified as a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"singleton"}]},{"type":"text","value":", in which case it is unbound to a data-table and emits only a single item. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"js"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"    "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"group"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"singleton"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"true"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Faceting"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Groups may specify a "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"facet"}]},{"type":"text","value":" value that describes how to facet incoming data. In this case, the data is partitioned into a set of sub-tables, each representing a view of the source table, and one group item is emitted per each data partition. When faceting is used, the data partition is given a name and provided to child marks so that they can render based on the faceted view of the data the group provides."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"js"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"    "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"group"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"table"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'my-data'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"facet"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n        name"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'my-data-facet'"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n        partitionOn"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" r "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=>"}]},{"type":"text","value":" r"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"category"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Faceting Specification Object"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"name"}]},{"type":"text","value":": The name of the facet table to provide to child-marks."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"partitionOn"}]},{"type":"text","value":": A string describing a field to use as a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"partition key"}]},{"type":"text","value":", or a function that returns a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"partition key"}]},{"type":"text","value":" for each row of the incoming data set. The partition key is used to separate the data rows into different partitions."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"transform"}]},{"type":"text","value":": A function that accepts a partition of data and performs final transformation before providing it to chlidren. Clients may use this to define aggregation, layout-transformations, or any other augmentation that is necessary for child marks to render. Default is an identity function."}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"date":null,"path":"/documentation/concepts/view_nesting","title":"View Nesting"}},"toc":{"edges":[{"node":{"frontmatter":{"title":"Introduction","path":"/documentation/introduction","order":0}}},{"node":{"frontmatter":{"title":"Architecture","path":"/documentation/introduction/architecture","order":2}}},{"node":{"frontmatter":{"title":"History & Related Work","path":"/documentation/introduction/background","order":1}}},{"node":{"frontmatter":{"title":"The Missing Abstraction","path":"/documentation/introduction/missing_abstraction","order":0}}},{"node":{"frontmatter":{"title":"Axes","path":"/documentation/concepts/axes","order":2}}},{"node":{"frontmatter":{"title":"Marks","path":"/documentation/concepts/marks","order":1}}},{"node":{"frontmatter":{"title":"Concepts","path":"/documentation/concepts","order":1}}},{"node":{"frontmatter":{"title":"Arc","path":"/documentation/concepts/marks/arc","order":0}}},{"node":{"frontmatter":{"title":"Group","path":"/documentation/concepts/marks/group","order":2}}},{"node":{"frontmatter":{"title":"Area","path":"/documentation/concepts/marks/area","order":1}}},{"node":{"frontmatter":{"title":"path","path":"/documentation/concepts/marks/path","order":5}}},{"node":{"frontmatter":{"title":"line","path":"/documentation/concepts/marks/line","order":4}}},{"node":{"frontmatter":{"title":"Rect","path":"/documentation/concepts/marks/rect","order":6}}},{"node":{"frontmatter":{"title":"Rule","path":"/documentation/concepts/marks/rule","order":7}}},{"node":{"frontmatter":{"title":"Text","path":"/documentation/concepts/marks/text","order":9}}},{"node":{"frontmatter":{"title":"Client APIs","path":"/documentation/apis","order":2}}},{"node":{"frontmatter":{"title":"Scales","path":"/documentation/concepts/scales","order":0}}},{"node":{"frontmatter":{"title":"React","path":"/documentation/apis/react","order":2}}},{"node":{"frontmatter":{"title":"View Nesting","path":"/documentation/concepts/view_nesting","order":3}}},{"node":{"frontmatter":{"title":"SceneBuilder","path":"/documentation/apis/builder","order":1}}},{"node":{"frontmatter":{"title":"Bar Chart","path":"/documentation/examples/bar_chart","order":0}}},{"node":{"frontmatter":{"title":"Examples","path":"/documentation/examples","order":3}}},{"node":{"frontmatter":{"title":"Area Chart","path":"/documentation/examples/area_chart","order":4}}},{"node":{"frontmatter":{"title":"Interfaces","path":"/documentation/apis/interfaces","order":0}}},{"node":{"frontmatter":{"title":"Job Voyager","path":"/documentation/examples/job_voyager","order":7}}},{"node":{"frontmatter":{"title":"Line Chart","path":"/documentation/examples/line_chart","order":3}}},{"node":{"frontmatter":{"title":"Grouped Bar Chart","path":"/documentation/examples/grouped_bar_chart","order":1}}},{"node":{"frontmatter":{"title":"API Documentation","path":"/documentation/apidocs","order":7}}},{"node":{"frontmatter":{"title":"Stacked Bar Chart","path":"/documentation/examples/stacked_bar_chart","order":0}}},{"node":{"frontmatter":{"title":"Population Pyramid","path":"/documentation/examples/population_pyramid","order":6}}},{"node":{"frontmatter":{"title":"Stacked Area Chart","path":"/documentation/examples/stacked_area_chart","order":5}}},{"node":{"frontmatter":{"title":"Feedback","path":"/documentation/feedback","order":8}}}]}},"pageContext":{}}