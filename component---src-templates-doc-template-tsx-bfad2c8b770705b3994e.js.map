{"version":3,"sources":["webpack:///./src/templates/docTemplate.tsx","webpack:///./src/components/doc.tsx"],"names":["Template","arg","_arg$data","data","currentPage","toc","react__WEBPACK_IMPORTED_MODULE_0__","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","a","title","frontmatter","sidebar","_components_sidebar__WEBPACK_IMPORTED_MODULE_2__","items","Object","_util_convertGraphqlToc__WEBPACK_IMPORTED_MODULE_3__","activePath","location","pathname","_components_doc__WEBPACK_IMPORTED_MODULE_4__","docPage","__webpack_require__","pageQuery","Container","styled_components__WEBPACK_IMPORTED_MODULE_1__","div","withConfig","displayName","componentId","Gutter","Content","__webpack_exports__","_ref","_util_renderHtmlAst__WEBPACK_IMPORTED_MODULE_2__","htmlAst","563","e","t","n"],"mappings":"8NAUe,SAASA,EAASC,GAAU,IAAAC,EACZD,EAAIE,KAAzBC,EADiCF,EACjCE,YAAaC,EADoBH,EACpBG,IAErB,OACEC,EAAAC,cAACC,EAAAC,GACCC,MAAON,EAAYO,YAAYD,MAC/BE,QACEN,EAAAC,cAACM,EAAAJ,GACCK,MAAOC,OAAAC,EAAAP,EAAAM,CAAkBV,GACzBY,WAAYhB,EAAIiB,SAASC,YAI7Bb,EAAAC,cAACa,EAAAX,GAAIY,QAASjB,KAfpBkB,EAAQ,KAoBD,IAAMC,8ECRPC,EAAYC,EAAAhB,EAAOiB,IAAnBC,YAAAC,YAAA,iBAAAC,YAAA,cAAYJ,EAAZ,kBAIAK,EAASL,EAAAhB,EAAOiB,IAAhBC,YAAAC,YAAA,cAAAC,YAAA,cAASJ,EAAT,YAIAM,EAAUN,EAAAhB,EAAOiB,IAAjBC,YAAAC,YAAA,eAAAC,YAAA,cAAUJ,EAAV,+CAMNO,EAAAvB,EAxBiC,SAAAwB,GAAiB,IAAdZ,EAAcY,EAAdZ,QAClC,OACEf,EAAAC,cAACiB,EAAD,KACElB,EAAAC,cAACuB,EAAD,MACAxB,EAAAC,cAACwB,EAAD,KAAUhB,OAAAmB,EAAAzB,EAAAM,CAAUM,EAAQc,UAC5B7B,EAAAC,cAACuB,EAAD,SAAAM,IAAA,SAAAC,EAAAC,EAAAC","file":"component---src-templates-doc-template-tsx-bfad2c8b770705b3994e.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\nimport Doc from '../components/doc'\n\n// tslint:disable-next-line\nrequire('prismjs/themes/prism-tomorrow.css')\n\nexport default function Template(arg: any) {\n  const { currentPage, toc } = arg.data\n\n  return (\n    <Layout\n      title={currentPage.frontmatter.title}\n      sidebar={\n        <Sidebar\n          items={convertGraphqlToc(toc)}\n          activePath={arg.location.pathname}\n        />\n      }\n    >\n      <Doc docPage={currentPage} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    currentPage: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      htmlAst\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n\n    toc: allMarkdownRemark(\n      filter: { frontmatter: { path: { regex: \"/^/documentation/.*/\" } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            order\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport renderAst from '../util/renderHtmlAst'\n\nexport interface DocProps {\n  docPage: {\n    htmlAst: any\n  }\n}\n\nconst Doc: React.SFC<DocProps> = ({ docPage }) => {\n  return (\n    <Container>\n      <Gutter />\n      <Content>{renderAst(docPage.htmlAst)}</Content>\n      <Gutter />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst Gutter = styled.div`\n  flex: 1;\n`\n\nconst Content = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default Doc\n"],"sourceRoot":""}